for (j in classes) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub)) / dat[dat$species == i, ]$asmblysize.bp * 100
divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
Others <- rowSums(as.matrix(divsum)) / dat[dat$species == i, ]$asmblysize.bp * 100
divsum <- data.frame(LINE, SINE, LTR, DNA, Others, Unknown)
divsum <- t(as.matrix(divsum))
divsum <- divsum[, 1:51]
divsum <- divsum[nrow(divsum):1, ]
if (i == dat$species[1]) {
barplot(divsum,
col = cols,
space = 0,
border = NA,
xlab = NA,
ylab = NA,
ylim = c(0, 1.1*3.049599))
axis(1)
} else {
barplot(divsum,
col = cols,
space = 0,
border = NA,
axes = FALSE,
xlab = NA,
ylab = NA,
ylim = c(0, 1.1*3.049599))
axis(1)
pos <- seq(0.2 *3.049599, 0.85 * 3.049599, length.out = 6)
text(55, pos[6], "LINE", xpd = NA, adj = c(0, 0.5))
text(55, pos[5], "SINE", xpd = NA, adj = c(0, 0.5))
text(55, pos[4], "LTR", xpd = NA, adj = c(0, 0.5))
text(55, pos[3], "DNA", xpd = NA, adj = c(0, 0.5))
text(55, pos[2], "Others", xpd = NA, adj = c(0, 0.5))
text(55, pos[1], "Unclassified", xpd = NA, adj = c(0, 0.5))
points(53, pos[6], pch = 15, col = cols[6], xpd = NA, cex = 1.5)
points(53, pos[5], pch = 15, col = cols[5], xpd = NA, cex = 1.5)
points(53, pos[4], pch = 15, col = cols[4], xpd = NA, cex = 1.5)
points(53, pos[3], pch = 15, col = cols[3], xpd = NA, cex = 1.5)
points(53, pos[2], pch = 15, col = cols[2], xpd = NA, cex = 1.5)
points(53, pos[1], pch = 15, col = cols[1], xpd = NA, cex = 1.5)
}
}
par(mfrow = c(1, 1))
par(mar = c(5.1, 4.1, 4.1, 2.1))
4.1+0.8
# repeat landscape
cols <- c("#e31a1c", "#fb9a99", "#33a02c", "#b2df8a", "#1f78b4", "#a6cee3")
# par(mar = c(3, 4, 1, 7)+0.1)
par(mfrow = c(1, 2))
for (i in dat$species) {
if (i == dat$species[1]) {
par(mar = c(5.1, 4.1, 4.1, 0.8))
} else {
par(mar = c(5.1, 0.7, 4.1, 4.2))
}
species <- i
divsum <- readLines(paste0("../results/divsums/", gsub(" ", "_", i), ".divsum"))
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
classes <- c("LINE", "SINE", "LTR", "DNA", "Div", "Unknown")
for (j in classes) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub)) / dat[dat$species == i, ]$asmblysize.bp * 100
divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
Others <- rowSums(as.matrix(divsum)) / dat[dat$species == i, ]$asmblysize.bp * 100
divsum <- data.frame(LINE, SINE, LTR, DNA, Others, Unknown)
divsum <- t(as.matrix(divsum))
divsum <- divsum[, 1:51]
divsum <- divsum[nrow(divsum):1, ]
if (i == dat$species[1]) {
barplot(divsum,
col = cols,
space = 0,
border = NA,
xlab = NA,
ylab = NA,
ylim = c(0, 1.1*3.049599))
axis(1)
} else {
barplot(divsum,
col = cols,
space = 0,
border = NA,
axes = FALSE,
xlab = NA,
ylab = NA,
ylim = c(0, 1.1*3.049599))
axis(1)
pos <- seq(0.2 *3.049599, 0.85 * 3.049599, length.out = 6)
text(55, pos[6], "LINE", xpd = NA, adj = c(0, 0.5))
text(55, pos[5], "SINE", xpd = NA, adj = c(0, 0.5))
text(55, pos[4], "LTR", xpd = NA, adj = c(0, 0.5))
text(55, pos[3], "DNA", xpd = NA, adj = c(0, 0.5))
text(55, pos[2], "Others", xpd = NA, adj = c(0, 0.5))
text(55, pos[1], "Unclassified", xpd = NA, adj = c(0, 0.5))
points(53, pos[6], pch = 15, col = cols[6], xpd = NA, cex = 1.5)
points(53, pos[5], pch = 15, col = cols[5], xpd = NA, cex = 1.5)
points(53, pos[4], pch = 15, col = cols[4], xpd = NA, cex = 1.5)
points(53, pos[3], pch = 15, col = cols[3], xpd = NA, cex = 1.5)
points(53, pos[2], pch = 15, col = cols[2], xpd = NA, cex = 1.5)
points(53, pos[1], pch = 15, col = cols[1], xpd = NA, cex = 1.5)
}
}
par(mfrow = c(1, 1))
par(mar = c(5.1, 4.1, 4.1, 2.1))
# repeat landscape
cols <- c("#e31a1c", "#fb9a99", "#33a02c", "#b2df8a", "#1f78b4", "#a6cee3")
# par(mar = c(3, 4, 1, 7)+0.1)
par(mfrow = c(1, 2))
for (i in dat$species) {
if (i == dat$species[1]) {
par(mar = c(5.1, 4.1, 4.1, 0.8))
} else {
par(mar = c(5.1, 0.7, 4.1, 4.2))
}
species <- i
divsum <- readLines(paste0("../results/divsums/", gsub(" ", "_", i), ".divsum"))
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
classes <- c("LINE", "SINE", "LTR", "DNA", "Div", "Unknown")
for (j in classes) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub)) / dat[dat$species == i, ]$asmblysize.bp * 100
divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
Others <- rowSums(as.matrix(divsum)) / dat[dat$species == i, ]$asmblysize.bp * 100
divsum <- data.frame(LINE, SINE, LTR, DNA, Others, Unknown)
divsum <- t(as.matrix(divsum))
divsum <- divsum[, 1:51]
divsum <- divsum[nrow(divsum):1, ]
if (i == dat$species[1]) {
barplot(divsum,
col = cols,
space = 0,
border = NA,
xlab = NA,
ylab = NA,
ylim = c(0, 1.1*3.049599))
axis(1)
} else {
barplot(divsum,
col = cols,
space = 0,
border = NA,
axes = FALSE,
xlab = NA,
ylab = NA,
ylim = c(0, 1.1*3.049599))
axis(1)
pos <- seq(0.2 *3.049599, 0.85 * 3.049599, length.out = 6)
text(55, pos[6], "LINE", xpd = NA, adj = c(0, 0.5))
text(55, pos[5], "SINE", xpd = NA, adj = c(0, 0.5))
text(55, pos[4], "LTR", xpd = NA, adj = c(0, 0.5))
text(55, pos[3], "DNA", xpd = NA, adj = c(0, 0.5))
text(55, pos[2], "Others", xpd = NA, adj = c(0, 0.5))
text(55, pos[1], "Unclassified", xpd = NA, adj = c(0, 0.5))
points(53, pos[6], pch = 15, col = cols[6], xpd = NA, cex = 1.5)
points(53, pos[5], pch = 15, col = cols[5], xpd = NA, cex = 1.5)
points(53, pos[4], pch = 15, col = cols[4], xpd = NA, cex = 1.5)
points(53, pos[3], pch = 15, col = cols[3], xpd = NA, cex = 1.5)
points(53, pos[2], pch = 15, col = cols[2], xpd = NA, cex = 1.5)
points(53, pos[1], pch = 15, col = cols[1], xpd = NA, cex = 1.5)
}
}
par(mfrow = c(1, 1))
par(mar = c(5.1, 4.1, 4.1, 2.1))
# repeat landscape
cols <- c("#e31a1c", "#fb9a99", "#33a02c", "#b2df8a", "#1f78b4", "#a6cee3")
# par(mar = c(3, 4, 1, 7)+0.1)
par(mfrow = c(1, 2))
for (i in dat$species) {
if (i == dat$species[1]) {
par(mar = c(5.1, 4.1, 4.1, 0.8))
} else {
par(mar = c(5.1, 0.7, 4.1, 4.2))
}
species <- i
divsum <- readLines(paste0("../results/divsums/", gsub(" ", "_", i), ".divsum"))
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
classes <- c("LINE", "SINE", "LTR", "DNA", "Div", "Unknown")
for (j in classes) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub)) / dat[dat$species == i, ]$asmblysize.bp * 100
divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
Others <- rowSums(as.matrix(divsum)) / dat[dat$species == i, ]$asmblysize.bp * 100
divsum <- data.frame(LINE, SINE, LTR, DNA, Others, Unknown)
divsum <- t(as.matrix(divsum))
divsum <- divsum[, 1:51]
divsum <- divsum[nrow(divsum):1, ]
if (i == dat$species[1]) {
barplot(divsum,
col = cols,
space = 0,
border = NA,
xlab = NA,
ylab = NA,
ylim = c(0, 1.1*3.049599))
axis(1)
} else {
barplot(divsum,
col = cols,
space = 0,
border = NA,
axes = FALSE,
xlab = NA,
ylab = NA,
ylim = c(0, 1.1*3.049599))
axis(1)
pos <- seq(0.3 * 3.049599, 0.95 * 3.049599, length.out = 6)
text(55, pos[6], "LINE", xpd = NA, adj = c(0, 0.5))
text(55, pos[5], "SINE", xpd = NA, adj = c(0, 0.5))
text(55, pos[4], "LTR", xpd = NA, adj = c(0, 0.5))
text(55, pos[3], "DNA", xpd = NA, adj = c(0, 0.5))
text(55, pos[2], "Others", xpd = NA, adj = c(0, 0.5))
text(55, pos[1], "Unclassified", xpd = NA, adj = c(0, 0.5))
points(53, pos[6], pch = 15, col = cols[6], xpd = NA, cex = 1.5)
points(53, pos[5], pch = 15, col = cols[5], xpd = NA, cex = 1.5)
points(53, pos[4], pch = 15, col = cols[4], xpd = NA, cex = 1.5)
points(53, pos[3], pch = 15, col = cols[3], xpd = NA, cex = 1.5)
points(53, pos[2], pch = 15, col = cols[2], xpd = NA, cex = 1.5)
points(53, pos[1], pch = 15, col = cols[1], xpd = NA, cex = 1.5)
}
}
par(mfrow = c(1, 1))
par(mar = c(5.1, 4.1, 4.1, 2.1))
# repeat landscape
cols <- c("#e31a1c", "#fb9a99", "#33a02c", "#b2df8a", "#1f78b4", "#a6cee3")
# par(mar = c(3, 4, 1, 7)+0.1)
par(mfrow = c(1, 2))
for (i in dat$species) {
if (i == dat$species[1]) {
par(mar = c(5.1, 4.1, 4.1, 0.8))
} else {
par(mar = c(5.1, 0.7, 4.1, 4.2))
}
species <- i
divsum <- readLines(paste0("../results/divsums/", gsub(" ", "_", i), ".divsum"))
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
classes <- c("LINE", "SINE", "LTR", "DNA", "Div", "Unknown")
for (j in classes) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub)) / dat[dat$species == i, ]$asmblysize.bp * 100
divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
Others <- rowSums(as.matrix(divsum)) / dat[dat$species == i, ]$asmblysize.bp * 100
divsum <- data.frame(LINE, SINE, LTR, DNA, Others, Unknown)
divsum <- t(as.matrix(divsum))
divsum <- divsum[, 1:51]
divsum <- divsum[nrow(divsum):1, ]
if (i == dat$species[1]) {
barplot(divsum,
col = cols,
space = 0,
border = NA,
xlab = NA,
ylab = NA,
ylim = c(0, 1.1*3.049599))
axis(1)
} else {
barplot(divsum,
col = cols,
space = 0,
border = NA,
axes = FALSE,
xlab = NA,
ylab = NA,
ylim = c(0, 1.1*3.049599))
axis(1)
pos <- seq(0.3 * 3.049599, 0.95 * 3.049599, length.out = 6)
text(52, pos[6], "LINE", xpd = NA, adj = c(0, 0.5))
text(52, pos[5], "SINE", xpd = NA, adj = c(0, 0.5))
text(52, pos[4], "LTR", xpd = NA, adj = c(0, 0.5))
text(52, pos[3], "DNA", xpd = NA, adj = c(0, 0.5))
text(52, pos[2], "Others", xpd = NA, adj = c(0, 0.5))
text(52, pos[1], "Unclassified", xpd = NA, adj = c(0, 0.5))
points(50, pos[6], pch = 15, col = cols[6], xpd = NA, cex = 1.5)
points(50, pos[5], pch = 15, col = cols[5], xpd = NA, cex = 1.5)
points(50, pos[4], pch = 15, col = cols[4], xpd = NA, cex = 1.5)
points(50, pos[3], pch = 15, col = cols[3], xpd = NA, cex = 1.5)
points(50, pos[2], pch = 15, col = cols[2], xpd = NA, cex = 1.5)
points(50, pos[1], pch = 15, col = cols[1], xpd = NA, cex = 1.5)
}
}
par(mfrow = c(1, 1))
par(mar = c(5.1, 4.1, 4.1, 2.1))
# repeat landscape
cols <- c("#e31a1c", "#fb9a99", "#33a02c", "#b2df8a", "#1f78b4", "#a6cee3")
# par(mar = c(3, 4, 1, 7)+0.1)
par(mfrow = c(1, 2))
for (i in dat$species) {
if (i == dat$species[1]) {
par(mar = c(5.1, 4.1, 4.1, 0.8))
} else {
par(mar = c(5.1, 0.7, 4.1, 4.2))
}
species <- i
divsum <- readLines(paste0("../results/divsums/", gsub(" ", "_", i), ".divsum"))
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
classes <- c("LINE", "SINE", "LTR", "DNA", "Div", "Unknown")
for (j in classes) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub)) / dat[dat$species == i, ]$asmblysize.bp * 100
divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
Others <- rowSums(as.matrix(divsum)) / dat[dat$species == i, ]$asmblysize.bp * 100
divsum <- data.frame(LINE, SINE, LTR, DNA, Others, Unknown)
divsum <- t(as.matrix(divsum))
divsum <- divsum[, 1:51]
divsum <- divsum[nrow(divsum):1, ]
if (i == dat$species[1]) {
barplot(divsum,
col = cols,
space = 0,
border = NA,
xlab = NA,
ylab = NA,
ylim = c(0, 1.1*3.049599))
axis(1)
} else {
barplot(divsum,
col = cols,
space = 0,
border = NA,
axes = FALSE,
xlab = NA,
ylab = NA,
ylim = c(0, 1.1*3.049599))
axis(1)
pos <- seq(0.3 * 3.049599, 0.95 * 3.049599, length.out = 6)
text(47, pos[6], "LINE", xpd = NA, adj = c(0, 0.5))
text(47, pos[5], "SINE", xpd = NA, adj = c(0, 0.5))
text(47, pos[4], "LTR", xpd = NA, adj = c(0, 0.5))
text(47, pos[3], "DNA", xpd = NA, adj = c(0, 0.5))
text(47, pos[2], "Others", xpd = NA, adj = c(0, 0.5))
text(47, pos[1], "Unclassified", xpd = NA, adj = c(0, 0.5))
points(45, pos[6], pch = 15, col = cols[6], xpd = NA, cex = 1.5)
points(45, pos[5], pch = 15, col = cols[5], xpd = NA, cex = 1.5)
points(45, pos[4], pch = 15, col = cols[4], xpd = NA, cex = 1.5)
points(45, pos[3], pch = 15, col = cols[3], xpd = NA, cex = 1.5)
points(45, pos[2], pch = 15, col = cols[2], xpd = NA, cex = 1.5)
points(45, pos[1], pch = 15, col = cols[1], xpd = NA, cex = 1.5)
}
}
par(mfrow = c(1, 1))
par(mar = c(5.1, 4.1, 4.1, 2.1))
# filter data
library(data.table)
library(beeswarm)
library(viridis)
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.8, ]
dat <- dat[!duplicated(dat$species), ]
dat <- dat[!is.na(dat$chromnum.1n), ]
dat <- na.omit(dat[, c("species", "clade", "rsq", "asmblysize.Mb")])
names(dat)[names(dat) == "asmblysize.Mb"] <- "asmblysize.bp"
dat$asmblysize.bp <- dat$asmblysize.bp * 1000000
files <- list.files("../results/divsums")
masked.sp <- gsub("_", " ", gsub(".divsum$", "", files))
int <- intersect(masked.sp, dat$species)
dat <- dat[dat$species %in% int, ]
dat <- dat[dat$species %in% c("Bos taurus", "Peromyscus maniculatus bairdii"), ]
# repeat landscape
cols <- c("#e31a1c", "#fb9a99", "#33a02c", "#b2df8a", "#1f78b4", "#a6cee3")
# par(mar = c(3, 4, 1, 7)+0.1)
par(mfrow = c(1, 2))
for (i in dat$species) {
if (i == dat$species[1]) {
par(mar = c(5.1, 4.1, 4.1, 0.8))
} else {
par(mar = c(5.1, 0.7, 4.1, 4.2))
}
species <- i
divsum <- readLines(paste0("../results/divsums/", gsub(" ", "_", i), ".divsum"))
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
classes <- c("LINE", "SINE", "LTR", "DNA", "Div", "Unknown")
for (j in classes) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub)) / dat[dat$species == i, ]$asmblysize.bp * 100
divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
Others <- rowSums(as.matrix(divsum)) / dat[dat$species == i, ]$asmblysize.bp * 100
divsum <- data.frame(LINE, SINE, LTR, DNA, Others, Unknown)
divsum <- t(as.matrix(divsum))
divsum <- divsum[, 1:51]
divsum <- divsum[nrow(divsum):1, ]
if (i == dat$species[1]) {
barplot(divsum,
col = cols,
space = 0,
border = NA,
xlab = NA,
ylab = NA,
ylim = c(0, 1.1*3.049599))
axis(1)
} else {
barplot(divsum,
col = cols,
space = 0,
border = NA,
axes = FALSE,
xlab = NA,
ylab = NA,
ylim = c(0, 1.1*3.049599))
axis(1)
pos <- seq(0.3 * 3.049599, 0.95 * 3.049599, length.out = 6)
text(47, pos[6], "LINE", xpd = NA, adj = c(0, 0.5))
text(47, pos[5], "SINE", xpd = NA, adj = c(0, 0.5))
text(47, pos[4], "LTR", xpd = NA, adj = c(0, 0.5))
text(47, pos[3], "DNA", xpd = NA, adj = c(0, 0.5))
text(47, pos[2], "Others", xpd = NA, adj = c(0, 0.5))
text(47, pos[1], "Unclassified", xpd = NA, adj = c(0, 0.5))
points(45, pos[6], pch = 15, col = cols[6], xpd = NA, cex = 1.5)
points(45, pos[5], pch = 15, col = cols[5], xpd = NA, cex = 1.5)
points(45, pos[4], pch = 15, col = cols[4], xpd = NA, cex = 1.5)
points(45, pos[3], pch = 15, col = cols[3], xpd = NA, cex = 1.5)
points(45, pos[2], pch = 15, col = cols[2], xpd = NA, cex = 1.5)
points(45, pos[1], pch = 15, col = cols[1], xpd = NA, cex = 1.5)
}
}
par(mfrow = c(1, 1))
par(mar = c(5.1, 4.1, 4.1, 2.1))
# rsq scatter
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.8, ]
dat <- dat[dat$clade %in% c("Mammalia", "Sauria", "Actinopterygii"), ]
dat <- dat[!is.na(dat$chromnum.1n), ]
dat$genecount <- dat$genecount / 1000
horse <- dat[dat$species == "Equus caballus", ]
meerkat <- dat[dat$species == "Suricata suricatta", ]
par(mfrow = c(1, 2))
par(mar = c(5.1, 4.1, 4.1, 0.9))
color <- adjustcolor("#405070", alpha.f = 0.7)
plot(horse$size.Mb,
horse$genecount,
pch = 16,
cex = 0.8,
col = color,
xlab = NA,
ylab = "Gene count (thousands)")
abline(glm(genecount ~ size.Mb, data = horse), lwd = 1.5, col = color)
par(mar = c(5.1, 2.9, 4.1, 2.1))
color <- adjustcolor("#405070", alpha.f = 0.7)
plot(meerkat$size.Mb,
meerkat$genecount,
pch = 16,
cex = 0.8,
col = color,
xlab = NA,
ylab = NA)
abline(glm(genecount ~ size.Mb, data = meerkat), lwd = 1.5, col = color)
text(-40, -0.01, "Chromosome size (Mb)", xpd = NA, adj = 0)
par(mfrow = c(1, 1))
par(mar = c(5.1, 4.1, 4.1, 2.1))
