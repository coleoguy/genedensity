dat <- read.csv("../../data/data.csv")
# combine raw contig results
library(data.table)
dir <- "../../results/indiv.contigs"
files <- paste0(dir, "/",  list.files(dir))
contigs <- lapply(files, fread)
contigs <- as.data.frame(rbindlist((contigs), fill = TRUE))
# parse by contig size
contigs <- contigs[contigs$size.Mb >= 10, ]
# remove species with less than 3 contigs
rm <- names(table(contigs$species)[table(contigs$species) < 3])
contigs <- contigs[!(contigs$species %in% rm), ]
df <- data.frame()
# contig sum/assembly size ratio threshold
# for (thrs in seq(from = 0, to = 1, by = 0.01)) {
for (thrs in c(0.9)) {
# for (thrs in c(0.95)) {
# remove species if sum of contig sizes is not within some multiple of assembly size
parsed <- data.frame()
for (z in unique(contigs$species)) {
sub <- contigs[contigs$species == z, ]
cont <- sum(sub$size.Mb)
total <- contigs[contigs$species == z, ]$asmblysize[1]
if (cont/total >= thrs) {
parsed <- rbind(parsed, sub)
}
}
# calculate stats based on parsed results
sp <- unique(parsed$species)
for (species in sp) {
sub <- parsed[which(parsed$species == species), ]
# fit <- summary(glm(sub$genecount ~ sub$size.Mb))
# beta <- fit$coefficients[2, 1]
# pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mb))$r.squared
# weightmean <- sum(sub$genedens * sub$size.Mb) / sum(sub$size.Mb)
# weightsd <- sqrt(sum(sub$size.Mb * (sub$genedens - weightmean)^2) / sum(sub$size.Mb))
# weightcv <- weightsd / weightmean
stats <- data.frame(species, rsq, thrs)
sub <- merge(sub, stats, by = "species", all = TRUE)
sub <- merge(dat[dat$species == species, ], sub, by = "species", all = TRUE)
df <- rbind(df, sub)
}
}
#assign clades
df$clade <- df$class
df[df$clade %in% "Aves", ]$clade <- "Sauria"
df[df$clade %in% "Reptilia", ]$clade <- "Sauria"
df[!(df$clade %in% c("Actinopterygii", "Mammalia", "Sauria")), ]$clade <- "Others"
# reorder columns
df <- df[, c(18, 1, 19, 2:11, 16:17, 12:15)]
# write csv
write.csv(df, "../../results/parsed.09.csv", row.names = FALSE)
View(df)
dat <- read.csv("../../results/parsed.09.csv")
files <- list.files("../../results/divsums")
sp <- gsub("_", " ", gsub(".divsum$", "", files))
asmbsz <- dat[!duplicated(dat$species), ]
asmbsz <- asmbsz[asmbsz$species %in% sp, ]
asmbsz <- setNames(asmbsz$asmblysize.Mb*1000000, asmbsz$species)
repstats <- data.frame()
lis <- vector("list", length(sp))
for (h in 1:length(sp)) {
species <- sp[h]
# read text file into lines
divsum <- readLines(paste0("../../results/divsums/", files[h]))
# look for the start of relevant information
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
# condense relevant lines into a table
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
# drop columns with all NA
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
lis[[h]] <- colnames(divsum)
}
to.collapse <- sort(unique(
sub("\\..*", "", unique(grep("\\.", unlist(lis), value = TRUE)))
))
others <- unique(grep("\\.", unlist(lis), value = TRUE, invert = TRUE))
others <- others[!others %in% to.collapse]
others <- others[!others %in% "Div"]
for (i in 1:length(sp)) {
species <- sp[i]
# read text file into lines
divsum <- readLines(paste0("../../results/divsums/", files[i]))
# look for the start of relevant information
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
# condense relevant lines into a table
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
# drop columns with all NA
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
# collapse
for (j in to.collapse) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub))
#divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
# record others
for (k in others) {
pat <- paste0("^", k, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub))
assign(k, sums)
}
div <- divsum$Div
divsum <- data.frame(div, mget(to.collapse), mget(others))
# collapse further
to.keep <- c("div", "DNA", "LINE", "LTR", "SINE", "Unknown")
to.sum <- divsum[, colnames(divsum)[!colnames(divsum) %in% to.keep]]
divsum <- divsum[, to.keep]
divsum$others <- rowSums(to.sum)
df <- data.frame(species)
for (l in colnames(divsum)[-1]) {
# proportion
df[[paste0("prop.", tolower(l))]] <- sum(divsum[l] / asmbsz[sp[i]])
# age
df[[paste0("age.", tolower(l))]] <- which(cumsum(divsum[l]) > sum(divsum[l])/2)[1]
}
repstats <- rbind(repstats, df)
}
# reorganize and save results
dat <- merge(dat, repstats, by= "species", all = T)
dat <- dat[order(dat$size.Mb, decreasing = TRUE), ]
dat <- dat[order(dat$species), ]
dat <- dat[order(dat$thrs), ]
write.csv(dat,
"../../results/parsed.09.csv",
row.names = FALSE)
