View(sub)
nrow(sub) > 0
fit <- summary(glm(sub$genecount ~ sub$size.Mbp))
beta <- fit$coefficients[2, 1]
pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mbp))$r.squared
fit <- summary(glm(sub$genecount ~ sub$size.Mbp))
# beta <- fit$coefficients[2, 1]
# pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mbp))$r.squared
# fit <- summary(glm(sub$genecount ~ sub$size.Mbp))
# beta <- fit$coefficients[2, 1]
# pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mbp))$r.squared
# weightmean <- sum(sub$genedens * sub$size.Mbp) / sum(sub$size.Mbp)
# weightsd <- sqrt(sum(sub$size.Mbp * (sub$genedens - weightmean)^2) / sum(sub$size.Mbp))
# weightcv <- weightsd / weightmean
contig.stats <- data.frame(species, rsq)
View(contig.stats)
View(contig.stats)
View(sub)
l <- merge(sub, contig.stats, by = "species", all = TRUE)
View(l)
sub <- merge(sub, contig.stats, by = "species", all = TRUE)
View(sub)
l <- merge(sub, dat[dat$species == species, ], by = "species", all = TRUE)
View(l)
l <- merge(dat[dat$species == species, ], sub, by = "species", all = TRUE)
View(l)
# calculate stats based on parsed results
sp <- unique(parsed$species)
final <- data.frame()
species <- sp[1]
sub <- parsed[which(parsed$species == species), ]
# fit <- summary(glm(sub$genecount ~ sub$size.Mbp))
# beta <- fit$coefficients[2, 1]
# pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mbp))$r.squared
# weightmean <- sum(sub$genedens * sub$size.Mbp) / sum(sub$size.Mbp)
# weightsd <- sqrt(sum(sub$size.Mbp * (sub$genedens - weightmean)^2) / sum(sub$size.Mbp))
# weightcv <- weightsd / weightmean
contig.stats <- data.frame(species, rsq, thrs)
sub <- merge(sub, contig.stats, by = "species", all = TRUE)
View(sub)
# weightmean <- sum(sub$genedens * sub$size.Mbp) / sum(sub$size.Mbp)
# weightsd <- sqrt(sum(sub$size.Mbp * (sub$genedens - weightmean)^2) / sum(sub$size.Mbp))
# weightcv <- weightsd / weightmean
stats <- data.frame(species, rsq, thrs)
sub <- merge(sub, stats, by = "species", all = TRUE)
View(sub)
sub <- parsed[which(parsed$species == species), ]
# fit <- summary(glm(sub$genecount ~ sub$size.Mbp))
# beta <- fit$coefficients[2, 1]
# pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mbp))$r.squared
# weightmean <- sum(sub$genedens * sub$size.Mbp) / sum(sub$size.Mbp)
# weightsd <- sqrt(sum(sub$size.Mbp * (sub$genedens - weightmean)^2) / sum(sub$size.Mbp))
# weightcv <- weightsd / weightmean
stats <- data.frame(species, rsq, thrs)
l <- merge(sub, stats, by = "species", all = TRUE)
View(l)
sub <- merge(sub, stats, by = "species", all = TRUE)
View(sub)
l <- merge(dat[dat$species == species, ], sub, by = "species", all = TRUE)
View(l)
df <- data.frame()
df <- rbind(df, sub)
View(df)
df <- data.frame()
# contig sum/assembly size ratio threshold
for (thrs in seq(from = 0, to = 0.9, by = 0.05)) {
dat <- read.csv("../data/data.csv")
# combine raw contig results
library(data.table)
dir <- "../results/individual_species_results"
files <- paste0(dir, "/",  list.files(dir))
contigs <- lapply(files, fread)
contigs <- as.data.frame(rbindlist((contigs), fill = TRUE))
# parse by contig size
contigs <- contigs[contigs$size.Mbp >= 10, ]
# remove species with less than 3 contigs
rm <- names(table(contigs$species)[table(contigs$species) < 3])
contigs <- contigs[!(contigs$species %in% rm), ]
# remove species if sum of contig sizes is not within some multiple of assembly size
parsed <- data.frame()
for (z in unique(contigs$species)) {
sub <- contigs[contigs$species == z, ]
cont <- sum(sub$size.Mbp)
total <- contigs[contigs$species == z, ]$asmblysize[1]
if (cont/total >= thrs) {
parsed <- rbind(parsed, sub)
}
}
# calculate stats based on parsed results
sp <- unique(parsed$species)
final <- data.frame()
for (species in sp) {
sub <- parsed[which(parsed$species == species), ]
if (nrow(sub) > 0){
# fit <- summary(glm(sub$genecount ~ sub$size.Mbp))
# beta <- fit$coefficients[2, 1]
# pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mbp))$r.squared
# weightmean <- sum(sub$genedens * sub$size.Mbp) / sum(sub$size.Mbp)
# weightsd <- sqrt(sum(sub$size.Mbp * (sub$genedens - weightmean)^2) / sum(sub$size.Mbp))
# weightcv <- weightsd / weightmean
stats <- data.frame(species, rsq)
} else {
rsq <- NA
stats <- data.frame(species, rsq)
}
sub <- merge(sub, stats, by = "species", all = TRUE)
sub <- merge(dat[dat$species == species, ], sub, by = "species", all = TRUE)
df <- rbind(df, sub)
}
df$contsize.cutoff <- thrs
}
df <- rbind(df, sub)
# Zhaobo Hu
# zhaobohu2002@gmail.com
# Description: Parses results and calculates additional statistics
# to summarize contigs for each species
df <- data.frame()
# contig sum/assembly size ratio threshold
for (thrs in seq(from = 0, to = 0.9, by = 0.05)) {
dat <- read.csv("../data/data.csv")
# combine raw contig results
library(data.table)
dir <- "../results/individual_species_results"
files <- paste0(dir, "/",  list.files(dir))
contigs <- lapply(files, fread)
contigs <- as.data.frame(rbindlist((contigs), fill = TRUE))
# parse by contig size
contigs <- contigs[contigs$size.Mbp >= 10, ]
# remove species with less than 3 contigs
rm <- names(table(contigs$species)[table(contigs$species) < 3])
contigs <- contigs[!(contigs$species %in% rm), ]
# remove species if sum of contig sizes is not within some multiple of assembly size
parsed <- data.frame()
for (z in unique(contigs$species)) {
sub <- contigs[contigs$species == z, ]
cont <- sum(sub$size.Mbp)
total <- contigs[contigs$species == z, ]$asmblysize[1]
if (cont/total >= thrs) {
parsed <- rbind(parsed, sub)
}
}
# calculate stats based on parsed results
sp <- unique(parsed$species)
for (species in sp) {
sub <- parsed[which(parsed$species == species), ]
if (nrow(sub) > 0){
# fit <- summary(glm(sub$genecount ~ sub$size.Mbp))
# beta <- fit$coefficients[2, 1]
# pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mbp))$r.squared
# weightmean <- sum(sub$genedens * sub$size.Mbp) / sum(sub$size.Mbp)
# weightsd <- sqrt(sum(sub$size.Mbp * (sub$genedens - weightmean)^2) / sum(sub$size.Mbp))
# weightcv <- weightsd / weightmean
stats <- data.frame(species, rsq)
} else {
rsq <- NA
stats <- data.frame(species, rsq)
}
sub <- merge(sub, stats, by = "species", all = TRUE)
sub <- merge(dat[dat$species == species, ], sub, by = "species", all = TRUE)
df <- rbind(df, sub)
}
df$contsize.cutoff <- thrs
}
View(df)
thrs <- 0
dat <- read.csv("../data/data.csv")
# combine raw contig results
library(data.table)
dir <- "../results/individual_species_results"
files <- paste0(dir, "/",  list.files(dir))
contigs <- lapply(files, fread)
contigs <- as.data.frame(rbindlist((contigs), fill = TRUE))
# parse by contig size
contigs <- contigs[contigs$size.Mbp >= 10, ]
# remove species with less than 3 contigs
rm <- names(table(contigs$species)[table(contigs$species) < 3])
contigs <- contigs[!(contigs$species %in% rm), ]
# remove species if sum of contig sizes is not within some multiple of assembly size
parsed <- data.frame()
for (z in unique(contigs$species)) {
sub <- contigs[contigs$species == z, ]
cont <- sum(sub$size.Mbp)
total <- contigs[contigs$species == z, ]$asmblysize[1]
if (cont/total >= thrs) {
parsed <- rbind(parsed, sub)
}
}
# calculate stats based on parsed results
sp <- unique(parsed$species)
sp <- species[1]
species <- sp[1]
sub <- parsed[which(parsed$species == species), ]
nrow(sub) > 0
# fit <- summary(glm(sub$genecount ~ sub$size.Mbp))
# beta <- fit$coefficients[2, 1]
# pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mbp))$r.squared
# weightmean <- sum(sub$genedens * sub$size.Mbp) / sum(sub$size.Mbp)
# weightsd <- sqrt(sum(sub$size.Mbp * (sub$genedens - weightmean)^2) / sum(sub$size.Mbp))
# weightcv <- weightsd / weightmean
stats <- data.frame(species, rsq)
sub <- merge(sub, stats, by = "species", all = TRUE)
sub <- merge(dat[dat$species == species, ], sub, by = "species", all = TRUE)
View(sub)
df <- rbind(df, sub)
df <- rbind(df, sub)
df <- data.frame()
df <- rbind(df, sub)
View(df)
# Zhaobo Hu
# zhaobohu2002@gmail.com
# Description: Parses results and calculates additional statistics
# to summarize contigs for each species
df <- data.frame()
# contig sum/assembly size ratio threshold
for (thrs in seq(from = 0, to = 0.9, by = 0.05)) {
dat <- read.csv("../data/data.csv")
# combine raw contig results
library(data.table)
dir <- "../results/individual_species_results"
files <- paste0(dir, "/",  list.files(dir))
contigs <- lapply(files, fread)
contigs <- as.data.frame(rbindlist((contigs), fill = TRUE))
# parse by contig size
contigs <- contigs[contigs$size.Mbp >= 10, ]
# remove species with less than 3 contigs
rm <- names(table(contigs$species)[table(contigs$species) < 3])
contigs <- contigs[!(contigs$species %in% rm), ]
# remove species if sum of contig sizes is not within some multiple of assembly size
parsed <- data.frame()
for (z in unique(contigs$species)) {
sub <- contigs[contigs$species == z, ]
cont <- sum(sub$size.Mbp)
total <- contigs[contigs$species == z, ]$asmblysize[1]
if (cont/total >= thrs) {
parsed <- rbind(parsed, sub)
}
}
# calculate stats based on parsed results
sp <- unique(parsed$species)
for (species in sp) {
sub <- parsed[which(parsed$species == species), ]
if (nrow(sub) > 0){
# fit <- summary(glm(sub$genecount ~ sub$size.Mbp))
# beta <- fit$coefficients[2, 1]
# pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mbp))$r.squared
# weightmean <- sum(sub$genedens * sub$size.Mbp) / sum(sub$size.Mbp)
# weightsd <- sqrt(sum(sub$size.Mbp * (sub$genedens - weightmean)^2) / sum(sub$size.Mbp))
# weightcv <- weightsd / weightmean
stats <- data.frame(species, rsq)
} else {
rsq <- NA
stats <- data.frame(species, rsq)
}
sub <- merge(sub, stats, by = "species", all = TRUE)
sub <- merge(dat[dat$species == species, ], sub, by = "species", all = TRUE)
df <- rbind(df, sub)
}
df$contsize.cutoff <- thrs
}
View(df)
seq(from = 0, to = 0.9, by = 0.05)
thrs <- 0
df <- data.frame()
dat <- read.csv("../data/data.csv")
# combine raw contig results
library(data.table)
dir <- "../results/individual_species_results"
files <- paste0(dir, "/",  list.files(dir))
contigs <- lapply(files, fread)
contigs <- as.data.frame(rbindlist((contigs), fill = TRUE))
# parse by contig size
contigs <- contigs[contigs$size.Mbp >= 10, ]
# remove species with less than 3 contigs
rm <- names(table(contigs$species)[table(contigs$species) < 3])
contigs <- contigs[!(contigs$species %in% rm), ]
# remove species if sum of contig sizes is not within some multiple of assembly size
parsed <- data.frame()
for (z in unique(contigs$species)) {
sub <- contigs[contigs$species == z, ]
cont <- sum(sub$size.Mbp)
total <- contigs[contigs$species == z, ]$asmblysize[1]
if (cont/total >= thrs) {
parsed <- rbind(parsed, sub)
}
}
# calculate stats based on parsed results
sp <- unique(parsed$species)
species <- sp[1]
sub <- parsed[which(parsed$species == species), ]
# fit <- summary(glm(sub$genecount ~ sub$size.Mbp))
# beta <- fit$coefficients[2, 1]
# pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mbp))$r.squared
# weightmean <- sum(sub$genedens * sub$size.Mbp) / sum(sub$size.Mbp)
# weightsd <- sqrt(sum(sub$size.Mbp * (sub$genedens - weightmean)^2) / sum(sub$size.Mbp))
# weightcv <- weightsd / weightmean
stats <- data.frame(species, rsq)
sub <- merge(sub, stats, by = "species", all = TRUE)
sub <- merge(dat[dat$species == species, ], sub, by = "species", all = TRUE)
df <- rbind(df, sub)
dat <- read.csv("../data/data.csv")
# combine raw contig results
library(data.table)
dir <- "../results/individual_species_results"
files <- paste0(dir, "/",  list.files(dir))
contigs <- lapply(files, fread)
contigs <- as.data.frame(rbindlist((contigs), fill = TRUE))
# parse by contig size
contigs <- contigs[contigs$size.Mbp >= 10, ]
# remove species with less than 3 contigs
rm <- names(table(contigs$species)[table(contigs$species) < 3])
contigs <- contigs[!(contigs$species %in% rm), ]
df <- data.frame()
# contig sum/assembly size ratio threshold
for (thrs in seq(from = 0, to = 0.9, by = 0.05)) {
# remove species if sum of contig sizes is not within some multiple of assembly size
parsed <- data.frame()
for (z in unique(contigs$species)) {
sub <- contigs[contigs$species == z, ]
cont <- sum(sub$size.Mbp)
total <- contigs[contigs$species == z, ]$asmblysize[1]
if (cont/total >= thrs) {
parsed <- rbind(parsed, sub)
}
}
# calculate stats based on parsed results
sp <- unique(parsed$species)
for (species in sp) {
sub <- parsed[which(parsed$species == species), ]
if (nrow(sub) > 0){
# fit <- summary(glm(sub$genecount ~ sub$size.Mbp))
# beta <- fit$coefficients[2, 1]
# pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mbp))$r.squared
# weightmean <- sum(sub$genedens * sub$size.Mbp) / sum(sub$size.Mbp)
# weightsd <- sqrt(sum(sub$size.Mbp * (sub$genedens - weightmean)^2) / sum(sub$size.Mbp))
# weightcv <- weightsd / weightmean
stats <- data.frame(species, rsq, thrs)
} else {
rsq <- NA
stats <- data.frame(species, rsq, thrs)
}
sub <- merge(sub, stats, by = "species", all = TRUE)
sub <- merge(dat[dat$species == species, ], sub, by = "species", all = TRUE)
df <- rbind(df, sub)
}
}
# Description: Parses results and calculates additional statistics
# to summarize contigs for each species
dat <- read.csv("../data/data.csv")
# combine raw contig results
library(data.table)
dir <- "../results/individual_species_results"
files <- paste0(dir, "/",  list.files(dir))
contigs <- lapply(files, fread)
contigs <- as.data.frame(rbindlist((contigs), fill = TRUE))
# parse by contig size
contigs <- contigs[contigs$size.Mbp >= 10, ]
# remove species with less than 3 contigs
rm <- names(table(contigs$species)[table(contigs$species) < 3])
contigs <- contigs[!(contigs$species %in% rm), ]
df <- data.frame()
# contig sum/assembly size ratio threshold
for (thrs in seq(from = 0, to = 0.1, by = 0.05)) {
# remove species if sum of contig sizes is not within some multiple of assembly size
parsed <- data.frame()
for (z in unique(contigs$species)) {
sub <- contigs[contigs$species == z, ]
cont <- sum(sub$size.Mbp)
total <- contigs[contigs$species == z, ]$asmblysize[1]
if (cont/total >= thrs) {
parsed <- rbind(parsed, sub)
}
}
# calculate stats based on parsed results
sp <- unique(parsed$species)
for (species in sp) {
sub <- parsed[which(parsed$species == species), ]
if (nrow(sub) > 0){
# fit <- summary(glm(sub$genecount ~ sub$size.Mbp))
# beta <- fit$coefficients[2, 1]
# pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mbp))$r.squared
# weightmean <- sum(sub$genedens * sub$size.Mbp) / sum(sub$size.Mbp)
# weightsd <- sqrt(sum(sub$size.Mbp * (sub$genedens - weightmean)^2) / sum(sub$size.Mbp))
# weightcv <- weightsd / weightmean
stats <- data.frame(species, rsq, thrs)
} else {
rsq <- NA
stats <- data.frame(species, rsq, thrs)
}
sub <- merge(sub, stats, by = "species", all = TRUE)
sub <- merge(dat[dat$species == species, ], sub, by = "species", all = TRUE)
df <- rbind(df, sub)
}
}
View(df)
# Zhaobo Hu
# zhaobohu2002@gmail.com
# Description: Parses results and calculates additional statistics
# to summarize contigs for each species
dat <- read.csv("../data/data.csv")
# combine raw contig results
library(data.table)
dir <- "../results/individual_species_results"
files <- paste0(dir, "/",  list.files(dir))
contigs <- lapply(files, fread)
contigs <- as.data.frame(rbindlist((contigs), fill = TRUE))
# parse by contig size
contigs <- contigs[contigs$size.Mbp >= 10, ]
# remove species with less than 3 contigs
rm <- names(table(contigs$species)[table(contigs$species) < 3])
contigs <- contigs[!(contigs$species %in% rm), ]
df <- data.frame()
# contig sum/assembly size ratio threshold
for (thrs in seq(from = 0, to = 0.1, by = 0.05)) {
# remove species if sum of contig sizes is not within some multiple of assembly size
parsed <- data.frame()
for (z in unique(contigs$species)) {
sub <- contigs[contigs$species == z, ]
cont <- sum(sub$size.Mbp)
total <- contigs[contigs$species == z, ]$asmblysize[1]
if (cont/total >= thrs) {
parsed <- rbind(parsed, sub)
}
}
# calculate stats based on parsed results
sp <- unique(parsed$species)
for (species in sp) {
sub <- parsed[which(parsed$species == species), ]
# fit <- summary(glm(sub$genecount ~ sub$size.Mbp))
# beta <- fit$coefficients[2, 1]
# pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mbp))$r.squared
# weightmean <- sum(sub$genedens * sub$size.Mbp) / sum(sub$size.Mbp)
# weightsd <- sqrt(sum(sub$size.Mbp * (sub$genedens - weightmean)^2) / sum(sub$size.Mbp))
# weightcv <- weightsd / weightmean
stats <- data.frame(species, rsq, thrs)
sub <- merge(sub, stats, by = "species", all = TRUE)
sub <- merge(dat[dat$species == species, ], sub, by = "species", all = TRUE)
df <- rbind(df, sub)
}
}
# Zhaobo Hu
# zhaobohu2002@gmail.com
# Description: Parses results and calculates additional statistics
# to summarize contigs for each species
dat <- read.csv("../data/data.csv")
# combine raw contig results
library(data.table)
dir <- "../results/individual_species_results"
files <- paste0(dir, "/",  list.files(dir))
contigs <- lapply(files, fread)
contigs <- as.data.frame(rbindlist((contigs), fill = TRUE))
# parse by contig size
contigs <- contigs[contigs$size.Mbp >= 10, ]
# remove species with less than 3 contigs
rm <- names(table(contigs$species)[table(contigs$species) < 3])
contigs <- contigs[!(contigs$species %in% rm), ]
df <- data.frame()
# contig sum/assembly size ratio threshold
for (thrs in seq(from = 0, to = 0.9, by = 0.05)) {
# remove species if sum of contig sizes is not within some multiple of assembly size
parsed <- data.frame()
for (z in unique(contigs$species)) {
sub <- contigs[contigs$species == z, ]
cont <- sum(sub$size.Mbp)
total <- contigs[contigs$species == z, ]$asmblysize[1]
if (cont/total >= thrs) {
parsed <- rbind(parsed, sub)
}
}
# calculate stats based on parsed results
sp <- unique(parsed$species)
for (species in sp) {
sub <- parsed[which(parsed$species == species), ]
# fit <- summary(glm(sub$genecount ~ sub$size.Mbp))
# beta <- fit$coefficients[2, 1]
# pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mbp))$r.squared
# weightmean <- sum(sub$genedens * sub$size.Mbp) / sum(sub$size.Mbp)
# weightsd <- sqrt(sum(sub$size.Mbp * (sub$genedens - weightmean)^2) / sum(sub$size.Mbp))
# weightcv <- weightsd / weightmean
stats <- data.frame(species, rsq, thrs)
sub <- merge(sub, stats, by = "species", all = TRUE)
sub <- merge(dat[dat$species == species, ], sub, by = "species", all = TRUE)
df <- rbind(df, sub)
}
}
#assign clades
final$clade <- final$class
#assign clades
df$clade <- df$class
df[df$clade %in% "Aves", ]$clade <- "Sauria"
df[df$clade %in% "Reptilia", ]$clade <- "Sauria"
df[!(df$clade %in% c("Actinopterygii", "Mammalia", "Sauria")), ]$clade <- "Others"
names(df)
# reorder columns
final <- df[, c(18, 1, 19, 2:11, 16:17, 12:15)]
# reorder columns
df <- df[, c(18, 1, 19, 2:11, 16:17, 12:15)]
# write csv
write.csv(df, "../results/parsed.csv", row.names = FALSE)
