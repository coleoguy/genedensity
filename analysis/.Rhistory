library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
# terms <- read.csv("../results/parsed.csv")
# terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
# dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
#which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
# dat <- dat[which(dat$lambda.p < 0.05)]
# dat <- dat[which(dat$bp.p < 0.05)]
# dat <- dat[which(dat$sw.p < 0.05)]
# subset and average
dat <- subset(dat, delta > 3 & delta < 9)
dat <- dat[!duplicated(dat), ]
# recalculate
# dat <- rbind(dat, dat[1,])
# dat <- dat[-1,]
rownames(dat) <- make.names(rownames(dat), unique = TRUE)
avg <- model.avg(dat)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
# terms <- read.csv("../results/parsed.csv")
# terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
# dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
#which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
# dat <- dat[which(dat$lambda.p < 0.05)]
# dat <- dat[which(dat$bp.p < 0.05)]
# dat <- dat[which(dat$sw.p < 0.05)]
# subset and average
dat <- subset(dat, delta > 4 & delta < 6)
dat <- dat[!duplicated(dat), ]
# recalculate
# dat <- rbind(dat, dat[1,])
# dat <- dat[-1,]
rownames(dat) <- make.names(rownames(dat), unique = TRUE)
avg <- model.avg(dat)
summary(avg)
confint(avg, full = F)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
# terms <- read.csv("../results/parsed.csv")
# terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
# dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
#which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
# dat <- dat[which(dat$lambda.p < 0.05)]
# dat <- dat[which(dat$bp.p < 0.05)]
# dat <- dat[which(dat$sw.p < 0.05)]
# subset and average
dat <- subset(dat, delta > 3 & delta < 6)
dat <- dat[!duplicated(dat), ]
# recalculate
# dat <- rbind(dat, dat[1,])
# dat <- dat[-1,]
rownames(dat) <- make.names(rownames(dat), unique = TRUE)
avg <- model.avg(dat)
summary(avg)
confint(avg, full = F)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
# terms <- read.csv("../results/parsed.csv")
# terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
# dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
#which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
# dat <- dat[which(dat$lambda.p < 0.05)]
# dat <- dat[which(dat$bp.p < 0.05)]
# dat <- dat[which(dat$sw.p < 0.05)]
# subset and average
dat <- subset(dat, delta > 3 & delta < 7)
dat <- dat[!duplicated(dat), ]
# recalculate
# dat <- rbind(dat, dat[1,])
# dat <- dat[-1,]
rownames(dat) <- make.names(rownames(dat), unique = TRUE)
avg <- model.avg(dat)
summary(avg)
confint(avg, full = F)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
# terms <- read.csv("../results/parsed.csv")
# terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
# dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
#which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
# dat <- dat[which(dat$lambda.p < 0.05)]
# dat <- dat[which(dat$bp.p < 0.05)]
# dat <- dat[which(dat$sw.p < 0.05)]
# subset and average
dat <- subset(dat, delta > 3 & delta < 8)
dat <- dat[!duplicated(dat), ]
# recalculate
# dat <- rbind(dat, dat[1,])
# dat <- dat[-1,]
rownames(dat) <- make.names(rownames(dat), unique = TRUE)
avg <- model.avg(dat)
summary(avg)
confint(avg, full = F)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
# terms <- read.csv("../results/parsed.csv")
# terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
# dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
#which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
# dat <- dat[which(dat$lambda.p < 0.05)]
# dat <- dat[which(dat$bp.p < 0.05)]
# dat <- dat[which(dat$sw.p < 0.05)]
# subset and average
dat <- subset(dat, delta > 3 & delta < 9)
dat <- dat[!duplicated(dat), ]
# recalculate
# dat <- rbind(dat, dat[1,])
# dat <- dat[-1,]
rownames(dat) <- make.names(rownames(dat), unique = TRUE)
avg <- model.avg(dat)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
# subset and average
dat <- subset(dat, delta > 3.1 & delta < 9)
dat <- dat[!duplicated(dat), ]
# recalculate
# dat <- rbind(dat, dat[1,])
# dat <- dat[-1,]
rownames(dat) <- make.names(rownames(dat), unique = TRUE)
avg <- model.avg(dat)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
# subset and average
dat <- subset(dat, delta > 3.4 & delta < 9)
dat <- dat[!duplicated(dat), ]
# recalculate
# dat <- rbind(dat, dat[1,])
# dat <- dat[-1,]
rownames(dat) <- make.names(rownames(dat), unique = TRUE)
avg <- model.avg(dat)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
# subset and average
dat <- subset(dat, delta > 3.3 & delta < 9)
dat <- dat[!duplicated(dat), ]
# recalculate
# dat <- rbind(dat, dat[1,])
# dat <- dat[-1,]
rownames(dat) <- make.names(rownames(dat), unique = TRUE)
avg <- model.avg(dat)
summary(avg)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
# subset and average
dat <- subset(dat, delta > 3.4 & delta < 9.1)
dat <- dat[!duplicated(dat), ]
# recalculate
# dat <- rbind(dat, dat[1,])
# dat <- dat[-1,]
rownames(dat) <- make.names(rownames(dat), unique = TRUE)
avg <- model.avg(dat)
summary(avg)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
# subset and average
dat <- subset(dat, delta > 3.4 & delta < 9.0)
dat <- dat[!duplicated(dat), ]
# recalculate
# dat <- rbind(dat, dat[1,])
# dat <- dat[-1,]
rownames(dat) <- make.names(rownames(dat), unique = TRUE)
avg <- model.avg(dat)
summary(avg)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
# subset and average
dat <- subset(dat, delta > 3.2 & delta < 9.0)
dat <- dat[!duplicated(dat), ]
# recalculate
# dat <- rbind(dat, dat[1,])
# dat <- dat[-1,]
rownames(dat) <- make.names(rownames(dat), unique = TRUE)
avg <- model.avg(dat)
summary(avg)
avg <- model.avg(dat)
summary(avg)
avg <- model.avg(dat)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
# subset and average
dat <- subset(dat, delta < 9.0)
dat <- dat[!duplicated(dat), ]
# recalculate
# dat <- rbind(dat, dat[1,])
# dat <- dat[-1,]
rownames(dat) <- make.names(rownames(dat), unique = TRUE)
avg <- model.avg(dat)
summary(avg)
avg <- model.avg(dat)
?model.avg
unique(dat)
duplicated(dat)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
# subset and average
dat <- subset(dat, delta < 9.0)
dat <- dat[!duplicated(dat), ]
# recalculate
# dat <- rbind(dat, dat[1,])
# dat <- dat[-1,]
rownames(dat) <- make.names(rownames(dat), unique = TRUE)
avg <- model.avg(dat)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
dat@model.calls
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
View(dat)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
any(duplicated(rownames(dat)))
model_coefs <- coef(dat)
model_weights <- dat$weight
new_dat <- data.frame(model_coefs, weight = model_weights)
avg <- model.avg(new_dat)
View(new_dat)
model.avg(new_Dat)
model.avg(new_dat)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
# subset and average
dat <- subset(dat, delta < 9.0)
dat <- dat[!duplicated(dat), ]
# recalculate
# dat <- rbind(dat, dat[1,])
# dat <- dat[-1,]
rownames(dat) <- make.names(rownames(dat), unique = TRUE)
avg <- model.avg(dat)
update.packages("MuMIn")
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
# subset and average
dat <- subset(dat, delta < 9.0)
dat <- dat[!duplicated(dat), ]
# recalculate
# dat <- rbind(dat, dat[1,])
# dat <- dat[-1,]
rownames(dat) <- make.names(rownames(dat), unique = TRUE)
avg <- model.avg(dat)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
# subset and average
dat <- subset(dat, delta < 9.0)
dat <- dat[!duplicated(dat), ]
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
mList <- get.models(dat, subset = TRUE)
mList <- get.models(dat, subset = TRUE)
mList <- get.models(dat, subset = TRUE)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
assignInNamespace(
".modelNames",
function(allTerms, uqTerms) {
paste0("model", seq_along(allTerms))
},
ns = "MuMIn"
)
# Now try model averaging
avg <- model.avg(dat, subset = TRUE)
library(MuMIn)
dat <- readRDS("../results/actinopterygii.8.rds")
assignInNamespace(
".modelNames",
function(allTerms, uqTerms) {
paste0("model", seq_along(allTerms))
},
ns = "MuMIn"
)
avg <- model.avg(dat, subset = delta <= 10)
confint(avg)
library(MuMIn)
dat <- readRDS("../results/sauria.8.rds")
assignInNamespace(
".modelNames",
function(allTerms, uqTerms) {
paste0("model", seq_along(allTerms))
},
ns = "MuMIn"
)
avg <- model.avg(dat, subset = delta <= 10)
confint(avg)
int <- confint(avg, full = FALSE)
estimates <- coef(avg)
terms <- rownames(int)
y <- seq_along(estimates)
plot(y = estimates, x = y, ylim = range(int), pch = 19,
ylab = "Estimate", xlab = NA, axes = FALSE,
main = "Coefficient estimates for model using all species")
segments(y, int[, 1], y, int[, 2], lwd = 2)
axis(2)
axis(1, at = y, labels = terms, las = 2)
abline(h = 0, lty = 2, col = "gray")
box()
sw(avg)
library(MuMIn) # multimodel inference
library(phytools) # load and prune tree
library(caper) # PGLS
library(lmtest) # Breusch-Pagan test
i <- "All"
# subset results
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
terms <- gsub("rep.prop.", "", names(dat)[grep("^rep.prop", names(dat))])
combs <- gsub("rep.age.", "", names(dat)[grep("^rep.age", names(dat))])
dat <- na.omit(dat[, c("species",
"clade",
"rsq",
paste0("rep.prop.", terms),
paste0("rep.age.", combs))])
# subset clades
if (i %in% c("Mammalia", "Actinopterygii", "Sauria")) {
dat <- dat[dat$clade %in% i, ]
}
# prune tree and dataset
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# loop through combinations of repeats; fit PGLS model for each
pgls.models <- other.stats <- data.frame()
View(dat)
library(MuMIn)
dat <- readRDS("../results/sauria.8.rds")
assignInNamespace(
".modelNames",
function(allTerms, uqTerms) {
paste0("model", seq_along(allTerms))
},
ns = "MuMIn"
)
avg <- model.avg(dat, subset = delta <= 10)
View(dat)
library(MuMIn)
dat <- readRDS("../results/sauria.8.rds")
dat <- !duplicated(dat)
library(MuMIn)
dat <- readRDS("../results/sauria.8.rds")
dat <- dat[!duplicated(dat)]
View(dat)
assignInNamespace(
".modelNames",
function(allTerms, uqTerms) {
paste0("model", seq_along(allTerms))
},
ns = "MuMIn"
)
avg <- model.avg(dat, subset = delta <= 10)
library(MuMIn)
dat <- readRDS("../results/actinopterygii.8.rds")
dat <- dat[!duplicated(dat)]
assignInNamespace(
".modelNames",
function(allTerms, uqTerms) {
paste0("model", seq_along(allTerms))
},
ns = "MuMIn"
)
avg <- model.avg(dat, subset = delta <= 10)
confint(avg)
avg_pred <- predict(avg, type = "response")
library(MuMIn)
dat <- readRDS("../results/actinopterygii.8.rds")
dat <- dat[!duplicated(dat)]
assignInNamespace(
".modelNames",
function(allTerms, uqTerms) {
paste0("model", seq_along(allTerms))
},
ns = "MuMIn"
)
avg <- model.avg(dat, subset = delta <= 10, model = "full")
library(MuMIn)
dat <- readRDS("../results/actinopterygii.8.rds")
l <- get.models(dat[1])
?get.models
l <- get.models(dat, subset = 1)[[1]]
library(MuMIn)
dat <- readRDS("../results/all.8.rds")
dat <- dat[!duplicated(dat)]
assignInNamespace(
".modelNames",
function(allTerms, uqTerms) {
paste0("model", seq_along(allTerms))
},
ns = "MuMIn"
)
avg <- model.avg(dat, subset = delta <= 10, model = "full")
avg <- model.avg(dat, subset = delta <= 10)
l <- get.models(dat, subset = 1)[[1]]
cd_in_env <- get("cd", envir = env_assigned)
library(MuMIn)
dat <- readRDS("../results/all.8.rds")
dat <- dat[!duplicated(dat)]
assignInNamespace(
".modelNames",
function(allTerms, uqTerms) {
paste0("model", seq_along(allTerms))
},
ns = "MuMIn"
)
cd_in_env <- get("cd", envir = env_assigned)
View(dat)
View(dat)
# Load your RDS file
models <- readRDS("../results/all.8.rds")
# Loop over each model and list the objects in the formula's environment
for(i in seq_along(models)) {
cat("Model", i, "environment contains:", ls(environment(formula(models[[i]]))), "\n")
}
for(i in seq_along(models)) {
cat("Model", i, "environment contains:", ls(environment(formula(models[[i]]))), "\n")
}
for(i in seq_along(models)) {
mod_formula <- formula(models[[i]])
mod_env <- environment(mod_formula)
cat("Model", i, "environment contains:", ls(envir = mod_env), "\n")
}
for(i in seq_along(models)) {
mod_formula <- formula(models[[i]])
mod_env <- environment(mod_formula)
if("cd" %in% ls(envir = mod_env)) {
cat("Model", i, "has 'cd' in its environment.\n")
} else {
cat("Model", i, "does NOT have 'cd' in its environment.\n")
}
}
str(models[[1]])  # Look at the first model
names(models[[1]])
mod_env <- environment(models[[1]])
print(mod_env)
View(dat)
View(dat)
models[1]
models[[1]]
models_list <- get.models(models, subset = TRUE)
library(MuMIn)
dat <- readRDS("../results/all.8.rds")
dat <- dat[!duplicated(dat)]
assignInNamespace(
".modelNames",
function(allTerms, uqTerms) {
paste0("model", seq_along(allTerms))
},
ns = "MuMIn"
)
avg <- model.avg(dat, subset = delta <= 10)
int <- confint(avg, full = FALSE)
estimates <- coef(avg)
terms <- rownames(int)
y <- seq_along(estimates)
plot(y = estimates, x = y, ylim = range(int), pch = 19,
ylab = "Estimate", xlab = NA, axes = FALSE,
main = "Coefficient estimates for model using all species")
segments(y, int[, 1], y, int[, 2], lwd = 2)
axis(2)
axis(1, at = y, labels = terms, las = 2)
abline(h = 0, lty = 2, col = "gray")
box()
sw(avg)
library(MuMIn)
dat <- readRDS("../results/all.8.rds")
dat <- dat[!duplicated(dat)]
assignInNamespace(
".modelNames",
function(allTerms, uqTerms) {
paste0("model", seq_along(allTerms))
},
ns = "MuMIn"
)
avg <- model.avg(dat, subset = delta <= 10)
int <- confint(avg, full = FALSE)
estimates <- coef(avg)
terms <- rownames(int)
y <- seq_along(estimates)
plot(y = estimates, x = y, ylim = range(int), pch = 19,
ylab = "Estimate", xlab = NA, axes = FALSE,
main = "Coefficient estimates for model using all species")
segments(y, int[, 1], y, int[, 2], lwd = 2)
axis(2)
axis(1, at = y, labels = terms, las = 2)
abline(h = 0, lty = 2, col = "gray")
box()
