for (i in unique(dat$species)) {
sub <- dat[dat$species == i, ]
cl <- unique(sub$clade)
b <- summary(glm(sub$genecount ~ sub$size.Mbp))$coefficients[2, 1]
p <- summary(glm(sub$genecount ~ sub$size.Mbp))$coefficients[2, 4]
sizerange.Mb <- diff(range(sub$size.Mbp))
gnsz.Mb <- unique(sub$asmblysize.Mbp)
lis <- c(lis, list(c(i, cl, b, p, gnsz.Mb, sizerange.Mb)))
}
df <- as.data.frame(do.call(rbind, lis))
names(df) <- c("species", "cl", "beta", "p", "gnsz.Mb", "sizerange.Mb")
num <- c("beta", "p", "gnsz.Mb", "sizerange.Mb")
df[, num] <- lapply(df[, num], as.numeric)
df <- df[df$p < 0.05, ]
plot(df$gnsz.Mb, df$beta)
plot(df$gnsz.Mb, df$sizerange.Mb)
plot(df$gnsz.Mb, df$sizerange.Mb)
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.9, ]
dat <- dat[!is.na(dat$species), ]
dat <- dat[!is.na(dat$chromnum.1n), ]
rep <- dat[dat$clade == "Sauria", ]
plot(dat$size.Mbp, dat$genedens)
plot(rep$size.Mbp, rep$genedens)
# estimated genome size
library(phytools)
library(caper)
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0, ]
dat <- dat[!duplicated(dat$species), ]
dat$clade <- factor(dat$clade, levels = c("Mammalia", "Actinopterygii", "Sauria"))
# estimated genome size
library(phytools)
library(caper)
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.9, ]
dat <- dat[!duplicated(dat$species), ]
# estimated genome size
library(phytools)
library(caper)
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.9, ]
# estimated genome size
library(phytools)
library(caper)
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.9, ]
dat <- dat[!is.na(dat$chromnum.1n), ]
dat <- dat[!duplicated(dat$species), ]
dat$clade <- factor(dat$clade, levels = c("Mammalia", "Actinopterygii", "Sauria"))
dat <- na.omit(dat[, c("species", "clade", "rsq", "est.gnsz.Mbp")])
# estimated genome size
library(phytools)
library(caper)
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.9, ]
dat <- dat[!is.na(dat$chromnum.1n), ]
dat <- dat[!duplicated(dat$species), ]
dat$clade <- factor(dat$clade, levels = c("Mammalia", "Actinopterygii", "Sauria"))
dat <- na.omit(dat[, c("species", "clade", "rsq", "est.gnsz.Mbp")])
map <- c("Mammalia" = "#d95f02", "Actinopterygii" = "#7570b3", "Sauria" = "#1b9e77")
cols <- map[dat$clade]
cols <- adjustcolor(cols, alpha.f = 0.5)
plot(rsq ~ est.gnsz.Mbp,
data = dat,
pch = 16,
col = cols)
tree <- read.tree("../data/formatted_tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
pruned.tree <- keep.tip(tree, int)
model <- glm(rsq ~ est.gnsz.Mbp, data = dat)
res <- resid(model)
phylosig <- phylosig(pruned.tree,
setNames(res, dat$species),
method = "lambda",
test = TRUE,
nsim = 10000)[[4]]
if (phylosig < 0.05) {
cd <- comparative.data(pruned.tree, dat, names.col = "species", vcv = TRUE)
model <- pgls(rsq ~ est.gnsz.Mbp, data = cd)
}
summary(odel)
summary(model)
# estimated genome size
library(phytools)
library(caper)
dat <- read.csv("../results/parsed.csv")
# estimated genome size
library(phytools)
library(caper)
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.9, ]
dat <- dat[!is.na(dat$chromnum.1n), ]
dat <- dat[!duplicated(dat$species), ]
dat$clade <- factor(dat$clade, levels = c("Mammalia", "Actinopterygii", "Sauria"))
dat <- na.omit(dat[, c("species", "clade", "rsq", "asmblysize.Mbp")])
map <- c("Mammalia" = "#d95f02", "Actinopterygii" = "#7570b3", "Sauria" = "#1b9e77")
cols <- map[dat$clade]
cols <- adjustcolor(cols, alpha.f = 0.5)
plot(rsq ~ asmblysize.Mbp,
data = dat,
pch = 16,
col = cols)
tree <- read.tree("../data/formatted_tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
pruned.tree <- keep.tip(tree, int)
model <- glm(rsq ~ est.gnsz.Mbp, data = dat)
model <- glm(rsq ~ asmblysize.Mbp, data = dat)
res <- resid(model)
phylosig <- phylosig(pruned.tree,
setNames(res, dat$species),
method = "lambda",
test = TRUE,
nsim = 10000)[[4]]
if (phylosig < 0.05) {
cd <- comparative.data(pruned.tree, dat, names.col = "species", vcv = TRUE)
model <- pgls(rsq ~ est.gnsz.Mbp, data = cd)
}
if (phylosig < 0.05) {
cd <- comparative.data(pruned.tree, dat, names.col = "species", vcv = TRUE)
model <- pgls(rsq ~ asmblysize.Mbp, data = cd)
}
summary(model)
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.9, ]
dat <- dat[!is.na(dat$species), ]
dat <- dat[!is.na(dat$chromnum.1n), ]
rep <- dat[dat$clade == "Sauria", ]
plot(dat$size.Mbp, dat$genedens)
plot(rep$size.Mbp, rep$genedens)
lis <- list()
for (i in unique(dat$species)) {
sub <- dat[dat$species == i, ]
cl <- unique(sub$clade)
b <- summary(glm(sub$genecount ~ sub$size.Mbp))$coefficients[2, 1]
p <- summary(glm(sub$genecount ~ sub$size.Mbp))$coefficients[2, 4]
sizerange.Mb <- diff(range(sub$size.Mbp))
gnsz.Mb <- unique(sub$asmblysize.Mbp)
lis <- c(lis, list(c(i, cl, b, p, gnsz.Mb, sizerange.Mb)))
}
df <- as.data.frame(do.call(rbind, lis))
names(df) <- c("species", "cl", "beta", "p", "gnsz.Mb", "sizerange.Mb")
num <- c("beta", "p", "gnsz.Mb", "sizerange.Mb")
df[, num] <- lapply(df[, num], as.numeric)
df <- df[df$p < 0.05, ]
plot(df$gnsz.Mb, df$sizerange.Mb)
View(df)
library(beeswarm)
beeswarm(sizerange.Mb ~ cl, data = cd)
beeswarm(sizerange.Mb ~ cl, data = df)
# why do reptiles have low gene density variation if microchromosomes are
# more gene dense than normal chromosomes?
# a plot of gene density vs chromosome size for all chromosomes shows that small
# chromosomes are indeed more gene dense than large chromosomes
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.9, ]
dat <- dat[!is.na(dat$species), ]
dat <- dat[!is.na(dat$chromnum.1n), ]
rep <- dat[dat$clade == "Sauria", ]
plot(dat$size.Mbp, dat$genedens)
plot(rep$size.Mbp, rep$genedens)
# larger genomes have more variation in chromosome size
lis <- list()
for (i in unique(dat$species)) {
sub <- dat[dat$species == i, ]
cl <- unique(sub$clade)
b <- summary(glm(sub$genecount ~ sub$size.Mbp))$coefficients[2, 1]
p <- summary(glm(sub$genecount ~ sub$size.Mbp))$coefficients[2, 4]
sizerange.Mb <- diff(range(sub$size.Mbp))
gnsz.Mb <- unique(sub$asmblysize.Mbp)
lis <- c(lis, list(c(i, cl, b, p, gnsz.Mb, sizerange.Mb)))
}
df <- as.data.frame(do.call(rbind, lis))
names(df) <- c("species", "cl", "beta", "p", "gnsz.Mb", "sizerange.Mb")
num <- c("beta", "p", "gnsz.Mb", "sizerange.Mb")
df[, num] <- lapply(df[, num], as.numeric)
df <- df[df$p < 0.05, ]
plot(df$gnsz.Mb, df$sizerange.Mb)
library(beeswarm)
beeswarm(sizerange.Mb ~ cl, data = df)
# phylogenetic anova
library(phytools)
tree <- read.tree("../data/formatted_tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(df$species, tree$tip.label)
pruned.tree <- keep.tip(tree, int)
sig <- phylosig(pruned.tree,
setNames(df$sizerange.Mb, df$species),
method = "lambda",
test = TRUE,
nsim = 10000)[[4]]
sig
x <- setNames(df$cl, df$species)
y <- setNames(df$sizerange.Mb, df$species)
phylANOVA(pruned.tree, x, y, nsim = 10000, posthoc = TRUE)
View(dat)
View(df)
View(df)
library(brms)
install.packages(brms)
install.packages("brms")
library(brms)
?brm
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.9, ]
dat <- dat[!is.na(dat$species), ]
dat <- dat[!is.na(dat$chromnum.1n), ]
rep <- dat[dat$clade == "Sauria", ]
plot(dat$size.Mbp, dat$genedens)
plot(rep$size.Mbp, rep$genedens)
# why do reptiles have low gene density variation if microchromosomes are
# more gene dense than normal chromosomes?
# a plot of gene density vs chromosome size for all chromosomes shows that small
# chromosomes are indeed more gene dense than large chromosomes
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.9, ]
dat <- dat[!is.na(dat$species), ]
dat <- dat[!is.na(dat$chromnum.1n), ]
rep <- dat[dat$clade == "Sauria", ]
mam <- dat[dat$clade == "Mammalia", ]
plot(dat$size.Mbp, dat$genedens)
plot(rep$size.Mbp, rep$genedens)
plot(mam$size.Mbp, mam$genedens)
plot(rep$size.Mbp, rep$genedens)
plot(mam$size.Mbp, mam$genedens)
plot(rep$size.Mbp, rep$genedens)
plot(mam$size.Mbp, mam$genedens)
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 65))
plot(mam$size.Mbp, mam$genedens, xlim = c(0, 800), ylim = c(0, 65))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 65))
plot(mam$size.Mbp, mam$genedens, xlim = c(0, 800), ylim = c(0, 65))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 80))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 100))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 200))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(mam$size.Mbp, mam$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(mam$size.Mbp, mam$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(mam$size.Mbp, mam$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(mam$size.Mbp, mam$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(mam$size.Mbp, mam$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(mam$size.Mbp, mam$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(mam$size.Mbp, mam$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(mam$size.Mbp, mam$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(mam$size.Mbp, mam$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
# zero gene density variation
size <- c(900, 800, 700, 600, 500, 400, 300, 200)
genes <- c(90, 80, 70, 60, 50, 40, 30, 20)
df <- data.frame(size, genes)
df$density <- df$genes/df$size
summary(lm(genes ~ size, data = df))$r.squared
# break the smallest chromosome at the tips, give smallest fragnemt every gene
size <- c(900, 800, 700, 600, 500, 400, 300, 200)
genes <- c(90, 80, 70, 60, 50, 40, 30, 20, 90)
df <- data.frame(size, genes)
df$density <- df$genes/df$size
summary(lm(genes ~ size, data = df))$r.squared
# break the smallest chromosome at the tips, give smallest fragnemt every gene
size <- c(900, 800, 700, 600, 500, 400, 300, 200)
genes <- c(90, 80, 70, 60, 50, 40, 30, 90)
df <- data.frame(size, genes)
df$density <- df$genes/df$size
summary(lm(genes ~ size, data = df))$r.squared
# break the smallest chromosome at the tips, give smallest fragnemt every gene
size <- c(900, 800, 700, 600, 500, 400, 300, 200)
genes <- c(90, 80, 70, 60, 50, 40, 30, 50)
df <- data.frame(size, genes)
df$density <- df$genes/df$size
summary(lm(genes ~ size, data = df))$r.squared
# break the smallest chromosome at the tips, give smallest fragnemt every gene
size <- c(900, 800, 700, 600, 500, 400, 300, 200, 200, 200)
genes <- c(90, 80, 70, 60, 50, 40, 30, 20, 20, 50)
df <- data.frame(size, genes)
df$density <- df$genes/df$size
summary(lm(genes ~ size, data = df))$r.squared
# break the smallest chromosome at the tips, give smallest fragnemt every gene
size <- c(900, 800, 700, 600, 500, 400, 300, 200, 200, 200, 100, 100, 100)
genes <- c(90, 80, 70, 60, 50, 40, 30, 20, 20, 60, 10, 30, 30)
df <- data.frame(size, genes)
df$density <- df$genes/df$size
summary(lm(genes ~ size, data = df))$r.squared
# why do reptiles have low gene density variation if microchromosomes are
# more gene dense than normal chromosomes?
# a plot of gene density vs chromosome size for all chromosomes shows that small
# chromosomes are indeed more gene dense than large chromosomes
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.9, ]
dat <- dat[!is.na(dat$species), ]
dat <- dat[!is.na(dat$chromnum.1n), ]
rep <- dat[dat$clade == "Sauria", ]
mam <- dat[dat$clade == "Mammalia", ]
plot(dat$size.Mbp, dat$genedens)
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(mam$size.Mbp, mam$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(mam$size.Mbp, mam$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
View(rep)
lis <- list()
i <- "Gallus gallus"
sub <- dat[dat$species == i, ]
cl <- unique(sub$clade)
plot(sub$genecount, sub$size.Mbp)
plot(sub$size.Mbp, sub$genecount)
abline(glm(sub$genecount ~ sub$size.Mbp))
sub <- dat[dat$species == i, ]
plot(sub$size.Mbp, sub$genecount, xlim = c(0, 800))
abline(glm(sub$genecount ~ sub$size.Mbp))
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.9, ]
dat <- dat[!is.na(dat$species), ]
dat <- dat[!is.na(dat$chromnum.1n), ]
rep <- dat[dat$clade == "Sauria", ]
mam <- dat[dat$clade == "Mammalia", ]
plot(dat$size.Mbp, dat$genedens)
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.9, ]
dat <- dat[!is.na(dat$species), ]
dat <- dat[!is.na(dat$chromnum.1n), ]
rep <- dat[dat$clade == "Sauria", ]
mam <- dat[dat$clade == "Mammalia", ]
plot(dat$size.Mbp, dat$genedens)
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(mam$size.Mbp, mam$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(mam$size.Mbp, mam$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
sub <- dat[dat$species == i, ]
plot(sub$size.Mbp, sub$genecount, xlim = c(0, 800))
View(dat)
# larger genomes have more variation in chromosome size
i <- "Numida meleagris"
sub <- dat[dat$species == i, ]
plot(sub$size.Mbp, sub$genecount, xlim = c(0, 800))
abline(glm(sub$genecount ~ sub$size.Mbp))
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.9, ]
dat <- dat[!is.na(dat$species), ]
dat <- dat[!is.na(dat$chromnum.1n), ]
rep <- dat[dat$clade == "Sauria", ]
mam <- dat[dat$clade == "Mammalia", ]
plot(dat$size.Mbp, dat$genedens)
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
seq(0.9)
0.9
df <- data.frame()
# contig sum/assembly size ratio threshold
# for (thrs in seq(from = 0, to = 0.9, by = 0.05)) {
for (thrs in c(0.9)) {
# remove species if sum of contig sizes is not within some multiple of assembly size
parsed <- data.frame()
for (z in unique(contigs$species)) {
sub <- contigs[contigs$species == z, ]
cont <- sum(sub$size.Mbp)
total <- contigs[contigs$species == z, ]$asmblysize[1]
if (cont/total >= thrs) {
parsed <- rbind(parsed, sub)
}
}
# calculate stats based on parsed results
sp <- unique(parsed$species)
for (species in sp) {
sub <- parsed[which(parsed$species == species), ]
# fit <- summary(glm(sub$genecount ~ sub$size.Mbp))
# beta <- fit$coefficients[2, 1]
# pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mbp))$r.squared
# weightmean <- sum(sub$genedens * sub$size.Mbp) / sum(sub$size.Mbp)
# weightsd <- sqrt(sum(sub$size.Mbp * (sub$genedens - weightmean)^2) / sum(sub$size.Mbp))
# weightcv <- weightsd / weightmean
stats <- data.frame(species, rsq, thrs)
sub <- merge(sub, stats, by = "species", all = TRUE)
sub <- merge(dat[dat$species == species, ], sub, by = "species", all = TRUE)
df <- rbind(df, sub)
}
}
dat <- read.csv("../data/data.csv")
# combine raw contig results
library(data.table)
dir <- "../results/individual_species_results"
files <- paste0(dir, "/",  list.files(dir))
contigs <- lapply(files, fread)
contigs <- as.data.frame(rbindlist((contigs), fill = TRUE))
df <- data.frame()
# contig sum/assembly size ratio threshold
# for (thrs in seq(from = 0, to = 0.9, by = 0.05)) {
for (thrs in c(0.9)) {
# remove species if sum of contig sizes is not within some multiple of assembly size
parsed <- data.frame()
for (z in unique(contigs$species)) {
sub <- contigs[contigs$species == z, ]
cont <- sum(sub$size.Mbp)
total <- contigs[contigs$species == z, ]$asmblysize[1]
if (cont/total >= thrs) {
parsed <- rbind(parsed, sub)
}
}
# calculate stats based on parsed results
sp <- unique(parsed$species)
for (species in sp) {
sub <- parsed[which(parsed$species == species), ]
# fit <- summary(glm(sub$genecount ~ sub$size.Mbp))
# beta <- fit$coefficients[2, 1]
# pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mbp))$r.squared
# weightmean <- sum(sub$genedens * sub$size.Mbp) / sum(sub$size.Mbp)
# weightsd <- sqrt(sum(sub$size.Mbp * (sub$genedens - weightmean)^2) / sum(sub$size.Mbp))
# weightcv <- weightsd / weightmean
stats <- data.frame(species, rsq, thrs)
sub <- merge(sub, stats, by = "species", all = TRUE)
sub <- merge(dat[dat$species == species, ], sub, by = "species", all = TRUE)
df <- rbind(df, sub)
}
}
View(df)
#assign clades
df$clade <- df$class
df[df$clade %in% "Aves", ]$clade <- "Sauria"
df[df$clade %in% "Reptilia", ]$clade <- "Sauria"
df[!(df$clade %in% c("Actinopterygii", "Mammalia", "Sauria")), ]$clade <- "Others"
# reorder columns
df <- df[, c(18, 1, 19, 2:11, 16:17, 12:15)]
df <- df[!is.na(df$species), ]
# write csv
write.csv(df, "../results/parsed.csv", row.names = FALSE)
dat <- read.csv("../results/parsed.csv")
files <- list.files("../results/divsums")
sp <- gsub("_", " ", gsub(".divsum$", "", files))
asmbsz <- dat[!duplicated(dat$species), ]
asmbsz <- asmbsz[asmbsz$species %in% sp, ]
asmbsz <- setNames(asmbsz$asmblysize.Mbp*1000000, asmbsz$species)
repstats <- data.frame()
for (i in 1:length(sp)) {
species <- sp[i]
# read text file into lines
divsum <- readLines(paste0("../results/divsums/", files[i]))
# look for the start of relevant information
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
# condense relevant lines into a table
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
# drop columns with all NA
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
# condense table
classes <- c("LINE", "SINE", "LTR", "DNA", "RC", "Div", "Unknown")
for (j in classes) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub))
divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
Others <- rowSums(as.matrix(divsum))
divsum <- data.frame(Div, LINE, SINE, LTR, DNA, RC, Others, Unknown)
# all repeat total and median
rep.bp <- rowSums(divsum[, !names(divsum) == "Div"])
total.rep.pct <- sum((rep.bp / asmbsz[sp[i]]) * 100)
total.rep.median <- which(cumsum(rep.bp) > sum(rep.bp)/2)[1]
for (k in classes) {
assign(paste0(tolower(k), ".rep.pct"), sum(divsum[k] /  asmbsz[sp[i]] * 100))
assign(paste0(tolower(k), ".rep.median"), which(cumsum(divsum[k]) > sum(divsum[k])/2)[1])
}
# build dataframe
df <- data.frame(species,
total.rep.pct,
total.rep.median,
line.rep.pct,
line.rep.median,
sine.rep.pct,
sine.rep.median,
ltr.rep.pct,
ltr.rep.median,
dna.rep.pct,
dna.rep.median,
rc.rep.pct,
rc.rep.median
)
repstats <- rbind(repstats, df)
}
# reorganize and save results
dat <- merge(dat, repstats, by= "species", all = T)
dat <- dat[, c(1:15, 20:31, 16:19)]
dat <- dat[order(dat$size.Mbp, decreasing = TRUE), ]
dat <- dat[order(dat$species), ]
dat <- dat[order(dat$thrs), ]
write.csv(dat,
"../results/parsed.csv",
row.names = FALSE)
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.9, ]
dat <- dat[!is.na(dat$species), ]
dat <- dat[!is.na(dat$chromnum.1n), ]
rep <- dat[dat$clade == "Sauria", ]
mam <- dat[dat$clade == "Mammalia", ]
plot(dat$size.Mbp, dat$genedens)
plot(rep$size.Mbp, rep$genedens, xlim = c(0, 800), ylim = c(0, 160))
plot(mam$size.Mbp, mam$genedens, xlim = c(0, 800), ylim = c(0, 160))
