# subset results
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
terms <- gsub("rep.prop.", "", names(dat)[grep("^rep.prop", names(dat))])
combs <- gsub("rep.age.", "", names(dat)[grep("^rep.age", names(dat))])
dat <- na.omit(dat[, c("species",
"clade",
"rsq",
paste0("rep.prop.", terms),
paste0("rep.age.", combs))])
dat <- dat[dat$clade %in% c("Sauria"), ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# create presence/absence vector
is.present <- as.numeric(terms %in% rep)
# create list with presence/absence for use in "extra" argument in dredge()
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# fit and record model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
pgls.models <- rbind(pgls.models, model)
}
# convert presence/absence to true/false
for (term in terms) {
pgls.models[[term]] <- as.logical(unlist(pgls.models[[term]]))
}
# remove models involving misc/unidentified repeats; re-calculate deltas
pgls.models <- pgls.models[
apply(pgls.models[, terms], 1, function(x) all(x == TRUE)) |  # All columns are TRUE
(pgls.models[, terms[length(terms)-1]] == FALSE & pgls.models[, terms[length(terms)]] == FALSE),  # Last two columns are FALSE
, ]
dummy <- pgls.models[1,]
pgls.models <- rbind(pgls.models, dummy)
pgls.models <- pgls.models[-1,]
confint(model.avg(pgls.models))
# all clades: variation decreases with age
# mammals: ----
# fish: variation decreases with age and increases with interaction
# reptiles: variation decreases with age and decreases with proportion
# mammals + fish: ----
# mammals + reptiles: ----
# fish + reptiles: variation decreases with age
# mammals + fish + repties: variation decreases with age
library(MuMIn)
library(phytools)
library(caper)
# subset results
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
terms <- gsub("rep.prop.", "", names(dat)[grep("^rep.prop", names(dat))])
combs <- gsub("rep.age.", "", names(dat)[grep("^rep.age", names(dat))])
dat <- na.omit(dat[, c("species",
"clade",
"rsq",
paste0("rep.prop.", terms),
paste0("rep.age.", combs))])
dat <- dat[dat$clade %in% c("Mammalia", "Sauria"), ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# create presence/absence vector
is.present <- as.numeric(terms %in% rep)
# create list with presence/absence for use in "extra" argument in dredge()
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# fit and record model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
pgls.models <- rbind(pgls.models, model)
}
# convert presence/absence to true/false
for (term in terms) {
pgls.models[[term]] <- as.logical(unlist(pgls.models[[term]]))
}
# remove models involving misc/unidentified repeats; re-calculate deltas
pgls.models <- pgls.models[
apply(pgls.models[, terms], 1, function(x) all(x == TRUE)) |  # All columns are TRUE
(pgls.models[, terms[length(terms)-1]] == FALSE & pgls.models[, terms[length(terms)]] == FALSE),  # Last two columns are FALSE
, ]
dummy <- pgls.models[1,]
pgls.models <- rbind(pgls.models, dummy)
pgls.models <- pgls.models[-1,]
confint(model.avg(pgls.models))
# all clades: variation decreases with age
# mammals: ----
# fish: variation decreases with age and increases with interaction
# reptiles: variation decreases with age and decreases with proportion
# mammals + fish: ----
# mammals + reptiles: ----
# fish + reptiles: variation decreases with age
# mammals + fish + repties: variation decreases with age
library(MuMIn)
library(phytools)
library(caper)
# subset results
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
terms <- gsub("rep.prop.", "", names(dat)[grep("^rep.prop", names(dat))])
combs <- gsub("rep.age.", "", names(dat)[grep("^rep.age", names(dat))])
dat <- na.omit(dat[, c("species",
"clade",
"rsq",
paste0("rep.prop.", terms),
paste0("rep.age.", combs))])
dat <- dat[dat$clade %in% c("Mammalia", "Actinopterygii"), ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# create presence/absence vector
is.present <- as.numeric(terms %in% rep)
# create list with presence/absence for use in "extra" argument in dredge()
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# fit and record model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
pgls.models <- rbind(pgls.models, model)
}
# convert presence/absence to true/false
for (term in terms) {
pgls.models[[term]] <- as.logical(unlist(pgls.models[[term]]))
}
# remove models involving misc/unidentified repeats; re-calculate deltas
pgls.models <- pgls.models[
apply(pgls.models[, terms], 1, function(x) all(x == TRUE)) |  # All columns are TRUE
(pgls.models[, terms[length(terms)-1]] == FALSE & pgls.models[, terms[length(terms)]] == FALSE),  # Last two columns are FALSE
, ]
dummy <- pgls.models[1,]
pgls.models <- rbind(pgls.models, dummy)
pgls.models <- pgls.models[-1,]
confint(model.avg(pgls.models))
# all clades: variation decreases with age
# mammals: ----
# fish: variation decreases with age and increases with interaction
# reptiles: variation decreases with age and decreases with proportion
# mammals + fish: ----
# mammals + reptiles: ----
# fish + reptiles: variation decreases with age
# mammals + fish + repties: variation decreases with age
library(MuMIn)
library(phytools)
library(caper)
# subset results
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
terms <- gsub("rep.prop.", "", names(dat)[grep("^rep.prop", names(dat))])
combs <- gsub("rep.age.", "", names(dat)[grep("^rep.age", names(dat))])
dat <- na.omit(dat[, c("species",
"clade",
"rsq",
paste0("rep.prop.", terms),
paste0("rep.age.", combs))])
dat <- dat[dat$clade %in% c("Sauria", "Actinopterygii"), ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# create presence/absence vector
is.present <- as.numeric(terms %in% rep)
# create list with presence/absence for use in "extra" argument in dredge()
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# fit and record model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
pgls.models <- rbind(pgls.models, model)
}
# convert presence/absence to true/false
for (term in terms) {
pgls.models[[term]] <- as.logical(unlist(pgls.models[[term]]))
}
# remove models involving misc/unidentified repeats; re-calculate deltas
pgls.models <- pgls.models[
apply(pgls.models[, terms], 1, function(x) all(x == TRUE)) |  # All columns are TRUE
(pgls.models[, terms[length(terms)-1]] == FALSE & pgls.models[, terms[length(terms)]] == FALSE),  # Last two columns are FALSE
, ]
dummy <- pgls.models[1,]
pgls.models <- rbind(pgls.models, dummy)
pgls.models <- pgls.models[-1,]
confint(model.avg(pgls.models))
library(MuMIn)
library(phytools)
library(caper)
# subset results
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
terms <- gsub("rep.prop.", "", names(dat)[grep("^rep.prop", names(dat))])
combs <- gsub("rep.age.", "", names(dat)[grep("^rep.age", names(dat))])
dat <- na.omit(dat[, c("species",
"clade",
"rsq",
paste0("rep.prop.", terms),
paste0("rep.age.", combs))])
dat <- dat[dat$clade %in% c("Sauria", "Actinopterygii"), ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# create presence/absence vector
is.present <- as.numeric(terms %in% rep)
# create list with presence/absence for use in "extra" argument in dredge()
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# fit and record model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
pgls.models <- rbind(pgls.models, model)
}
# convert presence/absence to true/false
for (term in terms) {
pgls.models[[term]] <- as.logical(unlist(pgls.models[[term]]))
}
# remove models involving misc/unidentified repeats; re-calculate deltas
pgls.models <- pgls.models[
apply(pgls.models[, terms], 1, function(x) all(x == TRUE)) |  # All columns are TRUE
(pgls.models[, terms[length(terms)-1]] == FALSE & pgls.models[, terms[length(terms)]] == FALSE),  # Last two columns are FALSE
, ]
dummy <- pgls.models[1,]
pgls.models <- rbind(pgls.models, dummy)
pgls.models <- pgls.models[-1,]
confint(model.avg(pgls.models))
library(MuMIn)
library(phytools)
library(caper)
# subset results
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
terms <- gsub("rep.prop.", "", names(dat)[grep("^rep.prop", names(dat))])
combs <- gsub("rep.age.", "", names(dat)[grep("^rep.age", names(dat))])
dat <- na.omit(dat[, c("species",
"clade",
"rsq",
paste0("rep.prop.", terms),
paste0("rep.age.", combs))])
dat <- dat[dat$clade %in% c("Sauria", "Actinopterygii", "Mammalia"), ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# create presence/absence vector
is.present <- as.numeric(terms %in% rep)
# create list with presence/absence for use in "extra" argument in dredge()
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# fit and record model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
pgls.models <- rbind(pgls.models, model)
}
# convert presence/absence to true/false
for (term in terms) {
pgls.models[[term]] <- as.logical(unlist(pgls.models[[term]]))
}
# remove models involving misc/unidentified repeats; re-calculate deltas
pgls.models <- pgls.models[
apply(pgls.models[, terms], 1, function(x) all(x == TRUE)) |  # All columns are TRUE
(pgls.models[, terms[length(terms)-1]] == FALSE & pgls.models[, terms[length(terms)]] == FALSE),  # Last two columns are FALSE
, ]
dummy <- pgls.models[1,]
pgls.models <- rbind(pgls.models, dummy)
pgls.models <- pgls.models[-1,]
confint(model.avg(pgls.models))
# all clades: variation decreases with age
# mammals: ----
# fish: variation decreases with age and increases with interaction
# reptiles: variation decreases with age and decreases with proportion
# mammals + fish: ----
# mammals + reptiles: ----
# fish + reptiles: interaction increases with age
# mammals + fish + repties: variation decreases with age
library(MuMIn)
library(phytools)
library(caper)
# subset results
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
terms <- gsub("rep.prop.", "", names(dat)[grep("^rep.prop", names(dat))])
combs <- gsub("rep.age.", "", names(dat)[grep("^rep.age", names(dat))])
dat <- na.omit(dat[, c("species",
"clade",
"rsq",
paste0("rep.prop.", terms),
paste0("rep.age.", combs))])
# dat <- dat[dat$clade %in% c("Mammalia"), ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# create presence/absence vector
is.present <- as.numeric(terms %in% rep)
# create list with presence/absence for use in "extra" argument in dredge()
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# fit and record model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
pgls.models <- rbind(pgls.models, model)
}
# convert presence/absence to true/false
for (term in terms) {
pgls.models[[term]] <- as.logical(unlist(pgls.models[[term]]))
}
# remove models involving misc/unidentified repeats; re-calculate deltas
pgls.models <- pgls.models[
apply(pgls.models[, terms], 1, function(x) all(x == TRUE)) |  # All columns are TRUE
(pgls.models[, terms[length(terms)-1]] == FALSE & pgls.models[, terms[length(terms)]] == FALSE),  # Last two columns are FALSE
, ]
dummy <- pgls.models[1,]
pgls.models <- rbind(pgls.models, dummy)
pgls.models <- pgls.models[-1,]
confint(model.avg(pgls.models))
# all clades: variation decreases with age
# mammals: ----
# fish: variation decreases with age and increases with interaction
# reptiles: variation decreases with age and decreases with proportion
# mammals + fish: ----
# mammals + reptiles: ----
# fish + reptiles: interaction increases with age
# mammals + fish + repties: variation decreases with age
library(MuMIn)
library(phytools)
library(caper)
# subset results
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
terms <- gsub("rep.prop.", "", names(dat)[grep("^rep.prop", names(dat))])
combs <- gsub("rep.age.", "", names(dat)[grep("^rep.age", names(dat))])
dat <- na.omit(dat[, c("species",
"clade",
"rsq",
paste0("rep.prop.", terms),
paste0("rep.age.", combs))])
# dat <- dat[dat$clade %in% c("Mammalia"), ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# create presence/absence vector
is.present <- as.numeric(terms %in% rep)
# create list with presence/absence for use in "extra" argument in dredge()
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# fit and record model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
pgls.models <- rbind(pgls.models, model)
}
# convert presence/absence to true/false
for (term in terms) {
pgls.models[[term]] <- as.logical(unlist(pgls.models[[term]]))
}
# remove models involving misc/unidentified repeats; re-calculate deltas
pgls.models <- pgls.models[
apply(pgls.models[, terms], 1, function(x) all(x == TRUE)) |  # All columns are TRUE
(pgls.models[, terms[length(terms)-1]] == FALSE & pgls.models[, terms[length(terms)]] == FALSE),  # Last two columns are FALSE
, ]
dummy <- pgls.models[1,]
pgls.models <- rbind(pgls.models, dummy)
pgls.models <- pgls.models[-1,]
# write
saveRDS(pgls.models, "../results/all.clades.rds")
pgls.models <- readRDS("../results/all.clades.rds")
confint(model.avg(pgls.models))
