rm <- names(table(contigs$species)[table(contigs$species) < 3])
contigs <- contigs[!(contigs$species %in% rm), ]
df <- data.frame()
# contig sum/assembly size ratio threshold
# for (thrs in seq(from = 0, to = 1, by = 0.01)) {
for (thrs in c(0.8)) {
# for (thrs in c(0.95)) {
# remove species if sum of contig sizes is not within some multiple of assembly size
parsed <- data.frame()
for (z in unique(contigs$species)) {
sub <- contigs[contigs$species == z, ]
cont <- sum(sub$size.Mb)
total <- contigs[contigs$species == z, ]$asmblysize[1]
if (cont/total >= thrs) {
parsed <- rbind(parsed, sub)
}
}
# calculate stats based on parsed results
sp <- unique(parsed$species)
for (species in sp) {
sub <- parsed[which(parsed$species == species), ]
# fit <- summary(glm(sub$genecount ~ sub$size.Mb))
# beta <- fit$coefficients[2, 1]
# pval.beta <- fit$coefficients[2, 4]
rsq <- summary(lm(sub$genecount ~ sub$size.Mb))$r.squared
# weightmean <- sum(sub$genedens * sub$size.Mb) / sum(sub$size.Mb)
# weightsd <- sqrt(sum(sub$size.Mb * (sub$genedens - weightmean)^2) / sum(sub$size.Mb))
# weightcv <- weightsd / weightmean
stats <- data.frame(species, rsq, thrs)
sub <- merge(sub, stats, by = "species", all = TRUE)
sub <- merge(dat[dat$species == species, ], sub, by = "species", all = TRUE)
df <- rbind(df, sub)
}
}
#assign clades
df$clade <- df$class
df[df$clade %in% "Aves", ]$clade <- "Sauria"
df[df$clade %in% "Reptilia", ]$clade <- "Sauria"
df[!(df$clade %in% c("Actinopterygii", "Mammalia", "Sauria")), ]$clade <- "Others"
# reorder columns
df <- df[, c(18, 1, 19, 2:11, 16:17, 12:15)]
# write csv
write.csv(df, "../results/parsed.csv", row.names = FALSE)
dat <- read.csv("../results/parsed.csv")
files <- list.files("../results/divsums")
sp <- gsub("_", " ", gsub(".divsum$", "", files))
asmbsz <- dat[!duplicated(dat$species), ]
asmbsz <- asmbsz[asmbsz$species %in% sp, ]
asmbsz <- setNames(asmbsz$asmblysize.Mb*1000000, asmbsz$species)
repstats <- data.frame()
for (i in 1:length(sp)) {
species <- sp[i]
# read text file into lines
divsum <- readLines(paste0("../results/divsums/", files[i]))
# look for the start of relevant information
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
# condense relevant lines into a table
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
# drop columns with all NA
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
# condense table
col.to.keep <- c("DNA", "LINE", "LTR", "SINE", "Div", "Unknown")
for (j in col.to.keep) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub))
divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
Others <- rowSums(as.matrix(divsum))
divsum <- data.frame(Div, DNA, LINE, LTR, SINE, Others, Unknown)
rep.bp <- rowSums(divsum[, !names(divsum) == "Div"])
# set which repeats to record
rep <- colnames(divsum)[!colnames(divsum) %in% c("Div")]
# find repeat proportion
df <- data.frame(species)
for (k in rep) {
name <- paste0("rep.prop.", tolower(k))
assign(name, sum(divsum[k] /  asmbsz[sp[i]]))
df[[name]] <- get(name)
}
# find repeat age
rep <- unlist(lapply(1:length(rep), function(x) {
apply(combn(rep, x), 2, paste, collapse = ".")
}))
for (l in rep) {
sub <- rowSums(divsum[unlist(strsplit(l, "\\."))])
name <- paste0("rep.age.", tolower(l))
assign(name, which(cumsum(sub) > sum(sub)/2)[1])
df[[name]] <- get(name)
}
repstats <- rbind(repstats, df)
}
# reorganize and save results
dat <- merge(dat, repstats, by= "species", all = T)
dat <- dat[order(dat$size.Mb, decreasing = TRUE), ]
dat <- dat[order(dat$species), ]
dat <- dat[order(dat$thrs), ]
write.csv(dat,
"../results/parsed.csv",
row.names = FALSE)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/sauria.logit.8.rds")
# load results and filter for terms of interest
dat <- readRDS("../results/all.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
dat <- dat[which(dat$lambda.p < 0.05)]
dat <- dat[which(dat$bp.p < 0.05)]
dat <- dat[which(dat$sw.p < 0.05)]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
# load results and filter for terms of interest
dat <- readRDS("../results/all.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
View(dat)
# filter for models that meet assumptions
dat <- dat[which(dat$lambda.p < 0.05)]
dat <- dat[which(dat$bp.p < 0.05)]
dat <- dat[which(dat$sw.p < 0.05)]
View(dat)
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
dat <- dat[which(dat$lambda.p < 0.05)]
dat <- dat[which(dat$bp.p < 0.05)]
dat <- dat[which(dat$sw.p < 0.05)]
# recalculate
dat <- rbind(dat, dat[1,])
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/sauria.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/all.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/all.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
dat <- dat[which(dat$lambda.p < 0.05)]
dat <- dat[which(dat$bp.p < 0.05)]
dat <- dat[which(dat$sw.p < 0.05)]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/all.logit.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
dat <- dat[which(dat$lambda.p < 0.05)]
dat <- dat[which(dat$bp.p < 0.05)]
dat <- dat[which(dat$sw.p < 0.05)]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
x <- 1.319823
exp(x) / (1 + exp(x))
x <- confint(avg)
exp(x) / (1 + exp(x))
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/mammalia.logit.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
dat <- dat[which(dat$lambda.p < 0.05)]
dat <- dat[which(dat$bp.p < 0.05)]
dat <- dat[which(dat$sw.p < 0.05)]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
x <- confint(avg)
exp(x) / (1 + exp(x))
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.logit.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
dat <- dat[which(dat$lambda.p < 0.05)]
dat <- dat[which(dat$bp.p < 0.05)]
dat <- dat[which(dat$sw.p < 0.05)]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
x <- confint(avg)
exp(x) / (1 + exp(x))
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/sauria.logit.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
dat <- dat[which(dat$lambda.p < 0.05)]
dat <- dat[which(dat$bp.p < 0.05)]
dat <- dat[which(dat$sw.p < 0.05)]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
x <- confint(avg)
exp(x) / (1 + exp(x))
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/sauria.logit.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
x <- confint(avg)
exp(x) / (1 + exp(x))
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/all.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/mammalia.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/sauria.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
# load results and filter for terms of interest
dat <- readRDS("../results/all.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
# load results and filter for terms of interest
dat <- readRDS("../results/all.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
dat <- dat[which(dat$lambda.p < 0.05)]
dat <- dat[which(dat$bp.p < 0.05)]
dat <- dat[which(dat$sw.p < 0.05)]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/mammalia.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
dat <- dat[which(dat$lambda.p < 0.05)]
dat <- dat[which(dat$bp.p < 0.05)]
dat <- dat[which(dat$sw.p < 0.05)]
# recalculate
dat <- rbind(dat, dat[1,])
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/actinopterygii.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
dat <- dat[which(dat$lambda.p < 0.05)]
dat <- dat[which(dat$bp.p < 0.05)]
dat <- dat[which(dat$sw.p < 0.05)]
# recalculate
dat <- rbind(dat, dat[1,])
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/sauria.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
dat <- dat[which(dat$lambda.p < 0.05)]
dat <- dat[which(dat$bp.p < 0.05)]
dat <- dat[which(dat$sw.p < 0.05)]
# recalculate
dat <- rbind(dat, dat[1,])
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/all.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
dat <- dat[which(dat$lambda.p < 0.05)]
dat <- dat[which(dat$bp.p < 0.05)]
dat <- dat[which(dat$sw.p < 0.05)]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
View(avg)
View(dat)
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/all.logit.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
View(dat)
x <- 0.8828 + 2.8361*11
exp(x) / (1 + exp(x))
x <- 0.8828 + 2.8361*10
exp(x) / (1 + exp(x))
x <- 0.8828 + (2.8361*9)
exp(x) / (1 + exp(x))
x <- 0.8828 + (2.8361*0)
exp(x) / (1 + exp(x))
x <- 0.8828 + (2.8361*1)
exp(x) / (1 + exp(x))
x <- 0.8828 + (2.8361*10) + (-0.4598*0.5) + (-2.2304*0)
exp(x) / (1 + exp(x))
# load results and filter for terms of interest
dat <- readRDS("../results/all.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# filter for models that meet assumptions
dat <- dat[which(dat$lambda.p < 0.05)]
dat <- dat[which(dat$bp.p < 0.05)]
dat <- dat[which(dat$sw.p < 0.05)]
library(MuMIn)
# load results and filter for terms of interest
dat <- readRDS("../results/all.8.rds")
terms <- read.csv("../results/parsed.csv")
terms <- gsub("rep.prop.", "", names(terms)[grep("^rep.prop", names(terms))])
dat <- dat[c(which(rowSums(dat[, terms]) == length(terms)),
which(rowSums(dat[, c("others", "unknown")]) == 0)), ]
# recalculate
dat <- rbind(dat, dat[1,])
dat <- dat[-1,]
# average
avg <- model.avg(dat)
summary(avg)
confint(avg)
