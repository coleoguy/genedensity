assign(j, sums)
}
Others <- rowSums(as.matrix(divsum))
divsum <- data.frame(Div, LINE, SINE, LTR, DNA, Others, Unknown)
# all repeat total and median
rep.bp <- rowSums(divsum[, !names(divsum) == "Div"])
total.rep.pct <- sum((rep.bp / asmbsz[sp[i]]) * 100)
total.rep.median <- which(cumsum(rep.bp) > sum(rep.bp)/2)[1]
df <- data.frame(species)
for (k in col.to.keep) {
name <- paste0(tolower(k), ".rep.pct")
assign(name, sum(divsum[k] /  asmbsz[sp[i]] * 100))
df[[name]] <- get(name)
}
col.to.keep[!(col.to.keep %in% c("Div", "Unknown"))]
rep <- col.to.keep[!(col.to.keep %in% c("Div", "Unknown"))]
subsets <- unlist(lapply(1:length(rep), function(x) {
apply(combn(l, rep), 2, paste, collapse = ".")
}))
subsets <- unlist(lapply(1:length(rep), function(x) {
apply(combn(rep, x), 2, paste, collapse = ".")
}))
subsets
rep <- col.to.keep[!(col.to.keep %in% c("Div", "Unknown"))]
rep <- unlist(lapply(1:length(rep), function(x) {
apply(combn(rep, x), 2, paste, collapse = ".")
}))
rep <- col.to.keep[!(col.to.keep %in% c("Div", "Unknown"))]
rep <- unlist(lapply(1:length(rep), function(x) {
apply(combn(rep, x), 2, paste, collapse = ".")
}))
rep
View(divsum)
# find repeat age
rep <- col.to.keep[!(col.to.keep %in% c("Div", "Unknown"))]
rep <- unlist(lapply(1:length(rep), function(x) {
apply(combn(rep, x), 2, paste, collapse = ".")
}))
l <- susets[1]
l <- subsets[1]
l
l <- subsets[5]
l
unlist(strsplit(l, "\\."))
View(divsum)
sub <- divsum[unlist(strsplit(l, "\\."))]
View(sub)
sub <- rowSums(divsum[unlist(strsplit(l, "\\."))])
rowSums()sub
sub
cumsum(divsum[l])
cumsum(sub)
cumsum(sub)
sum(sub)/2
which(cumsum(sub) > sum(sub)/2)[1]
paste0(tolower(l), ".rep.median")
paste0("rep.age", tolower(l)
)
paste0("rep.age.", tolower(l))
name <- paste0("rep.age.", tolower(l))
sub <- rowSums(divsum[unlist(strsplit(l, "\\."))])
name <- paste0("rep.age.", tolower(l))
assign(name, which(cumsum(sub) > sum(sub)/2)[1])
df[[name]] <- get(name)
View(df)
dat <- read.csv("../results/parsed.csv")
files <- list.files("../results/divsums")
sp <- gsub("_", " ", gsub(".divsum$", "", files))
asmbsz <- dat[!duplicated(dat$species), ]
asmbsz <- asmbsz[asmbsz$species %in% sp, ]
asmbsz <- setNames(asmbsz$asmblysize.Mb*1000000, asmbsz$species)
repstats <- data.frame()
i <- 1
species <- sp[i]
# read text file into lines
divsum <- readLines(paste0("../results/divsums/", files[i]))
# look for the start of relevant information
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
# condense relevant lines into a table
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
# drop columns with all NA
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
# condense table
col.to.keep <- c("LINE", "SINE", "LTR", "DNA", "Div", "Unknown")
for (j in col.to.keep) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub))
divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
Others <- rowSums(as.matrix(divsum))
divsum <- data.frame(Div, LINE, SINE, LTR, DNA, Others, Unknown)
View(divsum)
species <- sp[i]
# read text file into lines
divsum <- readLines(paste0("../results/divsums/", files[i]))
# look for the start of relevant information
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
# condense relevant lines into a table
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
# drop columns with all NA
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
# condense table
col.to.keep <- c("LINE", "SINE", "LTR", "DNA", "Div", "Unknown")
for (j in col.to.keep) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub))
divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
Others <- rowSums(as.matrix(divsum))
divsum <- data.frame(Div, LINE, SINE, LTR, DNA, Others, Unknown)
# all repeat total and median
rep.bp <- rowSums(divsum[, !names(divsum) == "Div"])
rep.pct <- sum((rep.bp / asmbsz[sp[i]]) * 100)
rep.age.total <- which(cumsum(rep.bp) > sum(rep.bp)/2)[1]
# find repeat %
df <- data.frame(species)
for (k in col.to.keep) {
name <- paste0("rep.pct.", tolower(k))
assign(name, sum(divsum[k] /  asmbsz[sp[i]] * 100))
df[[name]] <- get(name)
}
# find repeat age
rep <- col.to.keep[!(col.to.keep %in% c("Div", "Unknown"))]
rep <- unlist(lapply(1:length(rep), function(x) {
apply(combn(rep, x), 2, paste, collapse = ".")
}))
for (l in subsets) {
sub <- rowSums(divsum[unlist(strsplit(l, "\\."))])
name <- paste0("rep.age.", tolower(l))
assign(name, which(cumsum(sub) > sum(sub)/2)[1])
df[[name]] <- get(name)
}
for (l in rep) {
sub <- rowSums(divsum[unlist(strsplit(l, "\\."))])
name <- paste0("rep.age.", tolower(l))
assign(name, which(cumsum(sub) > sum(sub)/2)[1])
df[[name]] <- get(name)
}
View(df)
dat <- read.csv("../results/parsed.csv")
files <- list.files("../results/divsums")
sp <- gsub("_", " ", gsub(".divsum$", "", files))
asmbsz <- dat[!duplicated(dat$species), ]
asmbsz <- asmbsz[asmbsz$species %in% sp, ]
asmbsz <- setNames(asmbsz$asmblysize.Mb*1000000, asmbsz$species)
repstats <- data.frame()
i <- 1
species <- sp[i]
# read text file into lines
divsum <- readLines(paste0("../results/divsums/", files[i]))
# look for the start of relevant information
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
# condense relevant lines into a table
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
# drop columns with all NA
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
# condense table
col.to.keep <- c("LINE", "SINE", "LTR", "DNA", "Div", "Unknown")
for (j in col.to.keep) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub))
divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
Others <- rowSums(as.matrix(divsum))
divsum <- data.frame(Div, LINE, SINE, LTR, DNA, Others, Unknown)
rep.bp
rep.prop.total <- sum(rowSums(divsum[, !names(divsum) == "Div"])) / asmbsz[sp[i]])
rep.prop.total <- sum(rowSums(divsum[, !names(divsum) == "Div"])) / asmbsz[sp[i]]
# all repeat total and median
rep.age.total <- which(cumsum(rep.bp) > sum(rep.bp)/2)[1]
# find repeat %
df <- data.frame(species)
rep.prop.total <- sum(rowSums(divsum[, !names(divsum) == "Div"])) / asmbsz[sp[i]]
df[[rep.prop.total]] <- rep.prop.total
df[["rep.prop.total"]] <- rep.prop.total
df$rep.prop.total <- rep.prop.total
View(df)
for (k in col.to.keep) {
name <- paste0("rep.prop.", tolower(k))
assign(name, divsum[k] / asmbsz[sp[i]])
df[[name]] <- get(name)
}
dat <- read.csv("../results/parsed.csv")
files <- list.files("../results/divsums")
sp <- gsub("_", " ", gsub(".divsum$", "", files))
asmbsz <- dat[!duplicated(dat$species), ]
asmbsz <- asmbsz[asmbsz$species %in% sp, ]
asmbsz <- setNames(asmbsz$asmblysize.Mb*1000000, asmbsz$species)
repstats <- data.frame()
i <- 1
species <- sp[i]
# read text file into lines
divsum <- readLines(paste0("../results/divsums/", files[i]))
# look for the start of relevant information
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
# condense relevant lines into a table
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
# drop columns with all NA
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
# condense table
col.to.keep <- c("LINE", "SINE", "LTR", "DNA", "Div", "Unknown")
for (j in col.to.keep) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub))
divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
Others <- rowSums(as.matrix(divsum))
divsum <- data.frame(Div, LINE, SINE, LTR, DNA, Others, Unknown)
# all repeat total and median
rep.bp <- rowSums(divsum[, !names(divsum) == "Div"])
rep.pct <- sum((rep.bp / asmbsz[sp[i]]) * 100)
rep.age.total <- which(cumsum(rep.bp) > sum(rep.bp)/2)[1]
# find repeat %
df <- data.frame(species)
rep.prop.total <- sum(rowSums(divsum[, !names(divsum) == "Div"])) / asmbsz[sp[i]]
df$rep.prop.total <- rep.prop.total
View(df)
for (k in col.to.keep) {
name <- paste0("rep.pct.", tolower(k))
assign(name, sum(divsum[k] /  asmbsz[sp[i]] * 100))
df[[name]] <- get(name)
}
View(df)
# find repeat age
rep <- col.to.keep[!(col.to.keep %in% c("Div", "Unknown"))]
rep
# find repeat age
rep <- col.to.keep[!(col.to.keep %in% c("Div", "Unknown"))]
rep <- unlist(lapply(1:length(rep), function(x) {
apply(combn(rep, x), 2, paste, collapse = ".")
}))
rep
for (l in subsets) {
sub <- rowSums(divsum[unlist(strsplit(l, "\\."))])
name <- paste0("rep.age.", tolower(l))
assign(name, which(cumsum(sub) > sum(sub)/2)[1])
df[[name]] <- get(name)
}
for (l in rep) {
sub <- rowSums(divsum[unlist(strsplit(l, "\\."))])
name <- paste0("rep.age.", tolower(l))
assign(name, which(cumsum(sub) > sum(sub)/2)[1])
df[[name]] <- get(name)
}
View(df)
dat <- read.csv("../results/parsed.csv")
files <- list.files("../results/divsums")
sp <- gsub("_", " ", gsub(".divsum$", "", files))
asmbsz <- dat[!duplicated(dat$species), ]
asmbsz <- asmbsz[asmbsz$species %in% sp, ]
asmbsz <- setNames(asmbsz$asmblysize.Mb*1000000, asmbsz$species)
repstats <- data.frame()
for (i in 1:length(sp)) {
species <- sp[i]
# read text file into lines
divsum <- readLines(paste0("../results/divsums/", files[i]))
# look for the start of relevant information
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
# condense relevant lines into a table
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
# drop columns with all NA
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
# condense table
col.to.keep <- c("LINE", "SINE", "LTR", "DNA", "Div", "Unknown")
for (j in col.to.keep) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub))
divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
Others <- rowSums(as.matrix(divsum))
divsum <- data.frame(Div, LINE, SINE, LTR, DNA, Others, Unknown)
# all repeat total and median
rep.bp <- rowSums(divsum[, !names(divsum) == "Div"])
rep.pct <- sum((rep.bp / asmbsz[sp[i]]) * 100)
rep.age.total <- which(cumsum(rep.bp) > sum(rep.bp)/2)[1]
# find repeat %
df <- data.frame(species)
rep.prop.total <- sum(rowSums(divsum[, !names(divsum) == "Div"])) / asmbsz[sp[i]]
df$rep.prop.total <- rep.prop.total
for (k in col.to.keep) {
name <- paste0("rep.prop.", tolower(k))
assign(name, sum(divsum[k] /  asmbsz[sp[i]] * 100))
df[[name]] <- get(name)
}
# find repeat age
rep <- col.to.keep[!(col.to.keep %in% c("Div", "Unknown"))]
rep <- unlist(lapply(1:length(rep), function(x) {
apply(combn(rep, x), 2, paste, collapse = ".")
}))
for (l in rep) {
sub <- rowSums(divsum[unlist(strsplit(l, "\\."))])
name <- paste0("rep.age.", tolower(l))
assign(name, which(cumsum(sub) > sum(sub)/2)[1])
df[[name]] <- get(name)
}
repstats <- rbind(repstats, df)
}
View(repstats)
rep.bp <- rowSums(divsum[, !names(divsum) == "Div"])
rep.age.total <- which(cumsum(rep.bp) > sum(rep.bp)/2)[1]
df$rep.age.total <- which(cumsum(rep.bp) > sum(rep.bp)/2)[1]
View(df)
dat <- read.csv("../results/parsed.csv")
files <- list.files("../results/divsums")
sp <- gsub("_", " ", gsub(".divsum$", "", files))
asmbsz <- dat[!duplicated(dat$species), ]
asmbsz <- asmbsz[asmbsz$species %in% sp, ]
asmbsz <- setNames(asmbsz$asmblysize.Mb*1000000, asmbsz$species)
repstats <- data.frame()
for (i in 1:length(sp)) {
species <- sp[i]
# read text file into lines
divsum <- readLines(paste0("../results/divsums/", files[i]))
# look for the start of relevant information
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
# condense relevant lines into a table
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
# drop columns with all NA
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
# condense table
col.to.keep <- c("LINE", "SINE", "LTR", "DNA", "Div", "Unknown")
for (j in col.to.keep) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub))
divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
Others <- rowSums(as.matrix(divsum))
divsum <- data.frame(Div, LINE, SINE, LTR, DNA, Others, Unknown)
rep.bp <- rowSums(divsum[, !names(divsum) == "Div"])
# find repeat %
df <- data.frame(species)
df$rep.prop.total <- sum(rep.bp) / asmbsz[sp[i]]
for (k in col.to.keep) {
name <- paste0("rep.prop.", tolower(k))
assign(name, sum(divsum[k] /  asmbsz[sp[i]] * 100))
df[[name]] <- get(name)
}
# find repeat age
rep <- col.to.keep[!(col.to.keep %in% c("Div", "Unknown"))]
rep <- unlist(lapply(1:length(rep), function(x) {
apply(combn(rep, x), 2, paste, collapse = ".")
}))
df$rep.age.total <- which(cumsum(rep.bp) > sum(rep.bp)/2)[1]
for (l in rep) {
sub <- rowSums(divsum[unlist(strsplit(l, "\\."))])
name <- paste0("rep.age.", tolower(l))
assign(name, which(cumsum(sub) > sum(sub)/2)[1])
df[[name]] <- get(name)
}
repstats <- rbind(repstats, df)
}
View(df)
View(repstats)
View(df)
View(divsum)
View(repstats)
dat <- read.csv("../results/parsed.csv")
files <- list.files("../results/divsums")
sp <- gsub("_", " ", gsub(".divsum$", "", files))
asmbsz <- dat[!duplicated(dat$species), ]
asmbsz <- asmbsz[asmbsz$species %in% sp, ]
asmbsz <- setNames(asmbsz$asmblysize.Mb*1000000, asmbsz$species)
repstats <- data.frame()
i <- 2
species <- sp[i]
# read text file into lines
divsum <- readLines(paste0("../results/divsums/", files[i]))
# look for the start of relevant information
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
# condense relevant lines into a table
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
# drop columns with all NA
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
# condense table
col.to.keep <- c("LINE", "SINE", "LTR", "DNA", "Div", "Unknown")
View(divsum)
for (j in col.to.keep) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub))
divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
Others <- rowSums(as.matrix(divsum))
divsum <- data.frame(Div, LINE, SINE, LTR, DNA, Others, Unknown)
rep.bp <- rowSums(divsum[, !names(divsum) == "Div"])
View(divsum)
# find repeat %
df <- data.frame(species)
df$rep.prop.total <- sum(rep.bp) / asmbsz[sp[i]]
View(df)
asmbsz[sp[i]]
View(dat)
asmbsz
asmbsz <- dat[!duplicated(dat$species), ]
asmbsz <- asmbsz[asmbsz$species %in% sp, ]
asmbsz <- setNames(asmbsz$asmblysize.Mb*1000000, asmbsz$species)
asmbsz <- dat[!duplicated(dat$species), ]
asmbsz <- asmbsz[asmbsz$species %in% sp, ]
asmbsz <- dat[!duplicated(dat$species), ]
asmbsz <- asmbsz[asmbsz$species %in% sp, ]
asmbsz <- setNames(asmbsz$asmblysize.Mb*1000000, asmbsz$species)
repstats <- data.frame()
for (i in 1:length(sp)) {
species <- sp[i]
# read text file into lines
divsum <- readLines(paste0("../results/divsums/", files[i]))
# look for the start of relevant information
phrase <- "Coverage for each repeat class and divergence (Kimura)"
start.index <- match(phrase, divsum) + 1
# condense relevant lines into a table
divsum <- divsum[start.index:length(divsum)]
divsum <- read.table(textConnection(divsum),
sep = " ",
header = TRUE)
# drop columns with all NA
divsum <- divsum[-c(which(sapply(divsum, function(col) all(is.na(col)))))]
# condense table
col.to.keep <- c("LINE", "SINE", "LTR", "DNA", "Div", "Unknown")
for (j in col.to.keep) {
pat <- paste0("^", j, "(\\.|$)")
headers <- grep(pat, names(divsum), value = TRUE)
sub <- divsum[, headers]
sums <- rowSums(as.matrix(sub))
divsum <- divsum[, !names(divsum) %in% headers]
assign(j, sums)
}
Others <- rowSums(as.matrix(divsum))
divsum <- data.frame(Div, LINE, SINE, LTR, DNA, Others, Unknown)
rep.bp <- rowSums(divsum[, !names(divsum) == "Div"])
# find repeat %
df <- data.frame(species)
df$rep.prop.total <- sum(rep.bp) / asmbsz[sp[i]]
for (k in col.to.keep) {
name <- paste0("rep.prop.", tolower(k))
assign(name, sum(divsum[k] /  asmbsz[sp[i]] * 100))
df[[name]] <- get(name)
}
# find repeat age
rep <- col.to.keep[!(col.to.keep %in% c("Div", "Unknown"))]
rep <- unlist(lapply(1:length(rep), function(x) {
apply(combn(rep, x), 2, paste, collapse = ".")
}))
df$rep.age.total <- which(cumsum(rep.bp) > sum(rep.bp)/2)[1]
for (l in rep) {
sub <- rowSums(divsum[unlist(strsplit(l, "\\."))])
name <- paste0("rep.age.", tolower(l))
assign(name, which(cumsum(sub) > sum(sub)/2)[1])
df[[name]] <- get(name)
}
repstats <- rbind(repstats, df)
}
View(repstats)
# reorganize and save results
dat <- merge(dat, repstats, by= "species", all = T)
names*Dat
naes(dat)
names(dat)
dat <- dat[order(dat$size.Mb, decreasing = TRUE), ]
dat <- dat[order(dat$species), ]
dat <- dat[order(dat$thrs), ]
write.csv(dat,
"../results/parsed.csv",
row.names = FALSE)
View(dat)
