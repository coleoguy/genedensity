sine = function(x) is.present[4],
others = function(x) is.present[5],
unknown = function(x) is.present[6]
)
# fit model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
pgls.models <- rbind(pgls.models, model)
}
View(pgls.models)
pgls.models[, terms]
as.logical(0)
pgls.models[, terms] <- as.logical(pgls.models[, terms])
View(pgls.models)
for (term in terms) {
pgls.models[[term]] <- as.logical(unlist(pgls.models[[term]]))
}
View(pruned.tree)
View(pgls.models)
# Create extra list with presence/absence for each term
extra.list <- setNames(
lapply(seq_along(terms), function(i) {
force(i)  # This is important to properly capture the index
function(x) is.present[i]
}),
terms
)
# Convert extra.list to alist
extra.list <- do.call(alist, extra.list)
# fit model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
library(MuMIn)
library(phytools)
library(caper)
# identify repeats of interest
terms <- c("dna", "line", "ltr", "sine", "others", "unknown")
combs <- unlist(lapply(1:length(terms), function(x) {
apply(combn(terms, x), 2, paste, collapse = ".")
}))
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
dat <- na.omit(dat[, c("species", "clade", "rsq", "rep.prop.total", paste0("rep.prop.", terms), "rep.age.total", paste0("rep.age.", combs))])
dat <- dat[dat$clade == "Mammalia", ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- data.frame()
i <- combs[1]
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# Create presence/abs
# Create presence/absence vector
is.present <- as.numeric(terms %in% rep)
# Create extra list with presence/absence for each term
extra.list <- setNames(
lapply(seq_along(terms), function(i) {
force(i)  # This is important to properly capture the index
function(x) is.present[i]
}),
terms
)
# Convert extra.list to alist
extra.list <- do.call(alist, extra.list)
View(extra.list)
# fit model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
options(na.action = "na.fail")
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
options(na.action = "na.fail")
> model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
options(na.action = "na.fail")
> model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
extra.list <- setNames(
lapply(seq_along(terms), function(i) {
force(i)  # This is important to properly capture the index
function(x) is.present[i]
}),
terms
)
# Convert extra.list to alist
extra.list <- do.call(alist, extra.list)
# Use the extra.list in dredge
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
View(model)
library(MuMIn)
library(phytools)
library(caper)
# identify repeats of interest
terms <- c("dna", "line", "ltr", "sine", "others", "unknown")
combs <- unlist(lapply(1:length(terms), function(x) {
apply(combn(terms, x), 2, paste, collapse = ".")
}))
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
dat <- na.omit(dat[, c("species", "clade", "rsq", "rep.prop.total", paste0("rep.prop.", terms), "rep.age.total", paste0("rep.age.", combs))])
dat <- dat[dat$clade == "Mammalia", ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# Create presence/absence vector
is.present <- as.numeric(terms %in% rep)
# Create extra list with presence/absence for each term
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# fit model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
pgls.models <- rbind(pgls.models, model)
}
for (term in terms) {
pgls.models[[term]] <- as.logical(unlist(pgls.models[[term]]))
}
View(pgls.models)
View(pgls.models)
View(pgls.models)
View(pgls.models)
library(MuMIn)
library(phytools)
library(caper)
# identify repeats of interest
terms <- c("dna", "line", "ltr", "sine", "others", "unknown")
combs <- unlist(lapply(1:length(terms), function(x) {
apply(combn(terms, x), 2, paste, collapse = ".")
}))
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
dat <- na.omit(dat[, c("species", "clade", "rsq", "rep.prop.total", paste0("rep.prop.", terms), "rep.age.total", paste0("rep.age.", combs))])
dat <- dat[dat$clade == "Mammalia", ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
cur.id <- match(i, combs)
# fit model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd), subset = dc(x1, x2, x1:x2), extra = list(id = function(model) cur.id))
pgls.models <- rbind(pgls.models, model)
}
pgls.models$id <- combs[pgls.models$id]
View(pgls.models)
library(MuMIn)
library(phytools)
library(caper)
# identify repeats of interest
terms <- c("dna", "line", "ltr", "sine", "others", "unknown")
combs <- unlist(lapply(1:length(terms), function(x) {
apply(combn(terms, x), 2, paste, collapse = ".")
}))
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
dat <- na.omit(dat[, c("species", "clade", "rsq", "rep.prop.total", paste0("rep.prop.", terms), "rep.age.total", paste0("rep.age.", combs))])
dat <- dat[dat$clade == "Mammalia", ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# Create presence/absence vector
is.present <- as.numeric(terms %in% rep)
# Create extra list with presence/absence for each term
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# fit model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
pgls.models <- rbind(pgls.models, model)
}
for (term in terms) {
pgls.models[[term]] <- as.logical(unlist(pgls.models[[term]]))
}
write.csv(as.data.frame(pgls.models), "../results/mammal.aic.csv", row.names = FALSE)
pgls.models <- read.csv("../results/mammal.aic.csv")
View(pgls.models)
View(extra.list)
View(pgls.models)
terms[1:4]
pgls.models[, c(terms[1:4])]
pgls.models <- pgls.models[
apply(pgls.models[, terms], 1, function(x) all(x == TRUE)) |  # All columns are TRUE
(pgls.models[, terms[length(terms)-1]] == FALSE & pgls.models[, terms[length(terms)]] == FALSE),  # Last two columns are FALSE
, ]
View(pgls.models)
write.csv(as.data.frame(pgls.models), "../results/mammal.aic.csv", row.names = FALSE)
pgls.models <- read.csv("../results/mammal.aic.csv")
plot(pgls.models$AICc)
installed.packages()
View(installed.packages)
l <- installed.packages()
View(l)
library(arbutus)
?arbutus
View(pgls.models)
library(MuMIn)
library(phytools)
library(caper)
# identify repeats of interest
terms <- c("dna", "line", "ltr", "sine", "others", "unknown")
combs <- unlist(lapply(1:length(terms), function(x) {
apply(combn(terms, x), 2, paste, collapse = ".")
}))
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
dat <- na.omit(dat[, c("species", "clade", "rsq", "rep.prop.total", paste0("rep.prop.", terms), "rep.age.total", paste0("rep.age.", combs))])
dat <- dat[dat$clade == "Mammalia", ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# Create presence/absence vector
is.present <- as.numeric(terms %in% rep)
# Create extra list with presence/absence for each term
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# fit model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
pgls.models <- rbind(pgls.models, model)
}
for (term in terms) {
pgls.models[[term]] <- as.logical(unlist(pgls.models[[term]]))
}
pgls.models <- pgls.models[, c(terms[4:5])]
View(pgls.models)
library(MuMIn)
library(phytools)
library(caper)
# identify repeats of interest
terms <- c("dna", "line", "ltr", "sine", "others", "unknown")
combs <- unlist(lapply(1:length(terms), function(x) {
apply(combn(terms, x), 2, paste, collapse = ".")
}))
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
dat <- na.omit(dat[, c("species", "clade", "rsq", "rep.prop.total", paste0("rep.prop.", terms), "rep.age.total", paste0("rep.age.", combs))])
dat <- dat[dat$clade == "Mammalia", ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# Create presence/absence vector
is.present <- as.numeric(terms %in% rep)
# Create extra list with presence/absence for each term
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# fit model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
pgls.models <- rbind(pgls.models, model)
}
for (term in terms) {
pgls.models[[term]] <- as.logical(unlist(pgls.models[[term]]))
}
View(pgls.models)
pgls.models <- pgls.models[
apply(pgls.models[, terms], 1, function(x) all(x == TRUE)) |  # All columns are TRUE
(pgls.models[, terms[length(terms)-1]] == FALSE & pgls.models[, terms[length(terms)]] == FALSE),  # Last two columns are FALSE
, ]
View(pgls.models)
print(pgls.models)
class(pgls.models)
pgls.models <- pgls.models[
apply(pgls.models[, terms], 1, function(x) all(x == TRUE)) |  # All columns are TRUE
(pgls.models[, terms[length(terms)-1]] == FALSE & pgls.models[, terms[length(terms)]] == FALSE),  # Last two columns are FALSE
, ]
class(pgls.models)
pgls.models <- pgls.models
View(pgls.models)
pgls.models <- rbind(pgls.models, NA)
View(pgls.models)
pgls.models <- update(pgls.models)
View(model)
pgls.models <- dredge(pgls.models)
dummy_row <- pgls.models[1,]
updated_models <- rbind(pgls.models, dummy_row)
updated_models <- updated_models[-nrow(updated_models),]
View(updated_models)
dummy_row <- pgls.models[1,]
pgls.models <- rbind(pgls.models, dummy_row)
pgls.models <- pgls.models[-nrow(pgls.models),]
View(pgls.models)
library(MuMIn)
library(phytools)
library(caper)
# identify repeats of interest
terms <- c("dna", "line", "ltr", "sine", "others", "unknown")
combs <- unlist(lapply(1:length(terms), function(x) {
apply(combn(terms, x), 2, paste, collapse = ".")
}))
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
dat <- na.omit(dat[, c("species", "clade", "rsq", "rep.prop.total", paste0("rep.prop.", terms), "rep.age.total", paste0("rep.age.", combs))])
dat <- dat[dat$clade == "Mammalia", ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# Create presence/absence vector
is.present <- as.numeric(terms %in% rep)
# Create extra list with presence/absence for each term
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# fit model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
pgls.models <- rbind(pgls.models, model)
}
for (term in terms) {
pgls.models[[term]] <- as.logical(unlist(pgls.models[[term]]))
}
pgls.models <- pgls.models[
apply(pgls.models[, terms], 1, function(x) all(x == TRUE)) |  # All columns are TRUE
(pgls.models[, terms[length(terms)-1]] == FALSE & pgls.models[, terms[length(terms)]] == FALSE),  # Last two columns are FALSE
, ]
dummy_row <- pgls.models[1,]
pgls.models <- rbind(pgls.models, dummy_row)
View(pgls.models)
-nrow(pgls.models)
pgls.models <- pgls.models[-1,]
View(pgls.models)
library(MuMIn)
library(phytools)
library(caper)
# identify repeats of interest
terms <- c("dna", "line", "ltr", "sine", "others", "unknown")
combs <- unlist(lapply(1:length(terms), function(x) {
apply(combn(terms, x), 2, paste, collapse = ".")
}))
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
dat <- na.omit(dat[, c("species", "clade", "rsq", "rep.prop.total", paste0("rep.prop.", terms), "rep.age.total", paste0("rep.age.", combs))])
dat <- dat[dat$clade == "Mammalia", ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# Create presence/absence vector
is.present <- as.numeric(terms %in% rep)
# Create extra list with presence/absence for each term
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# fit model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
model <- dredge(pgls(rsq ~ age.norm*prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
pgls.models <- rbind(pgls.models, model)
}
for (term in terms) {
pgls.models[[term]] <- as.logical(unlist(pgls.models[[term]]))
}
pgls.models <- pgls.models[
apply(pgls.models[, terms], 1, function(x) all(x == TRUE)) |  # All columns are TRUE
(pgls.models[, terms[length(terms)-1]] == FALSE & pgls.models[, terms[length(terms)]] == FALSE),  # Last two columns are FALSE
, ]
dummy_row <- pgls.models[1,]
pgls.models <- rbind(pgls.models, dummy_row)
pgls.models <- pgls.models[-1,]
write.csv(as.data.frame(pgls.models), "../results/mammal.aic.csv", row.names = FALSE)
pgls.models <- read.csv("../results/mammal.aic.csv")
View(pgls.models)
