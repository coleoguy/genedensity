# fish + reptiles: interaction increases with age
# mammals + fish + repties: variation decreases with age
library(MuMIn)
library(phytools)
library(caper)
library(lmtest)
# subset results
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
terms <- gsub("rep.prop.", "", names(dat)[grep("^rep.prop", names(dat))])
combs <- gsub("rep.age.", "", names(dat)[grep("^rep.age", names(dat))])
dat <- na.omit(dat[, c("species",
"clade",
"rsq",
paste0("rep.prop.", terms),
paste0("rep.age.", combs))])
# dat <- dat[dat$clade %in% c("Mammalia"), ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- other.stats <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# create list with presence/absence for use in "extra" argument in dredge()
is.present <- as.numeric(terms %in% rep)
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# add empty columns to extra.list
na_columns <- alist(
clade = function(x) 0,
sw.p = function(x) 0,
bp.p = function(x) 0,
lambda.p = function(x) 0
)
extra.list <- c(extra.list, na_columns)
# fit model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
models <- dredge(pgls(rsq ~ age.norm * prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
# record estimates
pgls.models <- rbind(pgls.models, models)
}
# all clades: variation decreases with age
# mammals: ----
# fish: variation decreases with age and increases with interaction
# reptiles: variation decreases with age and decreases with proportion
# mammals + fish: ----
# mammals + reptiles: ----
# fish + reptiles: interaction increases with age
# mammals + fish + repties: variation decreases with age
library(MuMIn)
library(phytools)
library(caper)
library(lmtest)
# subset results
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
terms <- gsub("rep.prop.", "", names(dat)[grep("^rep.prop", names(dat))])
combs <- gsub("rep.age.", "", names(dat)[grep("^rep.age", names(dat))])
dat <- na.omit(dat[, c("species",
"clade",
"rsq",
paste0("rep.prop.", terms),
paste0("rep.age.", combs))])
# dat <- dat[dat$clade %in% c("Mammalia"), ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- other.stats <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# create list with presence/absence for use in "extra" argument in dredge()
is.present <- as.numeric(terms %in% rep)
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# add empty columns to extra.list
na_columns <- alist(
clade = function(x) 0,
sw.p = function(x) 0,
bp.p = function(x) 0,
lambda.p = function(x) 0
)
extra.list <- c(extra.list, na_columns)
# fit model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
models <- dredge(pgls(rsq ~ age.norm * prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
# record estimates
pgls.models <- rbind(pgls.models, models)
}
# convert presence/absence to true/false
for (term in terms) {
pgls.models[[term]] <- as.logical(unlist(pgls.models[[term]]))
}
for (stat in c("sw.p", "bp.p", "lambda.p")) {
pgls.models[[stat]] <- as.logical(unlist(pgls.models[[stat]]))
}
View(pgls.models)
View(other.stats)
View(na_columns)
View(gls.model)
View(pgls.models)
pgls.models[1, ]$sw.p <- T
pgls.models[1, ][[sw.p]] <- T
pgls.models[1, ]$sw.p <- T
pgls.models[1, ]$dna <- T
pgls.models$dna[1] <- T
pgls.models$dna[1] <- 1
pgls.models$dna[1] <- 2
pgls.models$dna[1] <- 3
pgls.models$dna[1] <- 3.1
# all clades: variation decreases with age
# mammals: ----
# fish: variation decreases with age and increases with interaction
# reptiles: variation decreases with age and decreases with proportion
# mammals + fish: ----
# mammals + reptiles: ----
# fish + reptiles: interaction increases with age
# mammals + fish + repties: variation decreases with age
library(MuMIn)
library(phytools)
library(caper)
library(lmtest)
# subset results
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
terms <- gsub("rep.prop.", "", names(dat)[grep("^rep.prop", names(dat))])
combs <- gsub("rep.age.", "", names(dat)[grep("^rep.age", names(dat))])
dat <- na.omit(dat[, c("species",
"clade",
"rsq",
paste0("rep.prop.", terms),
paste0("rep.age.", combs))])
# dat <- dat[dat$clade %in% c("Mammalia"), ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- other.stats <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# create list with presence/absence for use in "extra" argument in dredge()
is.present <- as.numeric(terms %in% rep)
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# add empty columns to extra.list
na_columns <- alist(
clade = function(x) NA,
sw.p = function(x) NA,
bp.p = function(x) NA,
lambda.p = function(x) NA
)
extra.list <- c(extra.list, na_columns)
# fit model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
models <- dredge(pgls(rsq ~ age.norm * prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
# record estimates
pgls.models <- rbind(pgls.models, models)
}
# for each model do: shapiro-welk, breusch-pagen, pagel's lambda
for (j in 1:nrow(pgls.models)) {
all.terms <- c("age.norm", "prop.norm", "age.norm:prop.norm")
model.terms <- as.data.frame(pgls.models)[j, all.terms]
if (all(is.na(model.terms))) {
sw.p <- NA
bp.p <- NA
lambda.p <- NA
} else {
model.terms <- all.terms[which(!is.na(model.terms))]
# lambda (phylogenetic signal)
formula <- reformulate(model.terms, response = "rsq")
gls.model <- glm(formula, data = cd$data)
gls.res <- resid(gls.model)
pgls.models$lambda.p[j] <- phylosig(tree = pruned.tree,
x = gls.res,
method = "lambda",
test = TRUE,
niter = 500)$P
# shapiro-welk (residual normality)
pgls.model <- get.models(pgls.models, j)[[1]]
pgls.res <- resid(pgls.model)
pgls.models$sw.p[j] <- shapiro.test(pgls.res)$p.value
# breusch-pagan (homoskedasticity)
pgls.models$bp.p[j] <- bptest(pgls.model)$p.value[[1]]
}
}
View(pgls.models)
# all clades: variation decreases with age
# mammals: ----
# fish: variation decreases with age and increases with interaction
# reptiles: variation decreases with age and decreases with proportion
# mammals + fish: ----
# mammals + reptiles: ----
# fish + reptiles: interaction increases with age
# mammals + fish + repties: variation decreases with age
library(MuMIn)
library(phytools)
library(caper)
library(lmtest)
# subset results
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
terms <- gsub("rep.prop.", "", names(dat)[grep("^rep.prop", names(dat))])
combs <- gsub("rep.age.", "", names(dat)[grep("^rep.age", names(dat))])
dat <- na.omit(dat[, c("species",
"clade",
"rsq",
paste0("rep.prop.", terms),
paste0("rep.age.", combs))])
# dat <- dat[dat$clade %in% c("Mammalia"), ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- other.stats <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# create list with presence/absence for use in "extra" argument in dredge()
is.present <- as.numeric(terms %in% rep)
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# add empty columns to extra.list
na_columns <- alist(
clade = function(x) NA,
sw.p = function(x) NA,
bp.p = function(x) NA,
lambda.p = function(x) NA
)
extra.list <- c(extra.list, na_columns)
# fit model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
models <- dredge(pgls(rsq ~ age.norm * prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
# record estimates
pgls.models <- rbind(pgls.models, models)
}
j <- 1
all.terms <- c("age.norm", "prop.norm", "age.norm:prop.norm")
model.terms <- as.data.frame(pgls.models)[j, all.terms]
all.terms <- c("age.norm", "prop.norm", "age.norm:prop.norm")
model.terms <- as.data.frame(pgls.models)[j, all.terms]
j <- 3
all.terms <- c("age.norm", "prop.norm", "age.norm:prop.norm")
all(is.na(model.terms))
j <- 4
all.terms <- c("age.norm", "prop.norm", "age.norm:prop.norm")
all(is.na(model.terms))
View(pgls.models)
which(apply(pgls.models[, 2:4], 1, function(x) all(is.na(x))))[1]
j <- 194
all.terms <- c("age.norm", "prop.norm", "age.norm:prop.norm")
model.terms <- as.data.frame(pgls.models)[j, all.terms]
all(is.na(model.terms))
model.terms <- 1
# lambda (phylogenetic signal)
formula <- reformulate(model.terms, response = "rsq")
modj <- 193
all.terms <- c("age.norm", "prop.norm", "age.norm:prop.norm")
model.terms <- as.data.frame(pgls.models)[j, all.terms]
if (all(is.na(model.terms))) {
model.terms <- 1
} else {
model.terms <- all.terms[which(!is.na(model.terms))]
}
model.terms
all(is.na(model.terms))
if (all(is.na(model.terms))) {
model.terms <- 1
} else {
model.terms <- all.terms[which(!is.na(model.terms))]
}
model.terms
j <- 194
all.terms <- c("age.norm", "prop.norm", "age.norm:prop.norm")
model.terms <- as.data.frame(pgls.models)[j, all.terms]
if (all(is.na(model.terms))) {
model.terms <- "1"
} else {
model.terms <- all.terms[which(!is.na(model.terms))]
}
model.terms
# lambda (phylogenetic signal)
formula <- reformulate(model.terms, response = "rsq")
formula
gls.model <- glm(formula, data = cd$data)
gls.res <- resid(gls.model)
phylosig(tree = pruned.tree,
x = gls.res,
method = "lambda",
test = TRUE,
niter = 500)$P
pgls.model <- get.models(pgls.models, j)[[1]]
pgls.res <- resid(pgls.model)
shapiro.test(pgls.res)$p.value
bptest(pgls.model)$p.value[[1]]
# all clades: variation decreases with age
# mammals: ----
# fish: variation decreases with age and increases with interaction
# reptiles: variation decreases with age and decreases with proportion
# mammals + fish: ----
# mammals + reptiles: ----
# fish + reptiles: interaction increases with age
# mammals + fish + repties: variation decreases with age
library(MuMIn)
library(phytools)
library(caper)
library(lmtest)
# subset results
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
terms <- gsub("rep.prop.", "", names(dat)[grep("^rep.prop", names(dat))])
combs <- gsub("rep.age.", "", names(dat)[grep("^rep.age", names(dat))])
dat <- na.omit(dat[, c("species",
"clade",
"rsq",
paste0("rep.prop.", terms),
paste0("rep.age.", combs))])
# dat <- dat[dat$clade %in% c("Mammalia"), ]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# fit PGLS models
pgls.models <- other.stats <- data.frame()
for (i in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(i, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", i))]
# create new dataframe to make cd object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# create list with presence/absence for use in "extra" argument in dredge()
is.present <- as.numeric(terms %in% rep)
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms, "= function(x) is.present[", seq_along(terms), "]", collapse = ", "),
")"
)))
# add empty columns to extra.list
na.cols <- alist(
clade = function(x) NA,
sw.p = function(x) NA,
bp.p = function(x) NA,
lambda.p = function(x) NA
)
extra.list <- c(extra.list, na.cols)
# fit model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
models <- dredge(pgls(rsq ~ age.norm * prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
# record estimates
pgls.models <- rbind(pgls.models, models)
}
# for each model do: shapiro-welk, breusch-pagen, pagel's lambda
for (j in 1:nrow(pgls.models)) {
all.terms <- c("age.norm", "prop.norm", "age.norm:prop.norm")
model.terms <- as.data.frame(pgls.models)[j, all.terms]
if (all(is.na(model.terms))) {
model.terms <- "1"
} else {
model.terms <- all.terms[which(!is.na(model.terms))]
}
# lambda (phylogenetic signal)
formula <- reformulate(model.terms, response = "rsq")
gls.model <- glm(formula, data = cd$data)
gls.res <- resid(gls.model)
pgls.models$lambda.p[j] <- phylosig(tree = pruned.tree,
x = gls.res,
method = "lambda",
test = TRUE,
niter = 300)$P
# shapiro-welk (residual normality)
pgls.model <- get.models(pgls.models, j)[[1]]
pgls.res <- resid(pgls.model)
pgls.models$sw.p[j] <- shapiro.test(pgls.res)$p.value
# breusch-pagan (homoskedasticity)
if (all(is.na(model.terms))) {
pgls.models$bp.p[j] <- NA
} else {
pgls.models$bp.p[j] <- bptest(pgls.model)$p.value[[1]]
}
}
View(pgls.models)
library(MuMIn) # multimodel inference
library(phytools) # load and prune tree
library(caper) # PGLS
library(lmtest) # Breusch-Pagan test
# subset results
dat <- read.csv("../results/parsed.csv")
dat <- dat[!is.na(dat$chromnum.1n) & !duplicated(dat$species), ]
terms <- gsub("rep.prop.", "", names(dat)[grep("^rep.prop", names(dat))])
combs <- gsub("rep.age.", "", names(dat)[grep("^rep.age", names(dat))])
dat <- na.omit(dat[, c("species",
"clade",
"rsq",
paste0("rep.prop.", terms),
paste0("rep.age.", combs))])
i <- "All"
# subset clades
if (i %in% c("Mammalia", "Actinopterygii", "Sauria")) {
dat <- dat[dat$clade %in% c("Mammalia"), ]
}
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(dat$species, tree$tip.label)
dat <- dat[dat$species %in% int, ]
pruned.tree <- keep.tip(tree, int)
# loop through combinations of repeats; fit PGLS model for each
pgls.models <- other.stats <- data.frame()
for (j in combs) {
# get repeat age and proportion
rep <- unlist(strsplit(j, "\\."))
prop <- as.numeric(rowSums(as.data.frame(dat[, c(paste0("rep.prop.", rep))])))
age <- dat[, c(paste0("rep.age.", j))]
# create new dataframe to make comparative data object for PGLS; normalize data
sub <- dat[, c("species", "clade", "rsq")]
sub$age.norm <- (age - range(age)[1]) / diff(range(age))
sub$prop.norm <- (prop - range(prop)[1]) / diff(range(prop))
# create list with presence/absence for use in "extra" argument in dredge()
is.present <- as.numeric(terms %in% rep)
extra.list <- eval(parse(text = paste0(
"alist(",
paste(terms,
"= function(x) is.present[",
seq_along(terms),
"]",
collapse = ", "),
")")
))
# add empty columns to extra.list
na.cols <- alist(
clade = function(x) NA,
sw.p = function(x) NA,
bp.p = function(x) NA,
lambda.p = function(x) NA
)
extra.list <- c(extra.list, na.cols)
# fit model
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = TRUE)
models <- dredge(pgls(rsq ~ age.norm * prop.norm, data = cd),
subset = dc(x1, x2, x1:x2),
extra = extra.list)
# record estimates
pgls.models <- rbind(pgls.models, models)
}
View(pgls.models)
pgls.models$clade <- "hi"
