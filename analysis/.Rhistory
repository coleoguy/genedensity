}
# convert list into dataframe
df <- as.data.frame(do.call(rbind, lis))
# write
write.csv(df, file = "../results/model.average.csv", row.names = F)
df <- read.csv("../results/model.average.csv")
View(df)
res.physig.p <- phylosig(pruned.tree, res, method="lambda", test=TRUE)[[4]]
res.physig.p
pgls<- FALSE
end <- data.frame(res.physig.p, pgls)
View(end)
# for each repeat in each clade, make all 5 possible GLM models with repeat age,
# repeat proportion, and their interaction as the three predictor variables and
# R2 as the response variable. Average the 5 models. If the residuals of the
# averaged model shows phylogenetic signal, make and average PGLS models instead.
# for each model, the script will record the clade, repeat, beta coefficients,
# p values for beta coefficients, and the p value for lambda-based phylogenetic
# signal
# helper functions
# universal ordering of a table of 5 models
sortModels <- function(x) {
first <- which(!is.na(x[, terms[-1]][1]) &
!is.na(x[, terms[-1]][2]) &
!is.na(x[, terms[-1]][3]))
second <- which(!is.na(x[, terms[-1]][1]) &
!is.na(x[, terms[-1]][2]) &
is.na(x[, terms[-1]][3]))
third <- which(is.na(x[, terms[-1]][1]) &
!is.na(x[, terms[-1]][2]) &
is.na(x[, terms[-1]][3]))
fourth <- which(!is.na(x[, terms[-1]][1]) &
is.na(x[, terms[-1]][2]) &
is.na(x[, terms[-1]][3]))
fifth <- which(is.na(x[, terms[-1]][1]) &
is.na(x[, terms[-1]][2]) &
is.na(x[, terms[-1]][3]))
order <- c(first, second, third, fourth, fifth)
return(x[order, ])
}
library(caper) # apply PGLS
library(data.table) # quickly read data
library(MuMIn) # calculate AIC
library(piecewiseSEM) # calculate R2 for PGLS objects
library(phytools) # phy stuff
terms <- c(
"(Intercept)",
"median.trans",
"rep.prop",
"median.trans:rep.prop"
)
dat <- fread("../results/parsed.csv")
dat <- as.data.frame(dat)
dat <- dat[!is.na(dat$chromnum.1n), ]
dat <- dat[dat$thrs == 0.8, ]
# store results a list to save memory
lis <- list()
# for each clade
for (cl in c("Total", "Mammalia", "Actinopterygii", "Sauria")) {
# for each repeat type
for (rep in c("total", "line", "sine", "ltr", "dna", "rc")) {
head <- as.data.frame(t(setNames(c(cl, rep), c("cl", "rep"))))
# subset data for normalization
sub <- dat[!duplicated(dat$species), ]
sub <- na.omit(sub[, c("species", "rsq", "clade", paste0(rep, ".rep.median"), paste0(rep, ".rep.pct"))])
if (cl %in% c("Mammalia", "Actinopterygii", "Sauria")) {
sub <- sub[sub$clade == cl, ]
}
sub <- sub[sub$species != "Callithrix jacchus", ]
if (nrow(sub) <= 2) {
next
}
# transform and normalize
median <- 1 - (sub[[paste0(rep, ".rep.median")]]/70)
median.range <- range(na.omit(median))
sub$median.trans <- (median - median.range[1]) / diff(median.range)
vol <- sub[[paste0(rep, ".rep.pct")]] / 100
vol.range <- range(na.omit(vol))
sub$rep.prop <- (vol - vol.range[1]) / diff(vol.range)
sub <- na.omit(sub[, c("species", "rsq", "clade", "median.trans", "rep.prop")])
# prune tree and dataset based on species intersection
tree <- read.tree("../data/formatted.tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(tree$tip.label, sub$species)
if (length(int) <= 2) {
next
}
pruned.tree <- keep.tip(tree, int)
sub <- sub[sub$species %in% int, ]
# find all possible GLMs
formula <- reformulate(terms[-1], "rsq")
glm.models <- dredge(glm(formula, data = sub, na.action = na.fail), subset = dc(x1, x2, x1:x2))
glm.models <- sortModels(glm.models)
# TEST
glm.models <- get.models(glm.models, subset = 1:nrow(glm.models))
glm.avg <- model.avg(glm.models)
res <- setNames((sub$rsq - predict(glm.avg, type = "response")), sub$species)
res.physig.p <- phylosig(pruned.tree, res, method="lambda", test=TRUE)[[4]]
if (res.physig.p < 0.05) {
pgls <- TRUE
cd <- comparative.data(pruned.tree, sub, names.col = "species", vcv = T)
pgls.models <- dredge(pgls(formula, data = cd), subset = dc(x1, x2, x1:x2))
pgls.models <- sortModels(pgls.models)
pgls.models <- get.models(pgls.models, subset = 1:nrow(pgls.models))
pgls.avg <- model.avg(pgls.models)
summary(pgls.avg)$coefmat.full
beta <- as.data.frame(t(summary(pgls.avg)$coefmat.full[, "Estimate"]))
names(beta) <- c("intercept.b", "age.b", "prop.b", "interact.b")
p <- as.data.frame(t(summary(pgls.avg)$coefmat.full[, "Pr(>|z|)"]))
names(p) <- c("intercept.p", "age.p", "prop.p", "interact.p")
} else {
pgls<- FALSE
summary(glm.avg)$coefmat.full
beta <- as.data.frame(t(summary(glm.avg)$coefmat.full[, "Estimate"]))
names(beta) <- c("intercept.b", "age.b", "prop.b", "interact.b")
p <- as.data.frame(t(summary(glm.avg)$coefmat.full[, "Pr(>|z|)"]))
names(p) <- c("intercept.p", "age.p", "prop.p", "interact.p")
}
end <- data.frame(res.physig.p, pgls)
lis <- c(lis, list(cbind(head, beta, p, end)))
}
}
# convert list into dataframe
df <- as.data.frame(do.call(rbind, lis))
# write
write.csv(df, file = "../results/model.average.csv", row.names = F)
df <- read.csv("../results/model.average.csv")
View(df)
df <- read.csv("../results/AICs.csv")
View(df)
View(df)
model.avg
library(MuMIn) # calculate AIC
model.avg()
library(caper) # make PGLS models
library(data.table) # quickly read data
library(MuMIn) # calculate AIC
library(phytools) # phy stuff
model.avg()
model.avg
View(df)
View(df)
View(df)
cl <- "Total"
rep <- "total"
sub <- df[df$cl == cl & df$rep == rep, ]
View(sub)
for (pgls in c(T, F)) {
# number of nearly-as-good models
# number of model
print(as.character(pgls))
}
pgls <- T
sub <- df[df$cl == cl & df$rep == rep, is.na(df$res.physig.p) == pgls]
rep
sub <- df[df$cl == cl & df$rep == rep && is.na(df$res.physig.p) == pgls, ]
dat <- df[df$cl == cl & df$rep == rep, ]
# number of nearly-as-good models...
sub <- dat[is.na(dat$res.physig.p) == T, ]
View(sub)
# number of nearly-as-good models...
sub <- dat[is.na(dat$res.physig.p) == F, ]
View(sub)
# number of nearly-as-good models...
sub <- dat[is.na(dat$res.physig.p) == F, ]
View(sub)
# number of nearly-as-good models...
sub <- dat[is.na(dat$res.physig.p) == T, ]
View(sub)
# number of nearly-as-good models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
View(sub)
# number of nearly-as-good models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
nrow(sub[sub$delta <= 2, ])
num.similar.aic <- nrow(sub[sub$delta <= 2, ])
# ... where age is consistant with hypothesis
all(is.na(sub) | df$median.trans < 0)
# ... where age is consistant with hypothesis
all(is.na(sub) | sub$median.trans < 0)
# ... where interaction is consistant with hypothesis
all(is.na(sub) | sub$median.trans.rep.prop < 0)
# ... where age is consistant with hypothesis
sum(is.na(df$colname) | df$colname < 0)
# ... where proportion is consistant with hypothesis
sum(is.na(df$colname) | df$colname < 0)
# ... where age is consistant with hypothesis
sum(is.na(sub$median.trans) | sub$median.trans < 0)
# ... where age is consistant with hypothesis
sum(is.na(sub$median.trans) | sub$median.trans < 0)
# ... where age is consistant with hypothesis
sum(is.na(sub$median.trans) | sub$median.trans < 0)
# ... where age is consistant with hypothesis
sum(is.na(sub$median.trans) | sub$median.trans < 0)
# ... where proportion is consistant with hypothesis
sum(is.na(sub$rep.prop) | sub$rep.prop < 0)
# ... where interaction is consistant with hypothesis
sum(is.na(sub$median.trans.rep.prop) | sub$median.trans.rep.prop < 0)
num.similar.aic <- nrow(sub[sub$delta <= 2, ])
# ... where age is consistant with hypothesis
sum(is.na(sub$median.trans) | sub$median.trans < 0)
# ... where proportion is consistant with hypothesis
sum(is.na(sub$rep.prop) | sub$rep.prop < 0)
# ... where interaction is consistant with hypothesis
sum(is.na(sub$median.trans.rep.prop) | sub$median.trans.rep.prop < 0)
5-num.similar.aic
# ... where age is consistant with hypothesis
sum(is.na(sub$median.trans) | sub$median.trans < 0)
# ... where age is consistant with hypothesis
5-sum(is.na(sub$median.trans) | sub$median.trans < 0)
# ... where proportion is consistant with hypothesis
5-sum(is.na(sub$rep.prop) | sub$rep.prop < 0)
# ... where interaction is consistant with hypothesis
5-sum(is.na(sub$median.trans.rep.prop) | sub$median.trans.rep.prop < 0)
# ... where age is consistant with hypothesis
sum(is.na(sub$median.trans) | sub$median.trans < 0)
num.higher.aic <- 5-num.similar.aic
num.higher.aic
# ... where age is consistant with hypothesis
sum(is.na(sub$median.trans) | sub$median.trans < 0) - num.higher.aic
# ... where proportion is consistant with hypothesis
sum(is.na(sub$rep.prop) | sub$rep.prop < 0) - num.higher.aic
# ... where interaction is consistant with hypothesis
sum(is.na(sub$median.trans.rep.prop) | sub$median.trans.rep.prop < 0) - num.higher.aic
# number of nearly-as-good models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
num.similar.aic <- nrow(sub[sub$delta <= 2, ])
num.higher.aic <- 5-num.similar.aic
# ... where age is consistant with hypothesis
sum(is.na(sub$median.trans) | sub$median.trans < 0) - num.higher.aic
# ... where proportion is consistant with hypothesis
sum(is.na(sub$rep.prop) | sub$rep.prop < 0) - num.higher.aic
# ... where interaction is consistant with hypothesis
sum(is.na(sub$median.trans.rep.prop) | sub$median.trans.rep.prop < 0) - num.higher.aic
# number of nearly-as-good models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
num.similar.aic <- nrow(sub[sub$delta <= 2, ])
num.higher.aic <- 5-num.similar.aic
# ... where age is consistant with hypothesis
num.age <- sum(is.na(sub$median.trans) | sub$median.trans < 0) - num.higher.aic
# ... where proportion is consistant with hypothesis
num.prop <- sum(is.na(sub$rep.prop) | sub$rep.prop < 0) - num.higher.aic
# ... where interaction is consistant with hypothesis
num.interaction <- sum(is.na(sub$median.trans.rep.prop) | sub$median.trans.rep.prop < 0) - num.higher.aic
for (pgls in c(T, F)) {
# number of nearly-as-good models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
num.similar.aic <- nrow(sub[sub$delta <= 2, ])
num.higher.aic <- 5-num.similar.aic
# ... where age is consistant with hypothesis
num.age <- sum(is.na(sub$median.trans) | sub$median.trans < 0) - num.higher.aic
# ... where proportion is consistant with hypothesis
num.prop <- sum(is.na(sub$rep.prop) | sub$rep.prop < 0) - num.higher.aic
# ... where interaction is consistant with hypothesis
num.interaction <- sum(is.na(sub$median.trans.rep.prop) | sub$median.trans.rep.prop < 0) - num.higher.aic
}
num.interaction
sum(sub$median.trans < 0)
sub$median.trans < 0
which(sub$median.trans < 0)
length(which(sub$median.trans < 0))
sub <- sub[sub$delta <= 2, ]
View(sub)
cl <- "Total"
rep <- "total"
pgls <- T
dat <- df[df$cl == cl & df$rep == rep, ]
df <- read.csv("../results/AICs.csv")
dat <- df[df$cl == cl & df$rep == rep, ]
# number of nearly-as-good models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
sub <- sub[sub$delta <= 2, ]
num.similar.aic <- nrow(sub)
# ... where age is consistant with hypothesis
num.age <- length(which(sub$median.trans < 0))
# ... where proportion is consistant with hypothesis
num.prop <- length(which(sub$rep.prop < 0))
# ... where interaction is consistant with hypothesis
num.interaction <- length(which(sub$median.trans.rep.prop < 0))
View(sub)
# ... where age contradicts hypothesis
num.age <- length(which(sub$median.trans > 0))
# ... where proportion contradicts hypothesis
num.prop <- length(which(sub$rep.prop > 0))
# ... where interaction contradicts hypothesis
num.interaction <- length(which(sub$median.trans.rep.prop > 0))
data.frame(num.similar.aic, num.age, num.prop, num.interaction)
# number of nearly-as-good models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
sub <- sub[sub$delta <= 2, ]
num.similar.aic <- nrow(sub)
# ... where age contradicts hypothesis
num.age <- length(which(sub$median.trans > 0))
# ... where proportion contradicts hypothesis
num.prop <- length(which(sub$rep.prop > 0))
# ... where interaction contradicts hypothesis
num.int <- length(which(sub$median.trans.rep.prop > 0))
data.frame(num.similar.aic, num.age, num.prop, num.int)
df <- read.csv("../results/AICs.csv")
d <- data.frame()
for (cl in c("Total", "Mammalia", "Actinopterygii", "Sauria")) {
# for each repeat type
for (rep in c("total", "line", "sine", "ltr", "dna", "rc")) {
dat <- df[df$cl == cl & df$rep == rep, ]
for (pgls in c(T, F)) {
# number of nearly-as-good models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
sub <- sub[sub$delta <= 2, ]
num.similar.aic <- nrow(sub)
# ... where age contradicts hypothesis
num.age <- length(which(sub$median.trans > 0))
# ... where proportion contradicts hypothesis
num.prop <- length(which(sub$rep.prop > 0))
# ... where interaction contradicts hypothesis
num.int <- length(which(sub$median.trans.rep.prop > 0))
d <- rbind(d, data.frame(cl, rep, pgls, num.similar.aic, num.age, num.prop, num.int))
}
}
}
View(d)
View(d)
d <- d[d$num.age == 0 & d$num.prop == 0 & d$num.int == 0, ]
View(d)
View(df)
dat[is.na(dat$res.physig.p) == pgls, ]
# number of other models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
sub <- sub[sub$delta >= 2 & sub$delta <= 10, ]
View(sub)
# number of other models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
sub <- sub[sub$delta >= 2 & sub$delta <= 10, ]
num.similar.10 <- nrow(sub)
# ... where age contradicts hypothesis
num.age.10 <- length(which(sub$median.trans > 0))
# ... where proportion contradicts hypothesis
num.prop.10 <- length(which(sub$rep.prop > 0))
# ... where interaction contradicts hypothesis
num.int.10 <- length(which(sub$median.trans.rep.prop > 0))
df <- read.csv("../results/AICs.csv")
d <- data.frame()
for (cl in c("Total", "Mammalia", "Actinopterygii", "Sauria")) {
# for each repeat type
for (rep in c("total", "line", "sine", "ltr", "dna", "rc")) {
dat <- df[df$cl == cl & df$rep == rep, ]
for (pgls in c(T, F)) {
# number of nearly-as-good models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
sub <- sub[sub$delta <= 2, ]
num.similar.2 <- nrow(sub)
# ... where age contradicts hypothesis
num.age.2 <- length(which(sub$median.trans > 0))
# ... where proportion contradicts hypothesis
num.prop.2 <- length(which(sub$rep.prop > 0))
# ... where interaction contradicts hypothesis
num.int.2 <- length(which(sub$median.trans.rep.prop > 0))
# number of other models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
sub <- sub[sub$delta >= 2 & sub$delta <= 10, ]
num.similar.10 <- nrow(sub)
# ... where age contradicts hypothesis
num.age.10 <- length(which(sub$median.trans > 0))
# ... where proportion contradicts hypothesis
num.prop.10 <- length(which(sub$rep.prop > 0))
# ... where interaction contradicts hypothesis
num.int.10 <- length(which(sub$median.trans.rep.prop > 0))
d <- rbind(d, data.frame(cl, rep, pgls, num.similar.2, num.age.2, num.prop.2, num.int.2, num.similar.10, num.age.10, num.prop.10, num.int.10))
}
}
}
View(d)
d <- d[d$num.age.2 == 0 & d$num.prop.2 == 0 & d$num.int.2 == 0 & d$num.age.10 == 0 & d$num.prop.10 == 0 & d$num.int.10 == 0, ]
View(d)
df <- read.csv("../results/AICs.csv")
d <- data.frame()
for (cl in c("Total", "Mammalia", "Actinopterygii", "Sauria")) {
# for each repeat type
for (rep in c("total", "line", "sine", "ltr", "dna", "rc")) {
dat <- df[df$cl == cl & df$rep == rep, ]
for (pgls in c(T, F)) {
# number of nearly-as-good models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
sub <- sub[sub$delta <= 2, ]
num.similar.2 <- nrow(sub)
# ... where age contradicts hypothesis
num.age.2 <- length(which(sub$median.trans > 0))
# ... where proportion contradicts hypothesis
num.prop.2 <- length(which(sub$rep.prop > 0))
# ... where interaction contradicts hypothesis
num.int.2 <- length(which(sub$median.trans.rep.prop > 0))
# number of other models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
sub <- sub[sub$delta >= 2 & sub$delta <= 10, ]
num.similar.10 <- nrow(sub)
# ... where age contradicts hypothesis
num.age.10 <- length(which(sub$median.trans > 0))
# ... where proportion contradicts hypothesis
num.prop.10 <- length(which(sub$rep.prop > 0))
# ... where interaction contradicts hypothesis
num.int.10 <- length(which(sub$median.trans.rep.prop > 0))
d <- rbind(d, data.frame(cl, rep, pgls, num.similar.2, num.age.2, num.prop.2, num.int.2, num.similar.10, num.age.10, num.prop.10, num.int.10))
}
}
}
# models that are all good
d <- d[d$num.age.2 == 0 & d$num.prop.2 == 0 & d$num.int.2 == 0 & d$num.age.10 == 0 & d$num.prop.10 == 0 & d$num.int.10 == 0, ]
df <- read.csv("../results/AICs.csv")
d <- data.frame()
for (cl in c("Total", "Mammalia", "Actinopterygii", "Sauria")) {
# for each repeat type
for (rep in c("total", "line", "sine", "ltr", "dna", "rc")) {
dat <- df[df$cl == cl & df$rep == rep, ]
for (pgls in c(T, F)) {
# number of nearly-as-good models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
sub <- sub[sub$delta <= 2, ]
num.similar.2 <- nrow(sub)
# ... where age contradicts hypothesis
num.age.2 <- length(which(sub$median.trans > 0))
# ... where proportion contradicts hypothesis
num.prop.2 <- length(which(sub$rep.prop > 0))
# ... where interaction contradicts hypothesis
num.int.2 <- length(which(sub$median.trans.rep.prop > 0))
# number of other models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
sub <- sub[sub$delta >= 2 & sub$delta <= 10, ]
num.similar.10 <- nrow(sub)
# ... where age contradicts hypothesis
num.age.10 <- length(which(sub$median.trans > 0))
# ... where proportion contradicts hypothesis
num.prop.10 <- length(which(sub$rep.prop > 0))
# ... where interaction contradicts hypothesis
num.int.10 <- length(which(sub$median.trans.rep.prop > 0))
d <- rbind(d, data.frame(cl, rep, pgls, num.similar.2, num.age.2, num.prop.2, num.int.2, num.similar.10, num.age.10, num.prop.10, num.int.10))
}
}
}
# models that are all good
d <- d[d$num.age.2 == 0 & d$num.prop.2 == 0 & d$num.int.2 == 0 & d$num.age.10 == 0 & d$num.prop.10 == 0 & d$num.int.10 == 0, ]
View(d)
df <- read.csv("../results/AICs.csv")
d <- data.frame()
for (cl in c("Total", "Mammalia", "Actinopterygii", "Sauria")) {
# for each repeat type
for (rep in c("total", "line", "sine", "ltr", "dna", "rc")) {
dat <- df[df$cl == cl & df$rep == rep, ]
for (pgls in c(T, F)) {
# number of nearly-as-good models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
sub <- sub[sub$delta <= 2, ]
num.similar.2 <- nrow(sub)
# ... where age contradicts hypothesis
num.age.2 <- length(which(sub$median.trans > 0))
# ... where proportion contradicts hypothesis
num.prop.2 <- length(which(sub$rep.prop > 0))
# ... where interaction contradicts hypothesis
num.int.2 <- length(which(sub$median.trans.rep.prop > 0))
# number of other models...
sub <- dat[is.na(dat$res.physig.p) == pgls, ]
sub <- sub[sub$delta >= 2 & sub$delta <= 10, ]
num.similar.10 <- nrow(sub)
# ... where age contradicts hypothesis
num.age.10 <- length(which(sub$median.trans > 0))
# ... where proportion contradicts hypothesis
num.prop.10 <- length(which(sub$rep.prop > 0))
# ... where interaction contradicts hypothesis
num.int.10 <- length(which(sub$median.trans.rep.prop > 0))
d <- rbind(d, data.frame(cl, rep, pgls, num.similar.2, num.age.2, num.prop.2, num.int.2, num.similar.10, num.age.10, num.prop.10, num.int.10))
}
}
}
View(d)
View(d)
View(df)
df <- df[is.na(df$res.physig.p), ]
View(df)
df <- df[, c("cl", "rep", "median.trans", "rep.prop", "median.trans.rep.prop", "AICc")]
View(df)
df <- read.csv("../results/AICs.csv")
View(df)
df <- df[, c("cl", "rep", "median.trans", "rep.prop", "median.trans.rep.prop", "AICc", "delta")]
View(df)
df[1]$aic-df[2]$aic
df$AICc[1]-df$AICc[2]
df$AICc[1]-df$AICc[3]
df$AICc[1]-df$AICc[4]
df$AICc[1]-df$AICc[5]
df <- df[, c("cl", "rep", "median.trans", "rep.prop", "median.trans.rep.prop", "AICc", "delta", "df$res.physig.p")]
df <- read.csv("../results/AICs.csv")
df <- df[, c("cl", "rep", "median.trans", "rep.prop", "median.trans.rep.prop", "AICc", "delta", "df$res.physig.p")]
df <- read.csv("../results/AICs.csv")
df <- df[, c("cl", "rep", "median.trans", "rep.prop", "median.trans.rep.prop", "AICc", "delta", "res.physig.p")]
View(df)
devtools::install_github("pennell-lab-ubc/arbutus")
library(arbutus)
?arbutus
# convert list into dataframe
df <- as.data.frame(do.call(rbind, lis))
df <- read.csv("../results/AICs.csv")
library(MuMin)
library(MuMIn)
library(arbutus)
df <- read.csv("../results/AICs.csv")
df <- df[, c("cl", "rep", "median.trans", "rep.prop", "median.trans.rep.prop", "AICc", "delta", "res.physig.p")]
View(df)
View(df)
library(MuMIn)
library(arbutus)
df <- read.csv("../results/AICs.csv")
get.models(dc, 1)
get.models(d1, 1)
get.models(df, 1)
