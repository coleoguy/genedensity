age <- dat[grep("^age\\.", colnames(dat))]
prop <- dat[grep("^prop\\.", colnames(dat))]
l <- age * prop
dat <- cbind(dat[, c("species", "clade", "rsq")], l)
variables <- variables[c(2, 4, 6, 8, 10, 12)]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
int <- intersect(dat$species, tree$tip.label)
# rescale
for (j in variables) {
dat[[j]] <- (dat[[j]]-min(dat[[j]])) / diff(range(dat[[j]]))
}
# cd <- comparative.data(pruned.tree, dat, names.col = "species", vcv = TRUE)
# global model
global.model <- glm(reformulate(variables, response = "rsq"), data = dat)
# set constraints
model.terms <- unlist(strsplit(as.character(global.model$formula)[3], " \\+ "))
# dredge
models <- dredge(global.model,
extra = list(shapirowilk.p = sw.test, lambda.p = lambda.test)
)
models <- models[order(models$AICc), ]
models <- models[cumsum(models$weight) <= 0.95, ]
View(models)
i <- "Actinopterygii"
# subset results
dat <- merge(rsq, repeats, by.x = "species", by.y = "species", all.x = T, all.y = T)
if (i %in% c("Mammalia", "Actinopterygii", "Sauropsida")) {
dat <- dat[dat$clade %in% i, ]
}
variables <- colnames(dat)[grep("^(prop|age)\\.", colnames(dat))]
dat <- na.omit(dat[, c("species", "clade", "rsq", variables)])
age <- dat[grep("^age\\.", colnames(dat))]
prop <- dat[grep("^prop\\.", colnames(dat))]
l <- age * prop
dat <- cbind(dat[, c("species", "clade", "rsq")], l)
variables <- variables[c(2, 4, 6, 8, 10, 12)]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
int <- intersect(dat$species, tree$tip.label)
# rescale
for (j in variables) {
dat[[j]] <- (dat[[j]]-min(dat[[j]])) / diff(range(dat[[j]]))
}
# cd <- comparative.data(pruned.tree, dat, names.col = "species", vcv = TRUE)
# global model
global.model <- glm(reformulate(variables, response = "rsq"), data = dat)
# set constraints
model.terms <- unlist(strsplit(as.character(global.model$formula)[3], " \\+ "))
# dredge
models <- dredge(global.model,
extra = list(shapirowilk.p = sw.test, lambda.p = lambda.test)
)
models <- models[order(models$AICc), ]
models <- models[cumsum(models$weight) <= 0.95, ]
View(models)
View(l)
i <- "Sauropsida"
# subset results
dat <- merge(rsq, repeats, by.x = "species", by.y = "species", all.x = T, all.y = T)
if (i %in% c("Mammalia", "Actinopterygii", "Sauropsida")) {
dat <- dat[dat$clade %in% i, ]
}
variables <- colnames(dat)[grep("^(prop|age)\\.", colnames(dat))]
dat <- na.omit(dat[, c("species", "clade", "rsq", variables)])
age <- dat[grep("^age\\.", colnames(dat))]
prop <- dat[grep("^prop\\.", colnames(dat))]
l <- age * prop
dat <- cbind(dat[, c("species", "clade", "rsq")], l)
variables <- variables[c(2, 4, 6, 8, 10, 12)]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
int <- intersect(dat$species, tree$tip.label)
# rescale
for (j in variables) {
dat[[j]] <- (dat[[j]]-min(dat[[j]])) / diff(range(dat[[j]]))
}
# cd <- comparative.data(pruned.tree, dat, names.col = "species", vcv = TRUE)
# global model
global.model <- glm(reformulate(variables, response = "rsq"), data = dat)
# set constraints
model.terms <- unlist(strsplit(as.character(global.model$formula)[3], " \\+ "))
# dredge
models <- dredge(global.model,
extra = list(shapirowilk.p = sw.test, lambda.p = lambda.test)
)
models <- models[order(models$AICc), ]
models <- models[cumsum(models$weight) <= 0.95, ]
View(models)
i
i <- "All"
# subset results
dat <- merge(rsq, repeats, by.x = "species", by.y = "species", all.x = T, all.y = T)
if (i %in% c("Mammalia", "Actinopterygii", "Sauropsida")) {
dat <- dat[dat$clade %in% i, ]
}
variables <- colnames(dat)[grep("^(prop|age)\\.", colnames(dat))]
dat <- na.omit(dat[, c("species", "clade", "rsq", variables)])
age <- dat[grep("^age\\.", colnames(dat))]
prop <- dat[grep("^prop\\.", colnames(dat))]
l <- age * prop
dat <- cbind(dat[, c("species", "clade", "rsq")], l)
variables <- variables[c(2, 4, 6, 8, 10, 12)]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
int <- intersect(dat$species, tree$tip.label)
# rescale
for (j in variables) {
dat[[j]] <- (dat[[j]]-min(dat[[j]])) / diff(range(dat[[j]]))
}
# cd <- comparative.data(pruned.tree, dat, names.col = "species", vcv = TRUE)
# global model
global.model <- glm(reformulate(variables, response = "rsq"), data = dat)
# set constraints
model.terms <- unlist(strsplit(as.character(global.model$formula)[3], " \\+ "))
# dredge
models <- dredge(global.model,
extra = list(shapirowilk.p = sw.test, lambda.p = lambda.test)
)
models <- models[order(models$AICc), ]
models <- models[cumsum(models$weight) <= 0.95, ]
View(models)
# subset results
dat <- merge(rsq, repeats, by.x = "species", by.y = "species", all.x = T, all.y = T)
if (i %in% c("Mammalia", "Actinopterygii", "Sauropsida")) {
dat <- dat[dat$clade %in% i, ]
}
variables <- colnames(dat)[grep("^(prop|age)\\.", colnames(dat))]
dat <- na.omit(dat[, c("species", "clade", "rsq", variables)])
age <- dat[grep("^age\\.", colnames(dat))]
prop <- dat[grep("^prop\\.", colnames(dat))]
l <- age * prop
dat <- cbind(dat[, c("species", "clade", "rsq")], l)
variables <- variables[c(2, 4, 6, 8, 10, 12)]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
int <- intersect(dat$species, tree$tip.label)
# rescale
for (j in variables) {
dat[[j]] <- (dat[[j]]-min(dat[[j]])) / diff(range(dat[[j]]))
}
# global model
global.model <- glm(reformulate(variables, response = "rsq"), data = dat)
# set constraints
model.terms <- unlist(strsplit(as.character(global.model$formula)[3], " \\+ "))
if (i %in% c("Mammalia", "Sauropsida")) {
cd <- comparative.data(pruned.tree, dat, names.col = "species", vcv = TRUE)
global.model <- pgls(reformulate(variables, response = "rsq"), data = cd)
models <- dredge(global.model,
extra = list(shapirowilk.p = sw.test, lambda.p = lambda.test)
)
}
View(models)
library(MuMIn) # multimodel inference
library(phytools) # load and prune tree
library(caper) # PGLS
options(na.action = "na.fail")
# functions
source("functions.R")
rsq <- read.csv("../results/rsq.csv")
repeats <- read.csv("../results/repeats.csv")
combined.df <- data.frame()
# loop for each clade
i <- "All"
# subset results
dat <- merge(rsq, repeats, by.x = "species", by.y = "species", all.x = T, all.y = T)
if (i %in% c("Mammalia", "Actinopterygii", "Sauropsida")) {
dat <- dat[dat$clade %in% i, ]
}
variables <- colnames(dat)[grep("^(prop|age)\\.", colnames(dat))]
dat <- na.omit(dat[, c("species", "clade", "rsq", variables)])
age <- dat[grep("^age\\.", colnames(dat))]
prop <- dat[grep("^prop\\.", colnames(dat))]
l <- age * prop
dat <- cbind(dat[, c("species", "clade", "rsq")], l)
variables <- variables[c(2, 4, 6, 8, 10, 12)]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
int <- intersect(dat$species, tree$tip.label)
# rescale
for (j in variables) {
dat[[j]] <- (dat[[j]]-min(dat[[j]])) / diff(range(dat[[j]]))
}
# cd <- comparative.data(pruned.tree, dat, names.col = "species", vcv = TRUE)
# global model
global.model <- glm(reformulate(variables, response = "rsq"), data = dat)
# set constraints
model.terms <- unlist(strsplit(as.character(global.model$formula)[3], " \\+ "))
if (i %in% c("Mammalia", "Sauropsida")) {
cd <- comparative.data(pruned.tree, dat, names.col = "species", vcv = TRUE)
global.model <- pgls(reformulate(variables, response = "rsq"), data = cd)
models <- dredge(global.model,
extra = list(shapirowilk.p = sw.test, lambda.p = lambda.test)
)
} else {
# dredge
models <- dredge(global.model,
extra = list(shapirowilk.p = sw.test, lambda.p = lambda.test)
)
}
if (i %in% c("All", "Sauropsida")) {
cd <- comparative.data(pruned.tree, dat, names.col = "species", vcv = TRUE)
global.model <- pgls(reformulate(variables, response = "rsq"), data = cd)
models <- dredge(global.model,
extra = list(shapirowilk.p = sw.test, lambda.p = lambda.test)
)
} else {
# dredge
models <- dredge(global.model,
extra = list(shapirowilk.p = sw.test, lambda.p = lambda.test)
)
}
if (i %in% c("All", "Sauropsida")) {
cd <- comparative.data(tree, dat, names.col = "species", vcv = TRUE)
global.model <- pgls(reformulate(variables, response = "rsq"), data = cd)
models <- dredge(global.model,
extra = list(shapirowilk.p = sw.test, lambda.p = lambda.test)
)
} else {
# dredge
models <- dredge(global.model,
extra = list(shapirowilk.p = sw.test, lambda.p = lambda.test)
)
}
cd <- comparative.data(tree, dat, names.col = "species", vcv = TRUE)
global.model <- pgls(reformulate(variables, response = "rsq"), data = cd)
models <- dredge(global.model
#extra = list(shapirowilk.p = sw.test, lambda.p = lambda.test)
)
library(MuMIn) # multimodel inference
library(phytools) # load and prune tree
library(caper) # PGLS
options(na.action = "na.fail")
# functions
source("functions.R")
rsq <- read.csv("../results/rsq.csv")
repeats <- read.csv("../results/repeats.csv")
combined.df <- data.frame()
# loop for each clade
for (i in c("All", "Mammalia", "Actinopterygii", "Sauropsida")) {
# subset results
dat <- merge(rsq, repeats, by.x = "species", by.y = "species", all.x = T, all.y = T)
if (i %in% c("Mammalia", "Actinopterygii", "Sauropsida")) {
dat <- dat[dat$clade %in% i, ]
}
variables <- colnames(dat)[grep("^(prop|age)\\.", colnames(dat))]
dat <- na.omit(dat[, c("species", "clade", "rsq", variables)])
age <- dat[grep("^age\\.", colnames(dat))]
prop <- dat[grep("^prop\\.", colnames(dat))]
l <- age * prop
dat <- cbind(dat[, c("species", "clade", "rsq")], l)
variables <- variables[c(2, 4, 6, 8, 10, 12)]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
int <- intersect(dat$species, tree$tip.label)
# rescale
for (j in variables) {
dat[[j]] <- (dat[[j]]-min(dat[[j]])) / diff(range(dat[[j]]))
}
# cd <- comparative.data(pruned.tree, dat, names.col = "species", vcv = TRUE)
# global model
global.model <- glm(reformulate(variables, response = "rsq"), data = dat)
# set constraints
model.terms <- unlist(strsplit(as.character(global.model$formula)[3], " \\+ "))
if (i %in% c("All", "Sauropsida")) {
cd <- comparative.data(tree, dat, names.col = "species", vcv = TRUE)
global.model <- pgls(reformulate(variables, response = "rsq"), data = cd)
models <- dredge(global.model
#extra = list(shapirowilk.p = sw.test, lambda.p = lambda.test)
)
} else {
# dredge
models <- dredge(global.model,
extra = list(shapirowilk.p = sw.test, lambda.p = lambda.test)
)
}
models <- models[order(models$AICc), ]
models <- models[cumsum(models$weight) <= 0.95, ]
imp <- sort(sw(models), decreasing = TRUE)
avg <- model.avg(models)
ci <- confint(avg)
ci <- ci[match(names(imp), row.names(ci)), ] #match ci
ci <- as.data.frame(ci)
idx <- which(sign(ci[, 1]) == sign(ci[, 2])) # idx where 0 is not in ci
ci <- ci[idx, ]# subset ci
imp <- imp[idx]# subset importance
if (length(imp) == 0) {
next
}
df <- data.frame(i,
names(imp),
sapply(1:nrow(ci), function(x) mean(unlist(ci[x, ]))),
imp,
ci[, 1],
ci[, 2])
colnames(df) <- c("clade", "model", "estimate", "importance", "lower", "upper")
if (nrow(combined.df) == 0) {
combined.df <- df
} else {
combined.df <- rbind(combined.df, df)
}
}
library(MuMIn) # multimodel inference
library(phytools) # load and prune tree
library(caper) # PGLS
options(na.action = "na.fail")
# functions
source("functions.R")
rsq <- read.csv("../results/rsq.csv")
repeats <- read.csv("../results/repeats.csv")
combined.df <- data.frame()
# loop for each clade
for (i in c("All", "Mammalia", "Actinopterygii", "Sauropsida")) {
# subset results
dat <- merge(rsq, repeats, by.x = "species", by.y = "species", all.x = T, all.y = T)
if (i %in% c("Mammalia", "Actinopterygii", "Sauropsida")) {
dat <- dat[dat$clade %in% i, ]
}
variables <- colnames(dat)[grep("^(prop|age)\\.", colnames(dat))]
dat <- na.omit(dat[, c("species", "clade", "rsq", variables)])
age <- dat[grep("^age\\.", colnames(dat))]
prop <- dat[grep("^prop\\.", colnames(dat))]
l <- age * prop
dat <- cbind(dat[, c("species", "clade", "rsq")], l)
variables <- variables[c(2, 4, 6, 8, 10, 12)]
# prune tree
tree <- read.tree("../data/formatted.tree.nwk")
int <- intersect(dat$species, tree$tip.label)
# rescale
for (j in variables) {
dat[[j]] <- (dat[[j]]-min(dat[[j]])) / diff(range(dat[[j]]))
}
# cd <- comparative.data(pruned.tree, dat, names.col = "species", vcv = TRUE)
# global model
global.model <- glm(reformulate(variables, response = "rsq"), data = dat)
# set constraints
model.terms <- unlist(strsplit(as.character(global.model$formula)[3], " \\+ "))
if (i %in% c("All", "Sauropsida")) {
cd <- comparative.data(tree, dat, names.col = "species", vcv = TRUE)
global.model <- pgls(reformulate(variables, response = "rsq"), data = cd)
models <- dredge(global.model
#extra = list(shapirowilk.p = sw.test, lambda.p = lambda.test)
)
} else {
# dredge
models <- dredge(global.model
#extra = list(shapirowilk.p = sw.test, lambda.p = lambda.test)
)
}
models <- models[order(models$AICc), ]
models <- models[cumsum(models$weight) <= 0.95, ]
imp <- sort(sw(models), decreasing = TRUE)
avg <- model.avg(models)
ci <- confint(avg)
ci <- ci[match(names(imp), row.names(ci)), ] #match ci
ci <- as.data.frame(ci)
idx <- which(sign(ci[, 1]) == sign(ci[, 2])) # idx where 0 is not in ci
ci <- ci[idx, ]# subset ci
imp <- imp[idx]# subset importance
if (length(imp) == 0) {
next
}
df <- data.frame(i,
names(imp),
sapply(1:nrow(ci), function(x) mean(unlist(ci[x, ]))),
imp,
ci[, 1],
ci[, 2])
colnames(df) <- c("clade", "model", "estimate", "importance", "lower", "upper")
if (nrow(combined.df) == 0) {
combined.df <- df
} else {
combined.df <- rbind(combined.df, df)
}
}
combined.df <- combined.df[combined.df$importance > 0.5, ]
View(combined.df)
write.csv(combined.df, "../results/model.averaging.alt.csv", row.names = F)
# Base R
date <- as.Date("07052025", format = "%m%d%Y")
df <- data.frame(c(1, 2, 3, 4, 5),
df <- data.frame(c(1, 2, 3, 4, 5), c("07052025", "07042025", "07052025", "07052025", '07052025"))
df <- data.frame(c(1, 2, 3, 4, 5),
c("07052025", "07042025", "07052025", "07052025", "07052025"))
df <- data.frame(c(1, 2, 3, 4, 5),
c("07052025", "07042025", "07052025", "07052025", "07052025"))
df[, 2] <- as.Date(df[, 2], format = "%m%d%Y")
View(df)
df[, 2]
plot(df)
plyt(df[, 2], df[, 1])
plot(df[, 2], df[, 1])
df <- data.frame(c(1, 2, 3, 4, 5),
c("07052025", "07042025", "06052025", "07052024", "07052020"))
df[, 2] <- as.Date(df[, 2], format = "%m%d%Y")
plot(df[, 2], df[, 1])
dat <- "maskedsz.csv"
dat <- read.csv("maskedsz.csv")
dat <- read.csv("maskedsz.csv")
dat <- read.csv("../results/maskedsz.csv")
# Base R
date <- as.Date("07052025", format = "%m%d%Y")
dat <- read.csv("../results/maskedsz.csv")
df <- data.frame(c(1, 2, 3, 4, 5),
c("07052025", "07042025", "06052025", "07052024", "07052020"))
dat <- read.csv("../results/maskedsz.csv")
View(dat)
dat$date <- as.Date(dat$date, format = "%m%d%Y")
View(dat)
dat <- read.csv("../results/maskedsz.csv")
dat$date <- as.Date(dat$date, format = "%m%d%Y")
plot(df[, 2], df[, 1])
plot(dat$date, (dat$lower + dat$N))
View(dat)
View(dat)
dat <- read.csv("../results/maskedsz.csv")
dat$date <- as.Date(dat$date, format = "%m%d%Y")
plot(dat$date, (dat$lower + dat$N))
View(dat)
dat <- read.csv("../results/maskedsz.csv")
View(dat)
dat <- read.csv("../results/maskedsz.csv")
dat$date <- as.Date(dat$date, format = "%m%d%Y")
View(dat)
dat <- read.csv("../results/maskedsz.csv",
colClasses = c(data = "character"))
View(dat)
dat <- read.csv("../results/maskedsz.csv",
colClasses = c(6 = "character"))
dat <- read.csv("../results/maskedsz.csv",
colClasses = c("date" = "character"))
View(dat)
dat$date <- as.Date(dat$date, format = "%m%d%Y")
plot(dat$date, (dat$lower + dat$N))
View(dat)
dat <- read.csv("../results/maskedsz.csv",
colClasses = c("date" = "character"))
View(dat)
dat$date <- as.Date(dat$date, format = "%m%d%Y")
View(dat)
dat <- read.csv("../results/maskedsz.csv",
colClasses = c("date" = "character"))
as.Date(dat$date, format = "%m%d%Y")
View(dat)
dat <- read.csv("../results/maskedsz.csv",
colClasses = c("date" = "character"))
dat$date <- as.Date(dat$date, format = "%m%d%Y")
homo <- dat[dat$sp == "Homo_sapiens", ]
plot(homo$date, (homo$lower + homo$N))
View(homo)
plot(homo$date, (homo$lower))
plot(homo$date, homo$lower)
plot(homo$date, homo$assembly_size)
View(dat)
for (i in unique(dat$sp)) {
sub <- dat[dat$sp == i, ]
plot(i$date, i$assembly_size, title = i)
}
dat <- read.csv("../results/maskedsz.csv",
colClasses = c("date" = "character"))
dat$date <- as.Date(dat$date, format = "%m%d%Y")
op <- par(ask = TRUE)
for (i in unique(dat$sp)) {
sub <- dat[dat$sp == i, ]
plot(sub$date, sub$assembly_size, title = i)
}
dat$date <- as.Date(dat$date, format = "%m%d%Y")
dat <- read.csv("../results/maskedsz.csv",
colClasses = c("date" = "character"))
dat$date <- as.Date(dat$date, format = "%m%d%Y")
op <- par(ask = TRUE)
for (i in unique(dat$sp)) {
sub <- dat[dat$sp == i, ]
plot(sub$date, sub$assembly_size, title = i)
}
i
plot(sub$date, sub$assembly_size, title = i)
plot(sub$date, sub$assembly_size, title = i)
?plot()
?plot
dat <- read.csv("../results/maskedsz.csv",
colClasses = c("date" = "character"))
dat$date <- as.Date(dat$date, format = "%m%d%Y")
dat <- read.csv("../results/maskedsz.csv",
colClasses = c("date" = "character"))
dat$date <- as.Date(dat$date, format = "%m%d%Y")
op <- par(ask = TRUE)
for (i in unique(dat$sp)) {
sub <- dat[dat$sp == i, ]
plot(sub$date, sub$assembly_size, main = i)
}
dat <- read.csv("../results/maskedsz.csv",
colClasses = c("date" = "character"))
dat$date <- as.Date(dat$date, format = "%m%d%Y")
op <- par(ask = TRUE)
for (i in unique(dat$sp)) {
sub <- dat[dat$sp == i, ]
plot(sub$date, sub$lower, main = i)
}
dat <- read.csv("../results/maskedsz.csv",
colClasses = c("date" = "character"))
dat <- read.csv("../results/maskedsz.csv",
colClasses = c("date" = "character"))
dat$lower <- dat$lower / 1000000
dat$N <- dat$lower / 1000000
dat$assembly_size <- dat$assembly_size / 1000000
dat$date <- as.Date(dat$date, format = "%m%d%Y")
op <- par(ask = TRUE)
for (i in unique(dat$sp)) {
sub <- dat[dat$sp == i, ]
plot(sub$date, sub$lower, main = i, xlab = "date", ylab = "size (Mb)")
}
