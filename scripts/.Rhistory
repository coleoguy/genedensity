beta <- rnorm(1,0,2)
y <- beta*x + err.phy
dat <- data.frame(sp = sp, x = x, y = y)
# ols
fit.ols <- lm(y ~ x, data = dat)
b.ols <- coef(fit.ols)[2]
res <- resid(fit.ols)[order(tree$tip.label)]
sig <- phylosig(tree, res, method = "lambda", test = T, niter = 500)
lr.sig <- 2*(sig$logL - sig$logL0)
# pgls
cd <- comparative.data(tree, dat, names.col = "sp", vcv = T)
fit.pgls <- pgls(y ~ x, data = cd)
b.pgls <- coef(fit.pgls)[2]
results <- rbind(results, data.frame(lr.sig, b.ols, b.pgls))
}
View(results)
library(ape)
library(geiger)
library(nlme)
library(caper)
sp <- letters
results <- data.frame()
for (i in 1:100) {
# data generation
tree <- chronos(rtree(26, tip.label = sp), model = "clock")
tree <- rescale(tree, "lambda", sample(c(0,1),1))
cor <- rbeta(1, shape1 = 4, shape2 = 1)
sigma <- matrix(c(1, cor, cor, 1), 2, 2)
sim <- sim.char(tree, par=sigma, model="BM", nsim=1)
x <- sim[,1,1]
err.phy <- sim[,2,1]
beta <- rnorm(1,0,2)
y <- beta*x + err.phy
dat <- data.frame(sp = sp, x = x, y = y)
# ols
fit.ols <- lm(y ~ x, data = dat)
b.ols <- coef(fit.ols)[2]
res <- resid(fit.ols)[order(tree$tip.label)]
sig <- phylosig(tree, res, method = "lambda", test = T, niter = 300)
lr.sig <- 2*(sig$logL - sig$logL0)
# pgls
cd <- comparative.data(tree, dat, names.col = "sp", vcv = T)
fit.pgls <- pgls(y ~ x, data = cd)
b.pgls <- coef(fit.pgls)[2]
results <- rbind(results, data.frame(cor, lr.sig, b.ols, b.pgls))
}
library(ape)
library(geiger)
library(nlme)
library(caper)
sp <- letters
results <- data.frame()
for (i in 1:100) {
# data generation
tree <- chronos(rtree(26, tip.label = sp), model = "clock")
tree <- rescale(tree, "lambda", sample(c(0,1),1))
cor <- rbeta(1, shape1 = 4, shape2 = 1)
sigma <- matrix(c(1, cor, cor, 1), 2, 2)
sim <- sim.char(tree, par=sigma, model="BM", nsim=1)
x <- sim[,1,1]
err.phy <- sim[,2,1]
beta <- rnorm(1,0,2)
y <- beta*x + err.phy
dat <- data.frame(sp = sp, x = x, y = y)
# ols
fit.ols <- lm(y ~ x, data = dat)
b.ols <- coef(fit.ols)[2]
res <- resid(fit.ols)[order(tree$tip.label)]
sig <- phylosig(tree, res, method = "lambda", test = T, niter = 300)
lr.sig <- 2*(sig$logL - sig$logL0)
# pgls
cd <- comparative.data(tree, dat, names.col = "sp", vcv = T)
fit.pgls <- pgls(y ~ x, data = cd)
b.pgls <- coef(fit.pgls)[2]
results <- rbind(results, data.frame(cor, lr.sig, b.ols, b.pgls))
}
library(ape)
library(geiger)
library(nlme)
library(caper)
sp <- letters
results <- data.frame()
# data generation
tree <- chronos(rtree(26, tip.label = sp), model = "clock")
tree <- rescale(tree, "lambda", sample(c(0,1),1))
cor <- rbeta(1, shape1 = 4, shape2 = 1)
sigma <- matrix(c(1, cor, cor, 1), 2, 2)
sim <- sim.char(tree, par=sigma, model="BM", nsim=1)
x <- sim[,1,1]
err.phy <- sim[,2,1]
beta <- rnorm(1,0,2)
y <- beta*x + err.phy
dat <- data.frame(sp = sp, x = x, y = y)
# ols
fit.ols <- lm(y ~ x, data = dat)
b.ols <- coef(fit.ols)[2]
res <- resid(fit.ols)[order(tree$tip.label)]
sig <- phylosig(tree, res, method = "lambda", test = T, niter = 300)
lr.sig <- 2*(sig$logL - sig$logL0)
# ols
fit.ols <- lm(y ~ x, data = dat)
b.ols <- coef(fit.ols)[2]
res <- resid(fit.ols)[order(tree$tip.label)]
phylosig(tree, res, method = "lambda", test = T, niter = 300)
phylosig(tree, res, method = "lambda", test = T, niter = 300)
phylosig(tree, res, method = "lambda", test = T, niter = 300)
phylosig(tree, res, method = "lambda", test = T, niter = 500)
phylosig(tree, res, method = "lambda", test = T)
ewa
res
phylosig(tree, res, method = "lambda")
library(ape)
library(geiger)
library(nlme)
library(caper)
sp <- letters
results <- data.frame()
for (i in 1:100) {
# data generation
tree <- chronos(rtree(26, tip.label = sp), model = "clock")
tree <- rescale(tree, "lambda", sample(c(0,1),1))
cor <- rbeta(1, shape1 = 4, shape2 = 1)
sigma <- matrix(c(1, cor, cor, 1), 2, 2)
sim <- sim.char(tree, par=sigma, model="BM", nsim=1)
x <- sim[,1,1]
err.phy <- sim[,2,1]
beta <- rnorm(1,0,2)
y <- beta*x + err.phy
dat <- data.frame(sp = sp, x = x, y = y)
# ols
fit.ols <- lm(y ~ x, data = dat)
b.ols <- coef(fit.ols)[2]
res <- resid(fit.ols)[order(tree$tip.label)]
sig <- phylosig(tree, res, method = "lambda", test = T, niter = 500)
lr.sig <- 2*(sig$logL - sig$logL0)
# pgls
cd <- comparative.data(tree, dat, names.col = "sp", vcv = T)
fit.pgls <- pgls(y ~ x, data = cd)
b.pgls <- coef(fit.pgls)[2]
results <- rbind(results, data.frame(cor, lr.sig, b.ols, b.pgls))
}
sample(c(0,1),1)
library(ape)
library(geiger)
library(nlme)
library(caper)
sp <- letters
results <- data.frame()
for (i in 1:100) {
# data generation
tree <- chronos(rtree(26, tip.label = sp), model = "clock")
tree <- rescale(tree, "lambda", sample(c(0.01,0.99),1))
cor <- rbeta(1, shape1 = 4, shape2 = 1)
sigma <- matrix(c(1, cor, cor, 1), 2, 2)
sim <- sim.char(tree, par=sigma, model="BM", nsim=1)
x <- sim[,1,1]
err.phy <- sim[,2,1]
beta <- rnorm(1,0,2)
y <- beta*x + err.phy
dat <- data.frame(sp = sp, x = x, y = y)
# ols
fit.ols <- lm(y ~ x, data = dat)
b.ols <- coef(fit.ols)[2]
res <- resid(fit.ols)[order(tree$tip.label)]
sig <- phylosig(tree, res, method = "lambda", test = T, niter = 500)
lr.sig <- 2*(sig$logL - sig$logL0)
# pgls
cd <- comparative.data(tree, dat, names.col = "sp", vcv = T)
fit.pgls <- pgls(y ~ x, data = cd)
b.pgls <- coef(fit.pgls)[2]
results <- rbind(results, data.frame(cor, lr.sig, b.ols, b.pgls))
}
View(results)
library(ape)
library(geiger)
library(nlme)
library(caper)
sp <- letters
results <- data.frame()
for (i in 1:100) {
# data generation
tree <- chronos(rtree(26, tip.label = sp), model = "clock")
tree <- rescale(tree, "lambda", sample(c(0.05, 0.95),1))
cor <- rbeta(1, shape1 = 4, shape2 = 1)
sigma <- matrix(c(1, cor, cor, 1), 2, 2)
sim <- sim.char(tree, par=sigma, model="BM", nsim=1)
x <- sim[,1,1]
err.phy <- sim[,2,1]
beta <- rnorm(1,0,0.2)
y <- beta*x + err.phy
dat <- data.frame(sp = sp, x = x, y = y)
# ols
fit.ols <- lm(y ~ x, data = dat)
b.ols <- coef(fit.ols)[2]
res <- resid(fit.ols)[order(tree$tip.label)]
sig <- phylosig(tree, res, method = "lambda", test = T, niter = 500)
lr.sig <- 2*(sig$logL - sig$logL0)
# pgls
cd <- comparative.data(tree, dat, names.col = "sp", vcv = T)
fit.pgls <- pgls(y ~ x, data = cd)
b.pgls <- coef(fit.pgls)[2]
results <- rbind(results, data.frame(cor, lr.sig, b.ols, b.pgls))
}
View(results)
rnorm(1,0,0.2)
rnorm(1,0,0.2)
rnorm(1,0,0.2)
rnorm(1,0,0.2)
rnorm(1,0,0.2)
rnorm(1,0,0.2)
rnorm(1,0,0.2)
rnorm(1,0,0.2)
rnorm(1,0,0.2)
rnorm(1,0,0.2)
library(ape)
library(geiger)
library(nlme)
library(caper)
sp <- letters
results <- data.frame()
for (i in 1:100) {
# data generation
tree <- chronos(rtree(26, tip.label = sp), model = "clock")
tree <- rescale(tree, "lambda", sample(c(0.05, 0.95),1))
cor <- rbeta(1, shape1 = 4, shape2 = 1)
sigma <- matrix(c(1, cor, cor, 1), 2, 2)
sim <- sim.char(tree, par=sigma, model="BM", nsim=1)
x <- sim[,1,1]
err.phy <- sim[,2,1] * 10
beta <- rnorm(1,0,0.2)
y <- beta*x + err.phy
dat <- data.frame(sp = sp, x = x, y = y)
# ols
fit.ols <- lm(y ~ x, data = dat)
b.ols <- coef(fit.ols)[2]
res <- resid(fit.ols)[order(tree$tip.label)]
sig <- phylosig(tree, res, method = "lambda", test = T, niter = 500)
lr.sig <- 2*(sig$logL - sig$logL0)
# pgls
cd <- comparative.data(tree, dat, names.col = "sp", vcv = T)
fit.pgls <- pgls(y ~ x, data = cd)
b.pgls <- coef(fit.pgls)[2]
results <- rbind(results, data.frame(cor, lr.sig, b.ols, b.pgls))
}
View(results)
library(ape)
library(geiger)
library(nlme)
library(caper)
sp <- letters
results <- data.frame()
for (i in 1:100) {
# data generation
tree <- chronos(rtree(26, tip.label = sp), model = "clock")
tree <- rescale(tree, "lambda", sample(c(0.05, 0.95),1))
cor <- rbeta(1, shape1 = 4, shape2 = 1)
sigma <- matrix(c(1, cor, cor, 1), 2, 2)
sim <- sim.char(tree, par=sigma, model="BM", nsim=1)
x <- sim[,1,1]
err.phy <- sim[,2,1] * 100
beta <- rnorm(1,0,0.2)
y <- beta*x + err.phy
dat <- data.frame(sp = sp, x = x, y = y)
# ols
fit.ols <- lm(y ~ x, data = dat)
b.ols <- coef(fit.ols)[2]
res <- resid(fit.ols)[order(tree$tip.label)]
sig <- phylosig(tree, res, method = "lambda", test = T, niter = 500)
lr.sig <- 2*(sig$logL - sig$logL0)
# pgls
cd <- comparative.data(tree, dat, names.col = "sp", vcv = T)
fit.pgls <- pgls(y ~ x, data = cd)
b.pgls <- coef(fit.pgls)[2]
results <- rbind(results, data.frame(cor, lr.sig, b.ols, b.pgls))
}
View(results)
library(ape)
library(geiger)
library(nlme)
library(caper)
sp <- letters
results <- data.frame()
for (i in 1:100) {
# data generation
tree <- chronos(rtree(26, tip.label = sp), model = "clock")
tree <- rescale(tree, "lambda", sample(c(0.05, 0.95),1))
cor <- rbeta(1, shape1 = 4, shape2 = 1)
sigma <- matrix(c(1, cor, cor, 1), 2, 2)
sim <- sim.char(tree, par=sigma, model="BM", nsim=1)
x <- sim[,1,1]
err.phy <- sim[,2,1] * 1000
beta <- rnorm(1,0,0.2)
y <- beta*x + err.phy
dat <- data.frame(sp = sp, x = x, y = y)
# ols
fit.ols <- lm(y ~ x, data = dat)
b.ols <- coef(fit.ols)[2]
res <- resid(fit.ols)[order(tree$tip.label)]
sig <- phylosig(tree, res, method = "lambda", test = T, niter = 500)
lr.sig <- 2*(sig$logL - sig$logL0)
# pgls
cd <- comparative.data(tree, dat, names.col = "sp", vcv = T)
fit.pgls <- pgls(y ~ x, data = cd)
b.pgls <- coef(fit.pgls)[2]
results <- rbind(results, data.frame(cor, lr.sig, b.ols, b.pgls))
}
View(results)
# data generation
tree <- chronos(rtree(26, tip.label = sp), model = "clock")
tree <- rescale(tree, "lambda", sample(c(0.05, 0.95),1))
cor <- rbeta(1, shape1 = 4, shape2 = 1)
sigma <- matrix(c(1, cor, cor, 1), 2, 2)
sim <- sim.char(tree, par=sigma, model="BM", nsim=1)
x <- sim[,1,1]
err.phy <- sim[,2,1] * 500
View(results)
library(ape)
library(geiger)
library(nlme)
library(caper)
sp <- letters
results <- data.frame()
for (i in 1:100) {
# data generation
tree <- chronos(rtree(26, tip.label = sp), model = "clock")
tree <- rescale(tree, "lambda", sample(c(0.05, 0.95),1))
cor <- rbeta(1, shape1 = 4, shape2 = 1)
sigma <- matrix(c(1, cor, cor, 1), 2, 2)
sim <- sim.char(tree, par=sigma, model="BM", nsim=1)
x <- sim[,1,1]
err.phy <- sim[,2,1] * 500
beta <- rnorm(1,0,0.2)
y <- beta*x + err.phy
dat <- data.frame(sp = sp, x = x, y = y)
# ols
fit.ols <- lm(y ~ x, data = dat)
b.ols <- coef(fit.ols)[2]
res <- resid(fit.ols)[order(tree$tip.label)]
sig <- phylosig(tree, res, method = "lambda", test = T, niter = 500)
lr.sig <- 2*(sig$logL - sig$logL0)
# pgls
cd <- comparative.data(tree, dat, names.col = "sp", vcv = T)
fit.pgls <- pgls(y ~ x, data = cd)
b.pgls <- coef(fit.pgls)[2]
results <- rbind(results, data.frame(cor, lr.sig, b.ols, b.pgls))
}
View(results)
library(ape)
library(geiger)
library(nlme)
library(caper)
sp <- letters
results <- data.frame()
library(ape)
library(geiger)
library(nlme)
library(caper)
sp <- letters
results <- data.frame()
# data generation
tree <- chronos(rtree(26, tip.label = sp), model = "clock")
tree <- rescale(tree, "lambda", sample(c(0.05, 0.95),1))
cor <- rbeta(1, shape1 = 4, shape2 = 1)
sigma <- matrix(c(1, cor, cor, 1), 2, 2)
sim <- sim.char(tree, par=sigma, model="BM", nsim=1)
x <- sim[,1,1]
err.phy <- sim[,2,1] * 500
beta <- rnorm(1,0,0.2)
y <- beta*x + err.phy
dat <- data.frame(sp = sp, x = x, y = y)
library(ape)
library(geiger)
library(nlme)
library(caper)
sp <- letters
results <- data.frame()
for (i in 1:100) {
# data generation
tree <- chronos(rtree(26, tip.label = sp), model = "clock")
tree <- rescale(tree, "lambda", sample(c(0.05, 0.95),1))
cor <- rbeta(1, shape1 = 4, shape2 = 1)
sigma <- matrix(c(1, cor, cor, 1), 2, 2)
sim <- sim.char(tree, par=sigma, model="BM", nsim=1)
x <- sim[,1,1]
err.phy <- sim[,2,1] * 500
beta <- rnorm(1,0,0.2)
y <- beta*x + err.phy
dat <- data.frame(sp = sp, x = x, y = y)
# ols
fit.ols <- lm(y ~ x, data = dat)
b.ols <- coef(fit.ols)[2]
res <- resid(fit.ols)[order(tree$tip.label)]
sig <- phylosig(tree, res, method = "lambda", test = T, niter = 500)
lr.sig <- 2*(sig$logL - sig$logL0)
# pgls
cd <- comparative.data(tree, dat, names.col = "sp", vcv = T)
fit.pgls <- pgls(y ~ x, data = cd, lambda = "ML", method = "ML")
b.pgls <- coef(fit.pgls)[2]
results <- rbind(results, data.frame(cor, lr.sig, b.ols, b.pgls))
}
library(ape)
library(geiger)
library(nlme)
library(caper)
sp <- letters
results <- data.frame()
for (i in 1:100) {
# data generation
tree <- chronos(rtree(26, tip.label = sp), model = "clock")
tree <- rescale(tree, "lambda", sample(c(0.05, 0.95),1))
cor <- rbeta(1, shape1 = 4, shape2 = 1)
sigma <- matrix(c(1, cor, cor, 1), 2, 2)
sim <- sim.char(tree, par=sigma, model="BM", nsim=1)
x <- sim[,1,1]
err.phy <- sim[,2,1] * 500
beta <- rnorm(1,0,0.2)
y <- beta*x + err.phy
dat <- data.frame(sp = sp, x = x, y = y)
# ols
fit.ols <- lm(y ~ x, data = dat)
b.ols <- coef(fit.ols)[2]
res <- resid(fit.ols)[order(tree$tip.label)]
sig <- phylosig(tree, res, method = "lambda", test = T, niter = 500)
lr.sig <- 2*(sig$logL - sig$logL0)
# pgls
cd <- comparative.data(tree, dat, names.col = "sp", vcv = T)
fit.pgls <- pgls(y ~ x, data = cd, lambda = "ML")
b.pgls <- coef(fit.pgls)[2]
results <- rbind(results, data.frame(cor, lr.sig, b.ols, b.pgls))
}
View(results)
?pgls
library(ape)
library(geiger)
library(nlme)
library(caper)
sp <- letters
results <- data.frame()
for (i in 1:100) {
# data generation
tree <- chronos(rtree(26, tip.label = sp), model = "clock")
tree <- rescale(tree, "lambda", sample(c(0.05, 0.95),1))
cor <- rbeta(1, shape1 = 4, shape2 = 1)
sigma <- matrix(c(1, cor, cor, 1), 2, 2)
sim <- sim.char(tree, par=sigma, model="BM", nsim=1)
x <- sim[,1,1]
err.phy <- sim[,2,1] * 5
beta <- rnorm(1,0,2)
y <- beta*x + err.phy
dat <- data.frame(sp = sp, x = x, y = y)
# ols
fit.ols <- lm(y ~ x, data = dat)
b.ols <- coef(fit.ols)[2]
res <- resid(fit.ols)[order(tree$tip.label)]
sig <- phylosig(tree, res, method = "lambda", test = T, niter = 500)
lr.sig <- 2*(sig$logL - sig$logL0)
# pgls
cd <- comparative.data(tree, dat, names.col = "sp", vcv = T)
fit.pgls <- pgls(y ~ x, data = cd)
b.pgls <- coef(fit.pgls)[2]
results <- rbind(results, data.frame(cor, lr.sig, b.ols, b.pgls))
}
View(results)
# pgls nlme
fit_phy <- gls(y ~ x,
correlation = corPagel(1, phy = tree, fixed = TRUE, form = ~sp),
data = dat,
method = "REML")
b.nlme <- coef(fit.nlme)[2]
# pgls nlme
fit.nlme <- gls(y ~ x,
correlation = corPagel(1, phy = tree, fixed = TRUE, form = ~sp),
data = dat,
method = "REML")
b.nlme <- coef(fit.nlme)[2]
library(ape)
library(geiger)
library(nlme)
library(caper)
sp <- letters
results <- data.frame()
for (i in 1:100) {
# data generation
tree <- chronos(rtree(26, tip.label = sp), model = "clock")
tree <- rescale(tree, "lambda", sample(c(0.05, 0.95),1))
cor <- rbeta(1, shape1 = 4, shape2 = 1)
sigma <- matrix(c(1, cor, cor, 1), 2, 2)
sim <- sim.char(tree, par=sigma, model="BM", nsim=1)
x <- sim[,1,1]
err.phy <- sim[,2,1] * 5
beta <- rnorm(1,0,2)
y <- beta*x + err.phy
dat <- data.frame(sp = sp, x = x, y = y)
# ols
fit.ols <- lm(y ~ x, data = dat)
b.ols <- coef(fit.ols)[2]
res <- resid(fit.ols)[order(tree$tip.label)]
sig <- phylosig(tree, res, method = "lambda", test = T, niter = 500)
lr.sig <- 2*(sig$logL - sig$logL0)
# pgls caper
cd <- comparative.data(tree, dat, names.col = "sp", vcv = T)
fit.caper <- pgls(y ~ x, data = cd)
b.caper <- coef(fit.caper)[2]
# pgls nlme
fit.nlme <- gls(y ~ x,
correlation = corPagel(1, phy = tree, fixed = TRUE, form = ~sp),
data = dat,
method = "REML")
b.nlme <- coef(fit.nlme)[2]
results <- rbind(results, data.frame(cor, lr.sig, b.ols, b.caper, b.nlme))
}
View(results)
