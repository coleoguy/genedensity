gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = F, sep = "\t")
exon <- gtf[which(gtf[, 3] == "exon"), ]
exon$length <- exon[, 5] - exon[, 4]
l <- mean(exon$length)
n <- length(exon$length)
df <- rbind(df, c(sp, l, n))
}
library(data.table)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
df <- data.frame()
i <- 1
sp <- all.species[i]
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = F, sep = "\t")
exon <- gtf[which(gtf[, 3] == "exon"), ]
exon$length <- exon[, 5] - exon[, 4]
l <- mean(exon$length)
n <- length(exon$length)
df <- rbind(df, c(sp, l, n))
View(df)
sp <- all.species[i]
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = F, sep = "\t")
exon <- gtf[which(gtf[, 3] == "exon"), ]
exon$length <- exon[, 5] - exon[, 4]
l <- mean(exon$length)
n <- length(exon$length)
df <- rbind(df, data.frame(sp, l, n))
library(data.table)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
df <- data.frame()
for (i in 1:length(all.species)) {
sp <- all.species[i]
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = F, sep = "\t")
exon <- gtf[which(gtf[, 3] == "exon"), ]
exon$length <- exon[, 5] - exon[, 4]
l <- mean(exon$length)
n <- length(exon$length)
df <- rbind(df, data.frame(sp, l, n))
}
View(df)
library(data.table)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
df <- data.frame()
i <- 1
sp <- all.species[i]
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = F, sep = "\t")
exon <- gtf[which(gtf[, 3] == "exon"), ]
exon$length <- exon[, 5] - exon[, 4]
meanlength <- mean(exon$length)
number <- length(exon$length)
df <- rbind(df, data.frame(sp, meanlength, number))
rm(sp, gtf, exon, meanlength, number)
gc()
library(data.table)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
df <- data.frame()
for (i in 1:length(all.species)) {
sp <- all.species[i]
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = F, sep = "\t")
exon <- gtf[which(gtf[, 3] == "exon"), ]
exon$length <- exon[, 5] - exon[, 4]
meanlength <- mean(exon$length)
number <- length(exon$length)
df <- rbind(df, data.frame(sp, meanlength, number))
rm(sp, gtf, exon, meanlength, number)
gc()
}
View(df)
library(data.table)
library(parallel)
library(data.table)
library(parallel)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
process_species <- function(sp) {
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = FALSE, sep = "\t")
exon <- gtf[gtf[, 3] == "exon", ]
exonlength <- exon[, 5] - exon[, 4]
data.frame(
sp = sp,
meanlength = mean(exonlength),
number = length(exonlength)
)
}
all.species <- all.species[head(5)]
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
all.species <- head(all.species, 5)
process_species <- function(sp) {
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = FALSE, sep = "\t")
exon <- gtf[gtf[, 3] == "exon", ]
exonlength <- exon[, 5] - exon[, 4]
data.frame(
sp = sp,
meanlength = mean(exonlength),
number = length(exonlength)
)
}
num_cores <- detectCores() - 1
results <- mclapply(all.species, process_species, mc.cores = num_cores)
ncores <- round(0.7 * detectCores())
cl <- makeCluster(ncores)
clusterEvalQ(cl, {
library(data.table)
})
clusterExport(cl,
varlist = c("all.species"),
envir = environment())
results <- mclapply(all.species, process_species, mc.cores = ncores)
results <- parLapply(all.species, process_species)
?parLapply
results <- parLapply(cl, all.species, process_species)
df <- rbindlist(results)
View(df)
View(df)
library(data.table)
library(parallel)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
process_species <- function(sp) {
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = FALSE, sep = "\t")
exon <- gtf[gtf[, 3] == "exon", ]
exonlength <- exon[, 5] - exon[, 4]
data.frame(
sp = sp,
meanlength = mean(exonlength),
number = length(exonlength)
)
}
library(parallel)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
all.species <- head(all.species, 5)
process_species <- function(sp) {
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = FALSE, sep = "\t")
exon <- gtf[gtf[, 3] == "exon", ]
exonlength <- exon[, 5] - exon[, 4]
data.frame(
sp = sp,
meanlength = mean(exonlength),
number = length(exonlength)
)
}
ncores <- round(0.7 * detectCores())
cl <- makeCluster(ncores)
clusterEvalQ(cl, library(data.table))
clusterExport(cl,
varlist = "all.species",
envir = environment())
results <- parLapply(cl, all.species, process_species)
df <- rbindlist(results)
library(data.table)
df <- rbindlist(results)
View(results)
View(df)
library(data.table)
library(parallel)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
do <- function(sp) {
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = FALSE, sep = "\t")
exon <- gtf[gtf[, 3] == "exon", ]
exonlength <- exon[, 5] - exon[, 4]
data.frame(
sp = sp,
meanlength = mean(exonlength),
number = length(exonlength)
)
}
ncores <- round(0.8 * detectCores())
cl <- makeCluster(ncores)
clusterEvalQ(cl, library(data.table))
clusterExport(cl,
varlist = "all.species",
envir = environment())
results <- parLapply(cl, all.species, do)
library(data.table)
library(parallel)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
do <- function(sp) {
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = FALSE, sep = "\t")
exon <- gtf[gtf[, 3] == "exon", ]
exonlength <- exon[, 5] - exon[, 4]
data.frame(
sp = sp,
meanlength = mean(exonlength),
number = length(exonlength)
)
}
ncores <- 12
cl <- makeCluster(ncores)
clusterEvalQ(cl, library(data.table))
clusterExport(cl,
varlist = "all.species",
envir = environment())
results <- parLapply(cl, all.species, do)
library(data.table)
library(parallel)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
do <- function(sp) {
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = FALSE, sep = "\t")
exon <- gtf[gtf[, 3] == "exon", ]
exonlength <- exon[, 5] - exon[, 4]
data.frame(
sp = sp,
meanlength = mean(exonlength),
number = length(exonlength)
)
}
ncores <- 8
cl <- makeCluster(ncores)
clusterEvalQ(cl, library(data.table))
clusterExport(cl,
varlist = "all.species",
envir = environment())
results <- parLapply(cl, all.species, do)
library(data.table)
library(parallel)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
do <- function(sp) {
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = FALSE, sep = "\t")
exon <- gtf[gtf[, 3] == "exon", ]
exonlength <- exon[, 5] - exon[, 4]
data.frame(
sp = sp,
meanlength = mean(exonlength),
number = length(exonlength)
)
}
ncores <- 8
cl <- makeCluster(ncores)
clusterEvalQ(cl, library(data.table))
clusterExport(cl,
varlist = "all.species",
envir = environment())
results <- parLapply(cl, all.species, do)
library(data.table)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
all.species <- head(all.species, 5)
df <- data.frame()
for (i in 1:length(sp)) {
sp <- all.species[i]
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = FALSE, sep = "\t")
exon <- gtf[gtf[, 3] == "exon", ]
exonlength <- exon[, 5] - exon[, 4]
df <- rbind(df,
data.frame(sp,
meanlength = mean(exonlength),
number = length(exonlength)
)
)
}
df <- data.frame()
for (i in 1:length(all.species)) {
sp <- all.species[i]
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = FALSE, sep = "\t")
exon <- gtf[gtf[, 3] == "exon", ]
exonlength <- exon[, 5] - exon[, 4]
df <- rbind(df,
data.frame(sp,
meanlength = mean(exonlength),
number = length(exonlength)
)
)
}
View(df)
library(data.table)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
df <- data.frame()
for (i in 1:length(all.species)) {
sp <- all.species[i]
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = FALSE, sep = "\t")
exon <- gtf[gtf[, 3] == "exon", ]
exonlength <- exon[, 5] - exon[, 4]
df <- rbind(df,
data.frame(sp,
meanlength = mean(exonlength),
number = length(exonlength)
)
)
}
library(data.table)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
df <- data.frame()
for (i in 1:length(all.species)) {
sp <- all.species[i]
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = FALSE, sep = "\t")
exon <- gtf[gtf[, 3] == "exon", ]
exonlength <- exon[, 5] - exon[, 4]
df <- rbind(df,
data.frame(sp,
meanlength = mean(exonlength),
number = length(exonlength)
)
)
}
library(data.table)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
all.species <- all.species[!"readme"]
all.species
all.species <- all.species[all.species != "readme"]
library(data.table)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
all.species <- all.species[all.species != "readme"]
df <- data.frame()
for (i in 1:length(all.species)) {
sp <- all.species[i]
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = FALSE, sep = "\t")
exon <- gtf[gtf[, 3] == "exon", ]
exonlength <- exon[, 5] - exon[, 4]
df <- rbind(df,
data.frame(sp,
meanlength = mean(exonlength),
number = length(exonlength)
)
)
}
View(df)
write.csv(df, "../results/exonlength.csv", row.names = FALSE)
l <- read.csv("../results/exonlength.csv")
View(l)
library(data.table)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
all.species <- all.species[all.species != "readme"]
df <- data.frame()
i <- 1
sp <- all.species[i]
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = FALSE, sep = "\t")
exon <- gtf[gtf[, 3] == "exon", ]
View(exon)
l <- read.csv("../results/exonlength.csv")
l$total <- l$meanlength * l$number
View(l)
m <- read.csv("../results/rsq.csv")
?merge
?merge
n <- merge(m, l, by = "species")
n <- merge(m, l, by.x = "species")
n <- merge(m, l, by.x = "species", by.y = "species")
n <- merge(m, l, by = "species")
View(m)
View(l)
n <- merge(m, l, by.x = "species", by.y = "sp")
View(n)
n$score <- n$total/n$assem.sz
View(n)
library(data.table)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
all.species <- all.species[all.species != "readme"]
df <- data.frame()
i <- 1
sp
sp <- all.species[i]
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = FALSE, sep = "\t")
exon <- gtf[gtf[, 3] == "exon", ]
exonlength <- exon[, 5] - exon[, 4]
df <- rbind(df,
data.frame(sp,
totlength = sum(exonlength),
meanlength = mean(exonlength),
number = length(exonlength)
)
)
View(df)
library(data.table)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
all.species <- all.species[all.species != "readme"]
df <- data.frame()
for (i in 1:length(all.species)) {
sp <- all.species[i]
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = FALSE, sep = "\t")
exon <- gtf[gtf[, 3] == "exon", ]
exonlength <- exon[, 5] - exon[, 4]
df <- rbind(df,
data.frame(sp,
totlength = sum(exonlength),
meanlength = mean(exonlength),
number = length(exonlength)
)
)
}
library(data.table)
all.species <- unique(gsub("\\..*$", "", list.files("../data/genomes")))
all.species <- all.species[all.species != "readme"]
df <- data.frame()
for (i in 1:length(all.species)) {
sp <- all.species[i]
gtf <- paste0("../data/genomes/", sp, ".gtf")
gtf <- read.table(gtf, header = FALSE, sep = "\t")
exon <- gtf[gtf[, 3] == "exon", ]
exonlength <- exon[, 5] - exon[, 4]
df <- rbind(df,
data.frame(sp,
totlength = sum(exonlength),
meanlength = mean(exonlength),
number = length(exonlength)
)
)
}
write.csv(df, "../results/exonlength.csv", row.names = FALSE)
View(df)
l <- read.csv("../results/exonlength.csv")
l$total <- l$meanlength * l$number
l <- read.csv("../results/exonlength.csv")
m <- read.csv("../results/rsq.csv")
n <- merge(m, l, by.x = "species", by.y = "sp")
n$score <- n$totlength/n$assem.sz
View(n)
plot(n$score, n$rsq)
plot(n$number $rsq)
plot(n$number, n$rsq)
plot(n$score, n$rsq)
library(MuMIn) # multimodel inference
library(phytools) # load and prune tree
library(caper) # PGLS
options(na.action = "na.fail")
# functions
sw.test <- function(model) {
res <- residuals(model)
sw.p <- shapiro.test(res)$p.value
return(sw.p)
}
setwd("/Volumes/T7/gene density/scripts")
rsq <- read.csv("../results/rsq.filtered.csv")
repeats <- read.csv("../results/repeats.filtered.csv")
combined.df <- data.frame()
i <- "Mammalia"
# subset results
dat <- merge(rsq, repeats, by.x = "species", by.y = "species", all.x = T, all.y = T)
if (i %in% c("Mammalia", "Actinopterygii", "Sauria")) {
dat <- dat[dat$clade %in% i, ]
}
variables <- colnames(dat)[grep("^(prop|age)\\.", colnames(dat))]
dat <- na.omit(dat[, c("species", "clade", "rsq", variables)])
View(dat)
variables
foo <- dat
# normalize
for (j in variables) {
dat[[j]] <- (max(dat[[j]])-dat[[j]]) / diff(range(dat[[j]]))
}
View(foo)
# set up interactions
rep <- unique(sub("^[^.]*\\.", "", variables))
interactions <- paste0("age.", rep, ":prop.", rep)
all.terms <- c(
variables,
interactions
)
# global model
global.model <- glm(reformulate(all.terms, response = "rsq"), data = dat)
all.terms
reformulate(all.terms, response = "rsq")
# set constraints
model.terms <- unlist(strsplit(as.character(global.model$formula)[3], " \\+ "))
model.interactions <- grep(":", model.terms, value = TRUE)
constraints <- character(length(model.interactions))
for (k in seq_along(model.interactions)) {
parts <- strsplit(model.interactions[k], ":")[[1]]
constraints[k] <- sprintf("((!`%s`) | (%s & %s))", model.interactions[k], parts[1], parts[2])
}
subset.expr <- parse(text = paste(constraints, collapse = " & "))[[1]]
# dredge
models <- dredge(global.model,
subset = subset.expr
#extra = list(shapirowilk.p = sw.test, lambda.p = lambda.test)
)
models <- models[order(models$AICc), ]
models <- models[cumsum(models$weight) <= 0.95, ]
imp <- sort(sw(models), decreasing = TRUE)
avg <- model.avg(models)
ci <- confint(avg)
ci <- ci[match(names(imp), row.names(ci)), ] #match ci
ci <- as.data.frame(ci)
idx <- which(sign(ci[, 1]) == sign(ci[, 2])) # idx where 0 is not in ci
ci <- ci[idx, ]# subset ci
imp <- imp[idx]# subset importance
if (length(imp) == 0) {
next
}
data.frame(i,
names(imp),
sapply(1:nrow(ci), function(x) mean(unlist(ci[x, ]))),
imp,
ci[, 1],
ci[, 2])
plot(dat$rsq ~ dat$age.sine)
plot(dat$rsq ~ dat$prop.sine)
plot(dat$rsq ~ dat$prop.sine*dat$age.sine)
plot(dat$rsq ~ c(dat$prop.sine*dat$age.sine))
plot(dat$rsq ~ dat$prop.sine)
plot(dat$rsq ~ dat$age.sine)
summary(lm(dat$rsq~dat$prop.sine)
)
summary(lm(dat$rsq~dat$age.sine)
)
