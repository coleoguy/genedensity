repeat.types <- unique(sub("^[^.]*\\.", "", variables))
interactions <- paste0("age.", repeat.types, ":prop.", repeat.types)
all.terms <- c(
variables,
interactions
)
# n <- nrow(cd$data)
n <- nrow(dat)
max.vars <- n-2 # leave 2 degrees of freedom
max.vars
# fit models
model.list <- list()
model.idx <- 1
i <- 8
k <- 8
k == 0
combos <- combn(all.terms, k, simplify = FALSE)
combos
m <- 1000
fml <- as.formula(paste("rsq ~", paste(m, collapse = " + ")))
fml
m <- combos[100]
fml
fml <- as.formula(paste("rsq ~", paste(m, collapse = " + ")))
fml
predictor.num <- length(attr(terms(fml), "term.labels"))
predictor.num
fml
predictor.num <- length(attr(terms(fml), "term.labels"))
predictor.num
fml
fml <- as.formula(paste("rsq ~", paste(m, collapse = " + ")))
fml
m
m[[1]]
m <- m[[1]]
fml <- as.formula(paste("rsq ~", paste(m, collapse = " + ")))
fml
predictor.num <- length(attr(terms(fml), "term.labels"))
predictor.num
# Zhaobo Hu
# zhaobohu2002@gmail.com
# Finds significant models and predictors of R2 using IT-based model averaging.
# Safe to run on low observation count. Can choose between glm() and pgls() models
# and optionally generate a csv of all significant models
library(MuMIn)
library(phytools)
library(caper)
source("functions.R")
rsq <- read.csv("../results/rsq.csv")
repeats <- read.csv("../results/repeat-results.csv")
tree <- read.tree("../data/formatted-tree.nwk")
combined.df <- data.frame()
clades <- c("All", "Mammalia", "Actinopterygii", "Sauropsida")
# loop for each clade
# Zhaobo Hu
# zhaobohu2002@gmail.com
# A permutation-based approach to assess model adequacy
library(MuMIn) # multimodel inference
library(phytools) # load and prune tree
library(caper) # PGLS
options(na.action = "na.fail")
# functions
source("functions.R")
rsq <- read.csv("../results/rsq.csv")
repeats <- read.csv("../results/repeat-results.csv")
tree <- read.tree("../data/formatted-tree.nwk")
main <- merge(rsq, repeats, by.x = "species", by.y = "species", all.x = T, all.y = T)
variables <- colnames(main)[grep("^(prop|age)\\.", colnames(main))]
main <- na.omit(main[, c("species", "clade", "rsq", variables)])
clades <- c("All", "Mammalia", "Actinopterygii", "Sauropsida")
constant.cols <- c("species", "clade", "rsq")
h <- 1
print(h)
run.results <- c()
# permute
perm.colname <- setdiff(names(main), constant.cols)
block <- main[, perm.colname]
# block
block <- block[sample(nrow(block)), ]
main[, perm.colname] <- block
i <- 1
dat <- main
clade <- clades[i]
# subset results
if (clade %in% c("Mammalia", "Actinopterygii", "Sauropsida")) {
dat <- dat[dat$clade %in% clade, ]
}
variables <- colnames(dat)[grep("^(prop|age)\\.", colnames(dat))]
dat <- na.omit(dat[, c("species", "clade", "rsq", variables)])
# rescale
for (j in variables) {
dat[[j]] <- (dat[[j]]-min(dat[[j]])) / diff(range(dat[[j]]))
}
# identify all predictors
repeats <- unique(sub("^[^.]*\\.", "", variables))
interactions <- paste0("age.", repeats, ":prop.", repeats)
all.terms <- c(
variables,
interactions
)
# n <- nrow(cd$data)
n <- nrow(dat)
rep(c("importance", "upper", "lower"), each = length(all.terms) / 3)
rep(c("importance", "upper", "lower"), each = length(all.terms))
rep(rep(c("importance", "upper", "lower"), each = length(all.terms) / 3), 4)
rep(c("importance", "upper", "lower"), each = length(all.terms))
rep(c("importance", "upper", "lower"), each = length(all.terms))
rep(rep(c("importance", "upper", "lower"), each = length(all.terms)), 4)
all.terms
# Zhaobo Hu
# zhaobohu2002@gmail.com
# Finds significant models and predictors of R2 using IT-based model averaging.
# Safe to run on low observation count. Can choose between glm() and pgls() models
# and optionally generate a csv of all significant models
library(MuMIn)
library(phytools)
library(caper)
source("functions.R")
rsq <- read.csv("../results/rsq.csv")
repeats <- read.csv("../results/repeat-results.csv")
tree <- read.tree("../data/formatted-tree.nwk")
combined.df <- data.frame()
clades <- c("All", "Mammalia", "Actinopterygii", "Sauropsida")
# loop for each clade
i <- 1
# subset results
clade <- clades[i]
dat <- merge(rsq, repeats, by.x = "species", by.y = "species", all.x = T, all.y = T)
if (clade %in% c("Mammalia", "Actinopterygii", "Sauropsida")) {
dat <- dat[dat$clade %in% clade, ]
}
variables <- colnames(dat)[grep("^(prop|age)\\.", colnames(dat))]
dat <- na.omit(dat[, c("species", "clade", "rsq", variables)])
# rescale
for (j in variables) {
dat[[j]] <- (dat[[j]]-min(dat[[j]])) / diff(range(dat[[j]]))
}
# identify all predictors
repeat.types <- unique(sub("^[^.]*\\.", "", variables))
interactions <- paste0("age.", repeat.types, ":prop.", repeat.types)
all.terms <- c(
variables,
interactions
)
# pgls
# cd <- comparative.data(tree, dat, names.col = "species", vcv = TRUE)
# n <- nrow(cd$data)
n <- nrow(dat)
max.vars <- n-2 # leave 1 residual degree of freedom
# fit models
model.list <- list()
model.idx <- 1
for (k in 0:length(all.terms)) {
if (k == 0) {
fml <- as.formula("rsq ~ 1")
# fit <- pgls(fml, data = cd)
fit <- glm(fml, data = dat)
model.name <- paste0("M", model.idx)
model.list[[model.name]] <- fit
model.idx <- model.idx + 1
next
}
combos <- combn(all.terms, k, simplify = FALSE)
for (m in combos) {
fml <- as.formula(paste("rsq ~", paste(m, collapse = " + ")))
predictor.num <- length(attr(terms(fml), "term.labels"))
if (predictor.num >= max.vars) next
if (!model.marginal(m)) next
# fit <- pgls(fml, data = cd)
fit <- glm(fml, data = dat)
model.name <- paste0("M", model.idx)
model.list[[model.name]] <- fit
model.idx <- model.idx + 1
}
}
# create model selection table
models <- model.sel(model.list)
models <- models[order(models$AICc), ]
i <- 2
# subset results
clade <- clades[i]
dat <- merge(rsq, repeats, by.x = "species", by.y = "species", all.x = T, all.y = T)
if (clade %in% c("Mammalia", "Actinopterygii", "Sauropsida")) {
dat <- dat[dat$clade %in% clade, ]
}
variables <- colnames(dat)[grep("^(prop|age)\\.", colnames(dat))]
dat <- na.omit(dat[, c("species", "clade", "rsq", variables)])
# rescale
for (j in variables) {
dat[[j]] <- (dat[[j]]-min(dat[[j]])) / diff(range(dat[[j]]))
}
# identify all predictors
repeat.types <- unique(sub("^[^.]*\\.", "", variables))
interactions <- paste0("age.", repeat.types, ":prop.", repeat.types)
all.terms <- c(
variables,
interactions
)
# pgls
# cd <- comparative.data(tree, dat, names.col = "species", vcv = TRUE)
# n <- nrow(cd$data)
n <- nrow(dat)
max.vars <- n-2 # leave 1 residual degree of freedom
# fit models
model.list <- list()
model.idx <- 1
for (k in 0:length(all.terms)) {
if (k == 0) {
fml <- as.formula("rsq ~ 1")
# fit <- pgls(fml, data = cd)
fit <- glm(fml, data = dat)
model.name <- paste0("M", model.idx)
model.list[[model.name]] <- fit
model.idx <- model.idx + 1
next
}
combos <- combn(all.terms, k, simplify = FALSE)
for (m in combos) {
fml <- as.formula(paste("rsq ~", paste(m, collapse = " + ")))
predictor.num <- length(attr(terms(fml), "term.labels"))
if (predictor.num >= max.vars) next
if (!model.marginal(m)) next
# fit <- pgls(fml, data = cd)
fit <- glm(fml, data = dat)
model.name <- paste0("M", model.idx)
model.list[[model.name]] <- fit
model.idx <- model.idx + 1
}
}
# create model selection table
models <- model.sel(model.list)
models <- models[order(models$AICc), ]
i <- 3
# subset results
clade <- clades[i]
dat <- merge(rsq, repeats, by.x = "species", by.y = "species", all.x = T, all.y = T)
if (clade %in% c("Mammalia", "Actinopterygii", "Sauropsida")) {
dat <- dat[dat$clade %in% clade, ]
}
variables <- colnames(dat)[grep("^(prop|age)\\.", colnames(dat))]
dat <- na.omit(dat[, c("species", "clade", "rsq", variables)])
# rescale
for (j in variables) {
dat[[j]] <- (dat[[j]]-min(dat[[j]])) / diff(range(dat[[j]]))
}
# identify all predictors
repeat.types <- unique(sub("^[^.]*\\.", "", variables))
interactions <- paste0("age.", repeat.types, ":prop.", repeat.types)
all.terms <- c(
variables,
interactions
)
# pgls
# cd <- comparative.data(tree, dat, names.col = "species", vcv = TRUE)
# n <- nrow(cd$data)
n <- nrow(dat)
max.vars <- n-2 # leave 1 residual degree of freedom
# fit models
model.list <- list()
model.idx <- 1
for (k in 0:length(all.terms)) {
if (k == 0) {
fml <- as.formula("rsq ~ 1")
# fit <- pgls(fml, data = cd)
fit <- glm(fml, data = dat)
model.name <- paste0("M", model.idx)
model.list[[model.name]] <- fit
model.idx <- model.idx + 1
next
}
combos <- combn(all.terms, k, simplify = FALSE)
for (m in combos) {
fml <- as.formula(paste("rsq ~", paste(m, collapse = " + ")))
predictor.num <- length(attr(terms(fml), "term.labels"))
if (predictor.num >= max.vars) next
if (!model.marginal(m)) next
# fit <- pgls(fml, data = cd)
fit <- glm(fml, data = dat)
model.name <- paste0("M", model.idx)
model.list[[model.name]] <- fit
model.idx <- model.idx + 1
}
}
# create model selection table
models <- model.sel(model.list)
models <- models[order(models$AICc), ]
i
i <- 4
# subset results
clade <- clades[i]
dat <- merge(rsq, repeats, by.x = "species", by.y = "species", all.x = T, all.y = T)
if (clade %in% c("Mammalia", "Actinopterygii", "Sauropsida")) {
dat <- dat[dat$clade %in% clade, ]
}
variables <- colnames(dat)[grep("^(prop|age)\\.", colnames(dat))]
dat <- na.omit(dat[, c("species", "clade", "rsq", variables)])
# rescale
for (j in variables) {
dat[[j]] <- (dat[[j]]-min(dat[[j]])) / diff(range(dat[[j]]))
}
# identify all predictors
repeat.types <- unique(sub("^[^.]*\\.", "", variables))
interactions <- paste0("age.", repeat.types, ":prop.", repeat.types)
all.terms <- c(
variables,
interactions
)
# pgls
# cd <- comparative.data(tree, dat, names.col = "species", vcv = TRUE)
# n <- nrow(cd$data)
n <- nrow(dat)
max.vars <- n-2 # leave 1 residual degree of freedom
# fit models
model.list <- list()
model.idx <- 1
for (k in 0:length(all.terms)) {
if (k == 0) {
fml <- as.formula("rsq ~ 1")
# fit <- pgls(fml, data = cd)
fit <- glm(fml, data = dat)
model.name <- paste0("M", model.idx)
model.list[[model.name]] <- fit
model.idx <- model.idx + 1
next
}
combos <- combn(all.terms, k, simplify = FALSE)
for (m in combos) {
fml <- as.formula(paste("rsq ~", paste(m, collapse = " + ")))
predictor.num <- length(attr(terms(fml), "term.labels"))
if (predictor.num >= max.vars) next
if (!model.marginal(m)) next
# fit <- pgls(fml, data = cd)
fit <- glm(fml, data = dat)
model.name <- paste0("M", model.idx)
model.list[[model.name]] <- fit
model.idx <- model.idx + 1
}
}
# create model selection table
models <- model.sel(model.list)
models <- models[order(models$AICc), ]
i <- 3
# subset results
clade <- clades[i]
dat <- merge(rsq, repeats, by.x = "species", by.y = "species", all.x = T, all.y = T)
if (clade %in% c("Mammalia", "Actinopterygii", "Sauropsida")) {
dat <- dat[dat$clade %in% clade, ]
}
variables <- colnames(dat)[grep("^(prop|age)\\.", colnames(dat))]
dat <- na.omit(dat[, c("species", "clade", "rsq", variables)])
# rescale
for (j in variables) {
dat[[j]] <- (dat[[j]]-min(dat[[j]])) / diff(range(dat[[j]]))
}
# identify all predictors
repeat.types <- unique(sub("^[^.]*\\.", "", variables))
interactions <- paste0("age.", repeat.types, ":prop.", repeat.types)
all.terms <- c(
variables,
interactions
)
# pgls
# cd <- comparative.data(tree, dat, names.col = "species", vcv = TRUE)
# n <- nrow(cd$data)
n <- nrow(dat)
max.vars <- n-2 # leave 1 residual degree of freedom
# fit models
model.list <- list()
model.idx <- 1
for (k in 0:length(all.terms)) {
if (k == 0) {
fml <- as.formula("rsq ~ 1")
# fit <- pgls(fml, data = cd)
fit <- glm(fml, data = dat)
model.name <- paste0("M", model.idx)
model.list[[model.name]] <- fit
model.idx <- model.idx + 1
next
}
combos <- combn(all.terms, k, simplify = FALSE)
for (m in combos) {
fml <- as.formula(paste("rsq ~", paste(m, collapse = " + ")))
predictor.num <- length(attr(terms(fml), "term.labels"))
if (predictor.num >= max.vars) next
if (!model.marginal(m)) next
# fit <- pgls(fml, data = cd)
fit <- glm(fml, data = dat)
model.name <- paste0("M", model.idx)
model.list[[model.name]] <- fit
model.idx <- model.idx + 1
}
}
# create model selection table
models <- model.sel(model.list)
models <- models[order(models$AICc), ]
setwd("~/GitHub/genedensity/figures/sup/table-s1")
species <- read.csv("../../../data/chrom-and-gsz.csv")
View(species)
View(species)
clades <- species$class
View(species)
clades["Reptilia"]
clades[clades == "Reptilia"]
clades <- species$class
clades[clades == "Reptilia" || clades == "Aves"] <- "Sauropsida"
species <- read.csv("../../../data/chrom-and-gsz.csv")
r2 <- read.csv("../../../results/rsq.csv")
landscape <- read.csv("../../../results/repeat-results.csv")
clades <- species$class
clades[clades %in% c("Reptilia", "Aves")] <- "Sauropsida"
clades
clases[!clades %in% c("Mammalia", "Aves", "Sauropsida")] <- NA
clades <- species$class
clades[clades %in% c("Reptilia", "Aves")] <- "Sauropsida"
clases[!clades %in% c("Mammalia", "Aves", "Sauropsida")] <- NA
clades[!clades %in% c("Mammalia", "Aves", "Sauropsida")] <- NA
clades
species <- read.csv("../../../data/chrom-and-gsz.csv")
r2 <- read.csv("../../../results/rsq.csv")
landscape <- read.csv("../../../results/repeat-results.csv")
clades <- species$class
clades[clades %in% c("Reptilia", "Aves")] <- "Sauropsida"
clades[!clades %in% c("Mammalia", "Actinopterygii", "Sauropsida")] <- NA
clades
species <- read.csv("../../../data/chrom-and-gsz.csv")
r2 <- read.csv("../../../results/rsq.csv")
landscape <- read.csv("../../../results/repeat-results.csv")
clades <- species$class
clades[clades %in% c("Reptilia", "Aves")] <- "Sauropsida"
clades[!clades %in% c("Mammalia", "Actinopterygii", "Sauropsida")] <- "Other"
species$has.landscape <- NA
species$has.landscape[match(landscape$species, species$species)] <- "Yes"
species$has.landscape[which(is.na(species$has.landscape))] <- "No"
species <- merge(species, r2, by = "species", all = T)
species <- species[, c("species", "clade", "rsq", "assem.sz", "has.landscape")]
species$rsq <- signif(species$rsq, 3)
species$assem.sz <- signif(species$assem.sz, 4)
species$clade <- clades
species$species <- gsub("_", " ", species$species)
colnames(species) <- c("Species", "Clade", "R2", "Assembly size (Mb)", "Repeats analyzed?")
write.csv(species, "table-s1.csv", row.names = F)
species <- read.csv("../../../data/chrom-and-gsz.csv")
r2 <- read.csv("../../../results/rsq.csv")
landscape <- read.csv("../../../results/repeat-results.csv")
clades <- species$class
clades[clades %in% c("Reptilia", "Aves")] <- "Sauropsida"
clades[!clades %in% c("Mammalia", "Actinopterygii", "Sauropsida")] <- "Other"
species$has.landscape <- NA
species$has.landscape[match(landscape$species, species$species)] <- "Yes"
species$has.landscape[which(is.na(species$has.landscape))] <- "No"
species <- merge(species, r2, by = "species", all = T)
species <- species[, c("species", "clade", "rsq", "assem.sz", "has.landscape")]
species$rsq <- signif(species$rsq, 3)
species$assem.sz <- signif(species$assem.sz, 4)
species$clade <- clades
species$species <- gsub("_", " ", species$species)
colnames(species) <- c("Species", "Clade", "R2", "Assembly size (Mb)", "Repeats analyzed?")
write.csv(species, "table-s1.csv", row.names = F)
busco <- read.csv("../../../data/busco.csv")
species <- read.csv("../../../data/chrom-and-gsz.csv")
r2 <- read.csv("../../../results/rsq.csv")
landscape <- read.csv("../../../results/repeat-results.csv")
busco <- read.csv("../../../data/busco.csv")
clades <- species$class
clades[clades %in% c("Reptilia", "Aves")] <- "Sauropsida"
clades[!clades %in% c("Mammalia", "Actinopterygii", "Sauropsida")] <- "Other"
species$has.landscape <- NA
species$has.landscape[match(landscape$species, species$species)] <- "Yes"
species$has.landscape[which(is.na(species$has.landscape))] <- "No"
species <- merge(species, r2, by = "species", all = T)
species <- merge(species, busco, by = "species", all = T)
View(species)
species <- read.csv("../../../data/chrom-and-gsz.csv")
r2 <- read.csv("../../../results/rsq.csv")
landscape <- read.csv("../../../results/repeat-results.csv")
busco <- read.csv("../../../data/busco.csv")
clades <- species$class
clades[clades %in% c("Reptilia", "Aves")] <- "Sauropsida"
clades[!clades %in% c("Mammalia", "Actinopterygii", "Sauropsida")] <- "Other"
species$has.landscape <- NA
species$has.landscape[match(landscape$species, species$species)] <- "Yes"
species$has.landscape[which(is.na(species$has.landscape))] <- "No"
species <- merge(species, r2, by = "species", all = T)
species <- merge(species, busco, by = "species", all = T)
species <- species[, c("species", "clade", "rsq", "assem.sz", "has.landscape", "single")]
species$rsq <- signif(species$rsq, 3)
species$assem.sz <- signif(species$assem.sz, 4)
species$clade <- clades
species$species <- gsub("_", " ", species$species)
colnames(species) <- c("Species", "Clade", "R2", "Assembly size (Mb)", "Repeats analyzed?", "BUSCO (Single)")
View(species)
species <- read.csv("../../../data/chrom-and-gsz.csv")
r2 <- read.csv("../../../results/rsq.csv")
landscape <- read.csv("../../../results/repeat-results.csv")
busco <- read.csv("../../../data/busco.csv")
clades <- species$class
clades[clades %in% c("Reptilia", "Aves")] <- "Sauropsida"
clades[!clades %in% c("Mammalia", "Actinopterygii", "Sauropsida")] <- "Other"
species$has.landscape <- NA
species$has.landscape[match(landscape$species, species$species)] <- "Yes"
species$has.landscape[which(is.na(species$has.landscape))] <- "No"
species <- merge(species, r2, by = "species", all = T)
species <- merge(species, busco, by = "species", all = T)
species <- species[, c("species", "clade", "rsq", "assem.sz", "has.landscape", "single")]
species$rsq <- signif(species$rsq, 3)
species$assem.sz <- signif(species$assem.sz, 4)
species$clade <- clades
species$species <- gsub("_", " ", species$species)
colnames(species) <- c("Species", "Clade", "R²", "Assembly size (Mb)", "Repeats analyzed?", "BUSCO (Single)")
View(species)
write.csv(species, "table-s1.csv", row.names = F)
