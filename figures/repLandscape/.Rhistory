# constants
requiredPackages <- c("data.table", "ggplot2")
# paths
functionsPath <- "../../analysis/functions.R"
combinedResultsCsvPath <- "../../results/vertebrates/combinedResults.csv"
divsumDirPath <- "../../results/vertebrates/repeatLandscape"
figureDirPath <- "../../figures/repLandscape/vertebrates"
# load stuff in
source(functionsPath)
loadPackages(requiredPackages)
combinedResults <- fread(combinedResultsCsvPath)
# landscape
files <- list.files(divsumDirPath)
for (file in files) {
# read text file into lines
divsumVector <- readLines(paste0(divsumDirPath, "/", file))
# look for the start of useful information
phrase <- "Coverage for each repeat class and divergence (Kimura)"
startIndex <- match(phrase, divsumVector) + 1
# condense the useful lines into a table
divsumVector2 <- divsumVector[startIndex:length(divsumVector)]
divsumTable <- read.table(textConnection(divsumVector2), sep = " ", header = TRUE)
# drop NA columns
divsumTable2 <- divsumTable[-c(which(sapply(divsumTable,
function(col) all(is.na(col)))))]
# detect column names in the same repeat category
repeatCategories <- sapply(colnames(divsumTable2),
function(names) strsplit(names, "\\.")[[1]][1])
nonUniqueCats <- names(table(repeatCategories)[table(repeatCategories) > 1])
# get the indices of the non-unique colnames
nonUniqueIndices <- sapply(nonUniqueCats,
function(str) which(as.character(repeatCategories) == str))
# get the row sums of columns with non-unique names
sumNonUnique <- lapply(nonUniqueIndices,
function(index) rowSums(divsumTable[c(index)]))
# remove non-unique columns from table
resultsTable0 <- divsumTable2[-c(as.numeric(unlist(nonUniqueIndices)))]
# rename table
colnames(resultsTable0) <- repeatCategories[-c(as.numeric(unlist(nonUniqueIndices)))]
# add summed columns to table
resultsTable <- data.frame(resultsTable0, sumNonUnique)
# find indices of colnames of the largest repeat groups
catsSortLength <- sort(colSums(resultsTable), decreasing = TRUE)
catsNotUnknown <- names(sort(colSums(resultsTable), decreasing = TRUE)) != "Unknown"
top4CatNames <- names(head(catsSortLength[catsNotUnknown], 4))
top4CatInd <- which(colnames(resultsTable) %in% top4CatNames)
# find indices of columns with unknown and divergence
unknownInd <- which(colnames(resultsTable) %in% "Unknown")
divInd <- which(colnames(resultsTable) %in% "Div")
# find and sum columns that don't belong to any aforementioned categories
Other <- rowSums(resultsTable[-c(top4CatInd, divInd, unknownInd)])
#remove "Other" and replace with sums
resultsTable1.5 <- resultsTable[c(top4CatInd, divInd, unknownInd)]
resultsTable2 <- data.frame(resultsTable1.5, Other)
# grouped by columns
divergence <- rep(resultsTable2$Div, length(colnames(resultsTable2))-1)
sequenceLengths.bp <- as.numeric(unlist(resultsTable2[-c(1)]))
speciesUnder <- gsub("_summary\\.divsum$", "", file)
species <- gsub("_", " ", speciesUnder)
gnsz.bp <- unique(combinedResults$asmblySize.bp[combinedResults$species == species])
percentOfGenome <- sequenceLengths.bp / gnsz.bp * 100
repeatGroup <- as.character(
sapply(colnames(resultsTable2)[colnames(resultsTable2) != "Div"],
function(rowname) rep(rowname, length(resultsTable2$Div))))
final <- data.frame(divergence, sequenceLengths.bp, percentOfGenome, repeatGroup)
final$repeatGroup <- factor(final$repeatGroup,
levels = c(top4CatNames, "Other", "Unknown"))
rsq <- unique(combinedResults$speciesRsquared[combinedResults$species == species])
ggplot(final, aes(y = percentOfGenome, x = divergence, fill = repeatGroup)) +
geom_bar(position="stack", stat="identity") +
ggtitle(bquote("Repeat Landscape of"~italic(.(species))~~(italic(r)^2==.(rsq)))) +
theme(plot.title = element_text(hjust = 0),
axis.line = element_line(color = "black"),
legend.title = element_blank(),
legend.background = element_rect(fill = "#f2f2f2",
color = "black",
linewidth = 0.5),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "black",
linetype = "dotted",
size = 0.25),
legend.position = c(0.884, 0.557),
legend.key.size = unit(23.5, "points")) +
scale_fill_manual(
breaks = c(top4CatNames, "Other", "Unknown"),
values = c("#e41a1c", "#ffff33", "#4daf4a", "#377eb8", "#ff7f00", "#984ea3")) +
labs(x = "K2P Distance (Substitutions per Site)",
y = "% of Genome Size Occupied by Repeats")
ggsave(filename = paste0(speciesUnder, ".jpg"),
plot = last_plot(),
path = figureDirPath,
width = 7680,
height = 4320,
units = "px",
dpi = 1100)
}
# constants
requiredPackages <- c("data.table", "ggplot2")
# paths
functionsPath <- "../../analysis/functions.R"
combinedResultsCsvPath <- "../../results/vertebrates/combinedResults.csv"
divsumDirPath <- "../../results/vertebrates/repeatLandscape"
figureDirPath <- "../../figures/repLandscape/vertebrates"
# load stuff in
source(functionsPath)
loadPackages(requiredPackages)
combinedResults <- fread(combinedResultsCsvPath)
# landscape
files <- list.files(divsumDirPath)
file <- files[1]
file
# read text file into lines
divsumVector <- readLines(paste0(divsumDirPath, "/", file))
# look for the start of useful information
phrase <- "Coverage for each repeat class and divergence (Kimura)"
startIndex <- match(phrase, divsumVector) + 1
# condense the useful lines into a table
divsumVector2 <- divsumVector[startIndex:length(divsumVector)]
divsumTable <- read.table(textConnection(divsumVector2), sep = " ", header = TRUE)
# drop NA columns
divsumTable2 <- divsumTable[-c(which(sapply(divsumTable,
function(col) all(is.na(col)))))]
# detect column names in the same repeat category
repeatCategories <- sapply(colnames(divsumTable2),
function(names) strsplit(names, "\\.")[[1]][1])
nonUniqueCats <- names(table(repeatCategories)[table(repeatCategories) > 1])
# get the indices of the non-unique colnames
nonUniqueIndices <- sapply(nonUniqueCats,
function(str) which(as.character(repeatCategories) == str))
# get the row sums of columns with non-unique names
sumNonUnique <- lapply(nonUniqueIndices,
function(index) rowSums(divsumTable[c(index)]))
# remove non-unique columns from table
resultsTable0 <- divsumTable2[-c(as.numeric(unlist(nonUniqueIndices)))]
# rename table
colnames(resultsTable0) <- repeatCategories[-c(as.numeric(unlist(nonUniqueIndices)))]
# add summed columns to table
resultsTable <- data.frame(resultsTable0, sumNonUnique)
# find indices of colnames of the largest repeat groups
catsSortLength <- sort(colSums(resultsTable), decreasing = TRUE)
catsNotUnknown <- names(sort(colSums(resultsTable), decreasing = TRUE)) != "Unknown"
top4CatNames <- names(head(catsSortLength[catsNotUnknown], 4))
top4CatInd <- which(colnames(resultsTable) %in% top4CatNames)
# find indices of columns with unknown and divergence
unknownInd <- which(colnames(resultsTable) %in% "Unknown")
divInd <- which(colnames(resultsTable) %in% "Div")
# find and sum columns that don't belong to any aforementioned categories
Other <- rowSums(resultsTable[-c(top4CatInd, divInd, unknownInd)])
#remove "Other" and replace with sums
resultsTable1.5 <- resultsTable[c(top4CatInd, divInd, unknownInd)]
resultsTable2 <- data.frame(resultsTable1.5, Other)
# grouped by columns
divergence <- rep(resultsTable2$Div, length(colnames(resultsTable2))-1)
sequenceLengths.bp <- as.numeric(unlist(resultsTable2[-c(1)]))
speciesUnder <- gsub("_summary\\.divsum$", "", file)
species <- gsub("_", " ", speciesUnder)
gnsz.bp <- unique(combinedResults$asmblySize.bp[combinedResults$species == species])
percentOfGenome <- sequenceLengths.bp / gnsz.bp * 100
repeatGroup <- as.character(
sapply(colnames(resultsTable2)[colnames(resultsTable2) != "Div"],
function(rowname) rep(rowname, length(resultsTable2$Div))))
final <- data.frame(divergence, sequenceLengths.bp, percentOfGenome, repeatGroup)
final$repeatGroup <- factor(final$repeatGroup,
levels = c(top4CatNames, "Other", "Unknown"))
rsq <- unique(combinedResults$speciesRsquared[combinedResults$species == species])
View(final)
View(final)
ggplot(final, aes(y = percentOfGenome, x = divergence, fill = repeatGroup)) +
geom_bar(position="stack", stat="identity") +
ggtitle(bquote("Repeat Landscape of"~italic(.(species))~~(italic(r)^2==.(rsq)))) +
theme(plot.title = element_text(hjust = 0),
axis.line = element_line(color = "black"),
legend.title = element_blank(),
legend.background = element_rect(fill = "#f2f2f2",
color = "black",
linewidth = 0.5),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "black",
linetype = "dotted",
size = 0.25),
legend.position = c(0.884, 0.557),
legend.key.size = unit(23.5, "points")) +
scale_fill_manual(
breaks = c(top4CatNames, "Other", "Unknown"),
values = c("#e41a1c", "#ffff33", "#4daf4a", "#377eb8", "#ff7f00", "#984ea3")) +
labs(x = "K2P Distance (Substitutions per Site)",
y = "% of Genome Size Occupied by Repeats")
View(final)
unique(combinedResults$asmblySize.bp[combinedResults$species == species])
unique(combinedResults[combinedResults$species == species])
unique(combinedResults[combinedResults$species == "Ailuropoda melanoleuca"])
View unique(combinedResults[combinedResults$species == "Ailuropoda melanoleuca"])
View( unique(combinedResults[combinedResults$species == "Ailuropoda melanoleuca"]))
unique(combinedResults$asmblySize.bp[combinedResults$species == species])
unique(combinedResults$asmblySize.bp[combinedResults$species == "Ailuropoda melanoleuca"])
species
# constants
requiredPackages <- c("data.table", "ggplot2")
# paths
functionsPath <- "../../analysis/functions.R"
combinedResultsCsvPath <- "../../results/vertebrates/combinedResults.csv"
divsumDirPath <- "../../results/vertebrates/repeatLandscape"
figureDirPath <- "../../figures/repLandscape/vertebrates"
# load stuff in
source(functionsPath)
loadPackages(requiredPackages)
combinedResults <- fread(combinedResultsCsvPath)
# landscape
files <- list.files(divsumDirPath)
for (file in files) {
# read text file into lines
divsumVector <- readLines(paste0(divsumDirPath, "/", file))
# look for the start of useful information
phrase <- "Coverage for each repeat class and divergence (Kimura)"
startIndex <- match(phrase, divsumVector) + 1
# condense the useful lines into a table
divsumVector2 <- divsumVector[startIndex:length(divsumVector)]
divsumTable <- read.table(textConnection(divsumVector2), sep = " ", header = TRUE)
# drop NA columns
divsumTable2 <- divsumTable[-c(which(sapply(divsumTable,
function(col) all(is.na(col)))))]
# detect column names in the same repeat category
repeatCategories <- sapply(colnames(divsumTable2),
function(names) strsplit(names, "\\.")[[1]][1])
nonUniqueCats <- names(table(repeatCategories)[table(repeatCategories) > 1])
# get the indices of the non-unique colnames
nonUniqueIndices <- sapply(nonUniqueCats,
function(str) which(as.character(repeatCategories) == str))
# get the row sums of columns with non-unique names
sumNonUnique <- lapply(nonUniqueIndices,
function(index) rowSums(divsumTable[c(index)]))
# remove non-unique columns from table
resultsTable0 <- divsumTable2[-c(as.numeric(unlist(nonUniqueIndices)))]
# rename table
colnames(resultsTable0) <- repeatCategories[-c(as.numeric(unlist(nonUniqueIndices)))]
# add summed columns to table
resultsTable <- data.frame(resultsTable0, sumNonUnique)
# find indices of colnames of the largest repeat groups
catsSortLength <- sort(colSums(resultsTable), decreasing = TRUE)
catsNotUnknown <- names(sort(colSums(resultsTable), decreasing = TRUE)) != "Unknown"
top4CatNames <- names(head(catsSortLength[catsNotUnknown], 4))
top4CatInd <- which(colnames(resultsTable) %in% top4CatNames)
# find indices of columns with unknown and divergence
unknownInd <- which(colnames(resultsTable) %in% "Unknown")
divInd <- which(colnames(resultsTable) %in% "Div")
# find and sum columns that don't belong to any aforementioned categories
Other <- rowSums(resultsTable[-c(top4CatInd, divInd, unknownInd)])
#remove "Other" and replace with sums
resultsTable1.5 <- resultsTable[c(top4CatInd, divInd, unknownInd)]
resultsTable2 <- data.frame(resultsTable1.5, Other)
# grouped by columns
divergence <- rep(resultsTable2$Div, length(colnames(resultsTable2))-1)
sequenceLengths.bp <- as.numeric(unlist(resultsTable2[-c(1)]))
speciesUnder <- gsub("_summary\\.divsum$", "", file)
speciesLower <- gsub("_", " ", speciesUnder)
species <- gsub("^(\\w)(.*)", "\\U\\1\\L\\2", speciesLower, perl = TRUE)
gnsz.bp <- unique(combinedResults$asmblySize.bp[combinedResults$species == species])
percentOfGenome <- sequenceLengths.bp / gnsz.bp * 100
repeatGroup <- as.character(
sapply(colnames(resultsTable2)[colnames(resultsTable2) != "Div"],
function(rowname) rep(rowname, length(resultsTable2$Div))))
final <- data.frame(divergence, sequenceLengths.bp, percentOfGenome, repeatGroup)
final$repeatGroup <- factor(final$repeatGroup,
levels = c(top4CatNames, "Other", "Unknown"))
rsq <- unique(combinedResults$speciesRsquared[combinedResults$species == species])
ggplot(final, aes(y = percentOfGenome, x = divergence, fill = repeatGroup)) +
geom_bar(position="stack", stat="identity") +
ggtitle(bquote("Repeat Landscape of"~italic(.(species))~~(italic(r)^2==.(rsq)))) +
theme(plot.title = element_text(hjust = 0),
axis.line = element_line(color = "black"),
legend.title = element_blank(),
legend.background = element_rect(fill = "#f2f2f2",
color = "black",
linewidth = 0.5),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "black",
linetype = "dotted",
size = 0.25),
legend.position = c(0.884, 0.557),
legend.key.size = unit(23.5, "points")) +
scale_fill_manual(
breaks = c(top4CatNames, "Other", "Unknown"),
values = c("#e41a1c", "#ffff33", "#4daf4a", "#377eb8", "#ff7f00", "#984ea3")) +
labs(x = "K2P Distance (Substitutions per Site)",
y = "% of Genome Size Occupied by Repeats")
ggsave(filename = paste0(speciesUnder, ".jpg"),
plot = last_plot(),
path = figureDirPath,
width = 7680,
height = 4320,
units = "px",
dpi = 1100)
}
# constants
requiredPackages <- c("data.table", "ggplot2")
# paths
functionsPath <- "../../analysis/functions.R"
combinedResultsCsvPath <- "../../results/vertebrates/combinedResults.csv"
divsumDirPath <- "../../results/vertebrates/repeatLandscape"
figureDirPath <- "../../figures/repLandscape/vertebrates"
# load stuff in
source(functionsPath)
loadPackages(requiredPackages)
combinedResults <- fread(combinedResultsCsvPath)
# landscape
files <- list.files(divsumDirPath)
for (file in files) {
# read text file into lines
divsumVector <- readLines(paste0(divsumDirPath, "/", file))
# look for the start of useful information
phrase <- "Coverage for each repeat class and divergence (Kimura)"
startIndex <- match(phrase, divsumVector) + 1
# condense the useful lines into a table
divsumVector2 <- divsumVector[startIndex:length(divsumVector)]
divsumTable <- read.table(textConnection(divsumVector2), sep = " ", header = TRUE)
# drop NA columns
divsumTable2 <- divsumTable[-c(which(sapply(divsumTable,
function(col) all(is.na(col)))))]
# detect column names in the same repeat category
repeatCategories <- sapply(colnames(divsumTable2),
function(names) strsplit(names, "\\.")[[1]][1])
nonUniqueCats <- names(table(repeatCategories)[table(repeatCategories) > 1])
# get the indices of the non-unique colnames
nonUniqueIndices <- sapply(nonUniqueCats,
function(str) which(as.character(repeatCategories) == str))
# get the row sums of columns with non-unique names
sumNonUnique <- lapply(nonUniqueIndices,
function(index) rowSums(divsumTable[c(index)]))
# remove non-unique columns from table
resultsTable0 <- divsumTable2[-c(as.numeric(unlist(nonUniqueIndices)))]
# rename table
colnames(resultsTable0) <- repeatCategories[-c(as.numeric(unlist(nonUniqueIndices)))]
# add summed columns to table
resultsTable <- data.frame(resultsTable0, sumNonUnique)
# find indices of colnames of the largest repeat groups
catsSortLength <- sort(colSums(resultsTable), decreasing = TRUE)
catsNotUnknown <- names(sort(colSums(resultsTable), decreasing = TRUE)) != "Unknown"
top4CatNames <- names(head(catsSortLength[catsNotUnknown], 4))
top4CatInd <- which(colnames(resultsTable) %in% top4CatNames)
# find indices of columns with unknown and divergence
unknownInd <- which(colnames(resultsTable) %in% "Unknown")
divInd <- which(colnames(resultsTable) %in% "Div")
# find and sum columns that don't belong to any aforementioned categories
Other <- rowSums(resultsTable[-c(top4CatInd, divInd, unknownInd)])
#remove "Other" and replace with sums
resultsTable1.5 <- resultsTable[c(top4CatInd, divInd, unknownInd)]
resultsTable2 <- data.frame(resultsTable1.5, Other)
# grouped by columns
divergence <- rep(resultsTable2$Div, length(colnames(resultsTable2))-1)
sequenceLengths.bp <- as.numeric(unlist(resultsTable2[-c(1)]))
speciesUnder <- gsub("_summary\\.divsum$", "", file)
speciesLower <- gsub("_", " ", speciesUnder)
species <- gsub("^(\\w)(.*)", "\\U\\1\\L\\2", speciesLower, perl = TRUE)
gnsz.bp <- unique(combinedResults$asmblySize.bp[combinedResults$species == species])
percentOfGenome <- sequenceLengths.bp / gnsz.bp * 100
repeatGroup <- as.character(
sapply(colnames(resultsTable2)[colnames(resultsTable2) != "Div"],
function(rowname) rep(rowname, length(resultsTable2$Div))))
final <- data.frame(divergence, sequenceLengths.bp, percentOfGenome, repeatGroup)
final$repeatGroup <- factor(final$repeatGroup,
levels = c(top4CatNames, "Other", "Unknown"))
rsq <- unique(combinedResults$speciesRsquared[combinedResults$species == species])
ggplot(final, aes(y = percentOfGenome, x = divergence, fill = repeatGroup)) +
geom_bar(position="stack", stat="identity") +
ggtitle(bquote("Repeat Landscape of"~italic(.(species))~~(italic(r)^2==.(rsq)))) +
theme(plot.title = element_text(hjust = 0),
axis.line = element_line(color = "black"),
legend.title = element_blank(),
legend.background = element_rect(fill = "#f2f2f2",
color = "black",
linewidth = 0.5),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "black",
linetype = "dotted",
size = 0.25),
legend.position = c(0.884, 0.557),
legend.key.size = unit(23.5, "points")) +
scale_fill_manual(
breaks = c(top4CatNames, "Other", "Unknown"),
values = c("#e41a1c", "#ffff33", "#4daf4a", "#377eb8", "#ff7f00", "#984ea3")) +
labs(x = "K2P Distance (Substitutions per Site)",
y = "% of Genome Size Occupied by Repeats")
ggsave(filename = paste0(speciesUnder, ".jpg"),
plot = last_plot(),
path = figureDirPath,
width = 7680,
height = 4320,
units = "px",
dpi = 1100)
}
# constants
requiredPackages <- c("data.table", "ggplot2")
# paths
functionsPath <- "../../analysis/functions.R"
combinedResultsCsvPath <- "../../results/vertebrates/combinedResults.csv"
divsumDirPath <- "../../results/vertebrates/repeatLandscape"
figureDirPath <- "../../figures/repLandscape/vertebrates"
# load stuff in
source(functionsPath)
loadPackages(requiredPackages)
combinedResults <- fread(combinedResultsCsvPath)
# landscape
files <- list.files(divsumDirPath)
for (file in files) {
# read text file into lines
divsumVector <- readLines(paste0(divsumDirPath, "/", file))
# look for the start of useful information
phrase <- "Coverage for each repeat class and divergence (Kimura)"
startIndex <- match(phrase, divsumVector) + 1
# condense the useful lines into a table
divsumVector2 <- divsumVector[startIndex:length(divsumVector)]
divsumTable <- read.table(textConnection(divsumVector2), sep = " ", header = TRUE)
# drop NA columns
divsumTable2 <- divsumTable[-c(which(sapply(divsumTable,
function(col) all(is.na(col)))))]
# detect column names in the same repeat category
repeatCategories <- sapply(colnames(divsumTable2),
function(names) strsplit(names, "\\.")[[1]][1])
nonUniqueCats <- names(table(repeatCategories)[table(repeatCategories) > 1])
# get the indices of the non-unique colnames
nonUniqueIndices <- sapply(nonUniqueCats,
function(str) which(as.character(repeatCategories) == str))
# get the row sums of columns with non-unique names
sumNonUnique <- lapply(nonUniqueIndices,
function(index) rowSums(divsumTable[c(index)]))
# remove non-unique columns from table
resultsTable0 <- divsumTable2[-c(as.numeric(unlist(nonUniqueIndices)))]
# rename table
colnames(resultsTable0) <- repeatCategories[-c(as.numeric(unlist(nonUniqueIndices)))]
# add summed columns to table
resultsTable <- data.frame(resultsTable0, sumNonUnique)
# find indices of colnames of the largest repeat groups
catsSortLength <- sort(colSums(resultsTable), decreasing = TRUE)
catsNotUnknown <- names(sort(colSums(resultsTable), decreasing = TRUE)) != "Unknown"
top4CatNames <- names(head(catsSortLength[catsNotUnknown], 4))
top4CatInd <- which(colnames(resultsTable) %in% top4CatNames)
# find indices of columns with unknown and divergence
unknownInd <- which(colnames(resultsTable) %in% "Unknown")
divInd <- which(colnames(resultsTable) %in% "Div")
# find and sum columns that don't belong to any aforementioned categories
Other <- rowSums(resultsTable[-c(top4CatInd, divInd, unknownInd)])
#remove "Other" and replace with sums
resultsTable1.5 <- resultsTable[c(top4CatInd, divInd, unknownInd)]
resultsTable2 <- data.frame(resultsTable1.5, Other)
# grouped by columns
divergence <- rep(resultsTable2$Div, length(colnames(resultsTable2))-1)
sequenceLengths.bp <- as.numeric(unlist(resultsTable2[-c(1)]))
speciesUnder <- gsub("_summary\\.divsum$", "", file)
speciesLower <- gsub("_", " ", speciesUnder)
species <- gsub("^(\\w)(.*)", "\\U\\1\\L\\2", speciesLower, perl = TRUE)
gnsz.bp <- unique(combinedResults$asmblySize.bp[combinedResults$species == species])
percentOfGenome <- sequenceLengths.bp / gnsz.bp * 100
repeatGroup <- as.character(
sapply(colnames(resultsTable2)[colnames(resultsTable2) != "Div"],
function(rowname) rep(rowname, length(resultsTable2$Div))))
final <- data.frame(divergence, sequenceLengths.bp, percentOfGenome, repeatGroup)
final$repeatGroup <- factor(final$repeatGroup,
levels = c(top4CatNames, "Other", "Unknown"))
rsq <- unique(combinedResults$speciesRsquared[combinedResults$species == species])
ggplot(final, aes(y = percentOfGenome, x = divergence, fill = repeatGroup)) +
geom_bar(position="stack", stat="identity") +
ggtitle(bquote("Repeat Landscape of"~italic(.(species))~~(italic(r)^2==.(rsq)))) +
theme(plot.title = element_text(hjust = 0),
axis.line = element_line(color = "black"),
legend.title = element_blank(),
legend.background = element_rect(fill = "#f2f2f2",
color = "black",
linewidth = 0.5),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "black",
linetype = "dotted",
size = 0.25),
legend.position = c(0.884, 0.557),
legend.key.size = unit(23.5, "points")) +
scale_fill_manual(
breaks = c(top4CatNames, "Other", "Unknown"),
values = c("#e41a1c", "#ffff33", "#4daf4a", "#377eb8", "#ff7f00", "#984ea3")) +
labs(x = "K2P Distance (Substitutions per Site)",
y = "% of Genome Size Occupied by Repeats")
ggsave(filename = paste0(gsub(" ", "_", species), ".jpg"),
plot = last_plot(),
path = figureDirPath,
width = 7680,
height = 4320,
units = "px",
dpi = 1100)
}
