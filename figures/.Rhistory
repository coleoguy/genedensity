nsim = 10000)[[4]]
if (sig < 0.05) {
cd <- comparative.data(pruned.tree, dat, names.col = "species", vcv = TRUE)
model <- pgls(rsq ~ total.rep.pct + total.rep.median, data = cd)
}
x <- seq(min(cd$data$total.rep.pct), max(cd$data$total.rep.pct), length.out = 100)
y <- seq(min(cd$data$total.rep.median), max(cd$data$total.rep.median), length.out = 100)
grid <- expand.grid(
total.rep.pct = x,
total.rep.median = y
)
grid$rsq <- predict(model, newdata = grid)
z <- matrix(grid$rsq, nrow = length(x), ncol = length(y))
image(x = x,
y = y,
z = z,
col = viridis(100),
xlab = "repeat proportion",
ylab = "repeat recency",
main = "mammals all repeats")
summary(model)
res <- 1000
norm <- (dat$rsq - min(dat$rsq)) / (max(dat$rsq) - min(dat$rsq))
palette <- viridis(res)
idx <- round(norm * res-1) + 1
cols <- palette[idx]
plot(dat$total.rep.median,
dat$total.rep.pct,
col = cols,
pch = 16)
plot(dat$total.rep.pct,
dat$total.rep.median,
col = cols,
pch = 16)
image(x = x,
y = y,
z = z,
col = viridis(100),
xlab = "repeat proportion",
ylab = "repeat recency",
main = "mammals all repeats")
plot(dat$total.rep.pct,
dat$total.rep.median,
col = cols,
pch = 16)
plot(dat$total.rep.median, dat$rsq)
plot(dat$total.rep.pct, dat$rsq)
library(viridis)
# load stuff in
library(phytools)
library(viridis)
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.8, ]
dat <- dat[!duplicated(dat$species), ]
dat <- dat[, c("species", "clade", "rsq")]
tree <- read.tree("../data/formatted_tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(tree$tip.label, dat$species)
pruned.tree <- keep.tip(tree, int)
pruned.tree <- ladderize(pruned.tree)
# load stuff in
library(phytools)
library(viridis)
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.9, ]
dat <- dat[!duplicated(dat$species), ]
dat <- dat[, c("species", "clade", "rsq")]
tree <- read.tree("../data/formatted_tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(tree$tip.label, dat$species)
pruned.tree <- keep.tip(tree, int)
pruned.tree <- ladderize(pruned.tree)
dat <- dat[dat$species %in% int, ]
dat <- dat[match(pruned.tree$tip.label, dat$species), ]
rsq <- setNames(dat$rsq, dat$species)
p <- contMap(pruned.tree, rsq, plot = FALSE)
p <- setMap(p, viridis(n=300))
# load stuff in
library(phytools)
library(viridis)
dat <- read.csv("../results/parsed.csv")
dat <- dat[dat$thrs == 0.9, ]
dat <- dat[!is.na(dat$chromnum.1n), ]
dat <- dat[!duplicated(dat$species), ]
dat <- dat[, c("species", "clade", "rsq")]
tree <- read.tree("../data/formatted_tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(tree$tip.label, dat$species)
pruned.tree <- keep.tip(tree, int)
pruned.tree <- ladderize(pruned.tree)
dat <- dat[dat$species %in% int, ]
dat <- dat[match(pruned.tree$tip.label, dat$species), ]
rsq <- setNames(dat$rsq, dat$species)
p <- contMap(pruned.tree, rsq, plot = FALSE)
p <- setMap(p, viridis(n=300))
plot(p,
res = 300,
lwd = c(1.5, 5),
fsize = c(0.3, 0.5),
outline = FALSE,
sig = 2,
xlim = c(0, 115),
ylim = c(-150, 450),  #450
direction = "downwards",
ftype = "off",
plot = TRUE)
plot(p,
res = 300,
lwd = c(1.5, 5),
fsize = c(0.3, 0.5),
outline = FALSE,
sig = 2,
xlim = c(0, 115),
ylim = c(-150, 450),  #450
direction = "downwards",
plot = TRUE)
# visualize gene start positions
dat <- read.csv("../results/parsed.csv")
sp <- gsub("_", " ", sub("\\..*", "", list.files("../data/annot")))
i <- sp[1]
annot <- read.table(paste0("../data/annot/", gsub(" ", "_", i), ".gtf"),
header = TRUE,
sep = "\t")
annot <- annot[annot[, 3] == "gene", ]
annot[, c(4, 5)] <- annot[, c(4, 5)] / 1000000
chromnum <- nrow(dat[dat$species == i, ])
max.chromsize <- max(dat[dat$species == i, ]$size.Mbp)
plot(1,
type = "n",
xlim = c(0, 1.1*max.chromsize),
ylim = c(0, chromnum),
xlab = "Size (Mb)",
ylab = "Chromosomes",
axes = FALSE,
main = i)
axis(1)
chromcount <- 1
for (j in dat[dat$species == i, ]$name) { # for each chromosome
chrom <- annot[annot[, 1] == j, ]
end <- dat[dat$species == i & dat$name == j, ]$size.Mbp
# rect(ybottom = chromcount - 0.4,
# xleft = 0,
# ytop = chromcount + 0.4,
# xright = end,
# col = "white",
# border = "black")
if (chromcount %% 2 == 0) {
text(-0.01*max.chromsize, chromcount, j, cex = 0.6, xpd = NA, adj = c(1, 0.5))
} else {
text(-0.03*max.chromsize, chromcount, j, cex = 0.6, xpd = NA, adj = c(1, 0.5))
}
mid <- chrom[, 4]+((chrom[, 5]-chrom[, 4])/2)
b <- rep(chromcount - 0.4, nrow(chrom))
l <- mid - 0.00004*end
t <- rep(chromcount + 0.4, nrow(chrom))
r <- mid + 0.00004*end
x <- c(rbind(l, r, r, l, NA))
y <- c(rbind(b, b, t, t, NA))
polygon(x, y, col = "black", border = NA)
chromcount <- chromcount + 1
}
# visualize gene start positions
dat <- read.csv("../results/parsed.csv")
sp <- gsub("_", " ", sub("\\..*", "", list.files("../data/annot")))
i <- sp[1]
annot <- read.table(paste0("../data/annot/", gsub(" ", "_", i), ".gtf"),
header = TRUE,
sep = "\t")
annot <- annot[annot[, 3] == "gene", ]
annot[, c(4, 5)] <- annot[, c(4, 5)] / 1000000
chromnum <- nrow(dat[dat$species == i, ])
if (chromnum == 0) {
next
}
max.chromsize <- max(dat[dat$species == i, ]$size.Mbp)
chromnum
round(0.3 * chromnum, 1)
round(0.5 * chromnum, 1)
dat[dat$species == i, ]$name
top <- round(0.5 * chromnum, 1)
dat[dat$species == i, ]$name[1:top]
chrom <- annot[annot[, 1] == j, ]
j <- dat[dat$species == i, ]$name[1:top]
top
j
chrom <- annot[annot[, 1] == j, ]
end <- dat[dat$species == i & dat$name == j, ]$size.Mbp
mid <- chrom[, 4]+((chrom[, 5]-chrom[, 4])/2)
cv <- sd(chrom) / mean(chrom)
cv <- sd(mid) / mean(mid)
df <- rbind(df, c(i, cv))
df <- rbind(df, data.frame(i, cv))
df <- data.frame()
df <- rbind(df, data.frame(i, cv))
# visualize gene start positions
dat <- read.csv("../results/parsed.csv")
sp <- gsub("_", " ", sub("\\..*", "", list.files("../data/annot")))
df <- data.frame()
for (i in sp) { # for each species
annot <- read.table(paste0("../data/annot/", gsub(" ", "_", i), ".gtf"),
header = TRUE,
sep = "\t")
annot <- annot[annot[, 3] == "gene", ]
annot[, c(4, 5)] <- annot[, c(4, 5)] / 1000000
chromnum <- nrow(dat[dat$species == i, ])
if (chromnum == 0) {
next
}
top <- round(0.5 * chromnum, 1)
for (j in dat[dat$species == i, ]$name[1:top]) { # for each chromosome
chrom <- annot[annot[, 1] == j, ]
end <- dat[dat$species == i & dat$name == j, ]$size.Mbp
mid <- chrom[, 4]+((chrom[, 5]-chrom[, 4])/2)
cv <- sd(mid) / mean(mid)
df <- rbind(df, data.frame(i, cv))
}
}
vec
View(df)
top
top
top <- round(0.5 * chromnum, 0)
top
# hypothesis: gene density varies WITHIN chromosomes. fission might break a
# chromosome so that one fragment has high gene density variation and another
# has low gene density variation.
# visualize gene start positions
dat <- read.csv("../results/parsed.csv")
sp <- gsub("_", " ", sub("\\..*", "", list.files("../data/annot")))
df <- data.frame()
for (i in sp) { # for each species
df1 <- data.frame()
annot <- read.table(paste0("../data/annot/", gsub(" ", "_", i), ".gtf"),
header = TRUE,
sep = "\t")
annot <- annot[annot[, 3] == "gene", ]
annot[, c(4, 5)] <- annot[, c(4, 5)] / 1000000
chromnum <- nrow(dat[dat$species == i, ])
if (chromnum == 0) {
next
}
top <- round(0.5 * chromnum, 0)
for (j in dat[dat$species == i, ]$name[1:top]) { # for each chromosome
chrom <- annot[annot[, 1] == j, ]
end <- dat[dat$species == i & dat$name == j, ]$size.Mbp
mid <- chrom[, 4]+((chrom[, 5]-chrom[, 4])/2)
cv <- sd(mid) / mean(mid)
df1 <- rbind(df1, data.frame(i, cv))
}
cv <- df(df1$cv) / mean(df1$cv)
df <- rbind(df1, data.frame(i, cv))
}
View(df1)
df1 <- data.frame()
annot <- read.table(paste0("../data/annot/", gsub(" ", "_", i), ".gtf"),
header = TRUE,
sep = "\t")
annot <- annot[annot[, 3] == "gene", ]
annot[, c(4, 5)] <- annot[, c(4, 5)] / 1000000
chromnum <- nrow(dat[dat$species == i, ])
if (chromnum == 0) {
next
}
top <- round(0.5 * chromnum, 0)
for (j in dat[dat$species == i, ]$name[1:top]) { # for each chromosome
chrom <- annot[annot[, 1] == j, ]
end <- dat[dat$species == i & dat$name == j, ]$size.Mbp
mid <- chrom[, 4]+((chrom[, 5]-chrom[, 4])/2)
cv <- sd(mid) / mean(mid)
df1 <- rbind(df1, data.frame(i, cv))
}
cv <- df(df1$cv) / mean(df1$cv)
df1$cv
cv <- sd(df1$cv) / mean(df1$cv)
# hypothesis: gene density varies WITHIN chromosomes. fission might break a
# chromosome so that one fragment has high gene density variation and another
# has low gene density variation.
# visualize gene start positions
dat <- read.csv("../results/parsed.csv")
sp <- gsub("_", " ", sub("\\..*", "", list.files("../data/annot")))
df <- data.frame()
for (i in sp) { # for each species
df1 <- data.frame()
annot <- read.table(paste0("../data/annot/", gsub(" ", "_", i), ".gtf"),
header = TRUE,
sep = "\t")
annot <- annot[annot[, 3] == "gene", ]
annot[, c(4, 5)] <- annot[, c(4, 5)] / 1000000
chromnum <- nrow(dat[dat$species == i, ])
if (chromnum == 0) {
next
}
top <- round(0.5 * chromnum, 0)
for (j in dat[dat$species == i, ]$name[1:top]) { # for each chromosome
chrom <- annot[annot[, 1] == j, ]
end <- dat[dat$species == i & dat$name == j, ]$size.Mbp
mid <- chrom[, 4]+((chrom[, 5]-chrom[, 4])/2)
cv <- sd(mid) / mean(mid)
df1 <- rbind(df1, data.frame(i, cv))
}
cv <- sd(df1$cv) / mean(df1$cv)
df <- rbind(df1, data.frame(i, cv))
}
View(df)
i
# hypothesis: gene density varies WITHIN chromosomes. fission might break a
# chromosome so that one fragment has high gene density variation and another
# has low gene density variation.
# visualize gene start positions
dat <- read.csv("../results/parsed.csv")
sp <- gsub("_", " ", sub("\\..*", "", list.files("../data/annot")))
df <- data.frame()
for (i in sp) { # for each species
df1 <- data.frame()
annot <- read.table(paste0("../data/annot/", gsub(" ", "_", i), ".gtf"),
header = TRUE,
sep = "\t")
annot <- annot[annot[, 3] == "gene", ]
annot[, c(4, 5)] <- annot[, c(4, 5)] / 1000000
chromnum <- nrow(dat[dat$species == i, ])
if (chromnum == 0) {
next
}
top <- round(0.5 * chromnum, 0)
for (j in dat[dat$species == i, ]$name[1:top]) { # for each chromosome
chrom <- annot[annot[, 1] == j, ]
end <- dat[dat$species == i & dat$name == j, ]$size.Mbp
mid <- chrom[, 4]+((chrom[, 5]-chrom[, 4])/2)
cv <- sd(mid) / mean(mid)
df1 <- rbind(df1, data.frame(i, cv))
}
cv <- sd(df1$cv) / mean(df1$cv)
df <- rbind(df, data.frame(i, cv))
}
View(df)
df1
df
l <- dat[!duplicated(dat$species), ]
View(l)
plot(df$cv, l$rsq)
plot(df$cv, l$rsq)
# visualize gene start positions
dat <- read.csv("../results/parsed.csv")
sp <- gsub("_", " ", sub("\\..*", "", list.files("../data/annot")))
df <- data.frame()
i <- sp[1]
df1 <- data.frame()
annot <- read.table(paste0("../data/annot/", gsub(" ", "_", i), ".gtf"),
header = TRUE,
sep = "\t")
annot <- annot[annot[, 3] == "gene", ]
annot[, c(4, 5)] <- annot[, c(4, 5)] / 1000000
chromnum <- nrow(dat[dat$species == i, ])
if (chromnum == 0) {
next
}
top <- round(0.5 * chromnum, 0)
for (j in dat[dat$species == i, ]$name[1:top]) { # for each chromosome
chrom <- annot[annot[, 1] == j, ]
end <- dat[dat$species == i & dat$name == j, ]$size.Mbp
mid <- chrom[, 4]+((chrom[, 5]-chrom[, 4])/2)
cv <- sd(mid) / mean(mid)
df1 <- rbind(df1, data.frame(i, cv))
}
View(df1)
# visualize gene start positions
dat <- read.csv("../results/parsed.csv")
sp <- gsub("_", " ", sub("\\..*", "", list.files("../data/annot")))
df <- data.frame()
for (i in sp) { # for each species
df1 <- data.frame()
annot <- read.table(paste0("../data/annot/", gsub(" ", "_", i), ".gtf"),
header = TRUE,
sep = "\t")
annot <- annot[annot[, 3] == "gene", ]
annot[, c(4, 5)] <- annot[, c(4, 5)] / 1000000
chromnum <- nrow(dat[dat$species == i, ])
if (chromnum == 0) {
next
}
top <- round(0.5 * chromnum, 0)
for (j in dat[dat$species == i, ]$name[1:top]) { # for each chromosome
chrom <- annot[annot[, 1] == j, ]
end <- dat[dat$species == i & dat$name == j, ]$size.Mbp
mid <- chrom[, 4]+((chrom[, 5]-chrom[, 4])/2)
cv <- sd(mid) / mean(mid)
df1 <- rbind(df1, data.frame(i, cv))
}
med <- median(df1)
df <- rbind(df, data.frame(i, med))
}
med <- median(df1)
df1$cv
dat <- read.csv("../results/parsed.csv")
sp <- gsub("_", " ", sub("\\..*", "", list.files("../data/annot")))
df <- data.frame()
for (i in sp) { # for each species
df1 <- data.frame()
annot <- read.table(paste0("../data/annot/", gsub(" ", "_", i), ".gtf"),
header = TRUE,
sep = "\t")
annot <- annot[annot[, 3] == "gene", ]
annot[, c(4, 5)] <- annot[, c(4, 5)] / 1000000
chromnum <- nrow(dat[dat$species == i, ])
if (chromnum == 0) {
next
}
top <- round(0.5 * chromnum, 0)
for (j in dat[dat$species == i, ]$name[1:top]) { # for each chromosome
chrom <- annot[annot[, 1] == j, ]
end <- dat[dat$species == i & dat$name == j, ]$size.Mbp
mid <- chrom[, 4]+((chrom[, 5]-chrom[, 4])/2)
cv <- sd(mid) / mean(mid)
df1 <- rbind(df1, data.frame(i, cv))
}
med <- median(df1$cv)
df <- rbind(df, data.frame(i, med))
}
l <- dat[!duplicated(dat$species), ]
plot(df$cv, l$rsq)
View(df)
View(df)
View(df1)
median(df1$cv)
sp
sp
i
l <- dat[!duplicated(dat$species), ]
plot(df$med, l$rsq)
summary(glm(df$med, l$rsq))
summary(glm(l$rsq ~ df$med))
library(phytools)
library(caper)
tree <- read.tree("../data/formatted_tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(tree$tip.label, df$i)
pruned.tree <- keep.tips(tree, int)
pruned.tree <- keep.tip(tree, int)
model <- glm(l$rsq ~ df$med)
phylosig(pruned.tree, model, method = "lambda", test = TRUE, nsim = 10000)
model
resid(model)
View(dat)
View(df)
res <- setNames(resid(model), df$i)
res
phylosig(pruned.tree,
res,
method = "lambda",
test = TRUE,
nsim = 10000)
m <- merge(df, l, by = "species")
?merge
m <- merge(df, l, by.x = "i", by.y = "species")
View(m)
?cd
?comparative.data
cd <- comparative.data(pruned.tree, m, names.col = "i", vcv = TRUE)
m <- m[, c("i", "med", "rsq")]
View(m)
cd <- comparative.data(pruned.tree, m, names.col = "i", vcv = TRUE)
pgls(rsq ~ med, data = m)
pgls(rsq ~ med, data = cd)
summary(pgls(rsq ~ med, data = cd))
dat <- dat[!duplicated(dat$species), ]
dat <- merge(dat, df, by.y = "i", by.x = "species")
dat <- dat[, c("i", "med", "rsq")]
dat <- dat[, c("species", "med", "rsq")]
plot(dat$med, dat$rsq)
library(phytools)
library(caper)
tree <- read.tree("../data/formatted_tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(tree$tip.label, dat$species)
pruned.tree <- keep.tip(tree, int)
model <- glm(rsq ~ df, data = dat)
model <- glm(rsq ~ med, data = dat)
res <- setNames(resid(model), dat$species)
phylosig(pruned.tree,
res,
method = "lambda",
test = TRUE,
nsim = 10000)
cd <- comparative.data(pruned.tree,
dat,
names.col = "species",
vcv = TRUE)
summary(pgls(rsq ~ med, data = dat))
summary(pgls(rsq ~ med, data = cd))
summary(dat$med, dat$rsq)
model <- glm(rsq ~ med, data = dat)
summary(model)
plot(dat$med, dat$rsq)
model <- glm(rsq ~ med, data = dat)
summary(model)
library(phytools)
library(caper)
tree <- read.tree("../data/formatted_tree.nwk")
tree$tip.label <- gsub("_", " ", tree$tip.label)
int <- intersect(tree$tip.label, dat$species)
pruned.tree <- keep.tip(tree, int)
res <- setNames(resid(model), dat$species)
phylosig(pruned.tree,
res,
method = "lambda",
test = TRUE,
nsim = 10000)
cd <- comparative.data(pruned.tree,
dat,
names.col = "species",
vcv = TRUE)
summary(pgls(rsq ~ med, data = cd))
